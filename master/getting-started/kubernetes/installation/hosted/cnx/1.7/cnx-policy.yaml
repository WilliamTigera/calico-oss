# This file contains Tigera Secure EE tiered security policy to control connectivity to Tigera Secure EE Manager and Tigera Secure EE API Server.
# See the documentation for a full reference on tiered security policy.

# Tier containing policies to allow access to Tigera Secure EE.
apiVersion: projectcalico.org/v3
kind: Tier
metadata:
  name: allow-cnx
spec:
  order: 100

---

# Allow users to access Tigera Secure EE Manager.
apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: allow-cnx.cnx-manager-access
  namespace: kube-system
spec:
  order: 1
  tier: allow-cnx
  selector: k8s-app == 'cnx-manager'
  types:
  - Ingress
  ingress:
  - action: Allow
    protocol: TCP
    source:
      # This policy allows access to Tigera Secure EE Manager from anywhere: narrow it down if
      # only certain subnets should be allowed.
      nets: ["0.0.0.0/0"]
    destination:
      # By default, Tigera Secure EE Manager is accessed over https. Update this if needed.
      ports: [9443]

---

# Allow the Kubernetes API Server access to Tigera Secure EE API Server.
apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: allow-cnx.cnx-apiserver-access
  namespace: kube-system
spec:
  order: 1
  tier: allow-cnx
  selector: k8s-app == 'cnx-apiserver'
  types:
  - Ingress
  ingress:
  - action: Allow
    protocol: TCP
    source:
      # This policy allows Tigera Secure EE API Server access from anywhere: replace it with
      # the addresses of your Kubernetes API Servers if those are static.
      nets: ["0.0.0.0/0"]
    destination:
      # The ports Tigera Secure EE API Server and Tigera Secure EE Query Server are configured to listen on.
      ports: [443, 5443, 8080, 10443]

---

# Add a label to the kube-system namespace so it can be referenced in network policy
apiVersion: v1
kind: Namespace
metadata:
  name: kube-system
  labels:
    name: kube-system

---
    
# Allow access to Elasticsearch client nodes from Kibana and fluentd
apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: allow-cnx.elasticsearch-access
  namespace: calico-monitoring
spec:
  order: 1
  tier: allow-cnx
  selector: name == 'es-client-tigera-elasticsearch'
  types:
  - Ingress
  ingress:
  - action: Allow
    protocol: TCP
    source:
      selector: k8s-app == 'tigera-fluentd-node'
      namespaceSelector: name == 'kube-system'
    destination:
      ports: [9200]
  - action: Allow
    protocol: TCP
    source:
      selector: name == 'kibana-tigera-elasticsearch'
    destination:
      ports: [9200]

---

# Allow internal communication within the ElasticSearch cluster
apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: allow-cnx.elasticsearch-internal
  namespace: calico-monitoring
spec:
  order: 1
  tier: allow-cnx
  selector: cluster == 'tigera-elasticsearch'
  types:
  - Ingress
  ingress:
  - action: Allow
    protocol: TCP
    source:
      selector: cluster == 'tigera-elasticsearch'
    destination:
      ports: [9300]

---

# Allow access to Kibana
apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: allow-cnx.kibana-access
  namespace: calico-monitoring
spec:
  order: 1
  tier: allow-cnx
  selector: name == 'kibana-tigera-elasticsearch'
  types:
  - Ingress
  ingress:
  - action: Allow
    protocol: TCP
    source:
      # This policy allows access to Kibana from anywhere.
      # Narrow this down to your management network or remove this
      # policy to block access to Kibana.
      nets: ["0.0.0.0/0"]
    destination:
      ports: [5601]
{
  "swagger": "2.0",
  "info": {
    "title": "",
    "version": "v3"
  },
  "host": "kubernetes.master",
  "basePath": "/apis/projectcalico.org/v3",
  "paths": {
    "/": {
      "get": {
        "consumes": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "description": "get available resources",
        "operationId": "getProjectcalicoOrgV3APIResources",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ]
      }
    },
    "/bgpconfigurations": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete collection of BGPConfiguration",
        "operationId": "deleteProjectcalicoOrgV3CollectionBGPConfiguration",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "BGPConfiguration",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "list or watch objects of kind BGPConfiguration",
        "operationId": "listProjectcalicoOrgV3BGPConfiguration",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.BGPConfigurationList"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "BGPConfiguration",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "post": {
        "consumes": [
          "*/*"
        ],
        "description": "create a BGPConfiguration",
        "operationId": "createProjectcalicoOrgV3BGPConfiguration",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.BGPConfiguration"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.BGPConfiguration"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.BGPConfiguration"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.BGPConfiguration"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "BGPConfiguration",
          "version": "v3"
        }
      }
    },
    "/bgpconfigurations/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete a BGPConfiguration",
        "operationId": "deleteProjectcalicoOrgV3BGPConfiguration",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions_v2"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "in": "query",
            "name": "propagationPolicy",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "BGPConfiguration",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "read the specified BGPConfiguration",
        "operationId": "readProjectcalicoOrgV3BGPConfiguration",
        "parameters": [
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.BGPConfiguration"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "BGPConfiguration",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "name of the BGPConfiguration",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "description": "partially update the specified BGPConfiguration",
        "operationId": "patchProjectcalicoOrgV3BGPConfiguration",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.BGPConfiguration"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "BGPConfiguration",
          "version": "v3"
        }
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "description": "replace the specified BGPConfiguration",
        "operationId": "replaceProjectcalicoOrgV3BGPConfiguration",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.BGPConfiguration"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.BGPConfiguration"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.BGPConfiguration"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "BGPConfiguration",
          "version": "v3"
        }
      }
    },
    "/bgppeers": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete collection of BGPPeer",
        "operationId": "deleteProjectcalicoOrgV3CollectionBGPPeer",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "BGPPeer",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "list or watch objects of kind BGPPeer",
        "operationId": "listProjectcalicoOrgV3BGPPeer",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.BGPPeerList"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "BGPPeer",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "post": {
        "consumes": [
          "*/*"
        ],
        "description": "create a BGPPeer",
        "operationId": "createProjectcalicoOrgV3BGPPeer",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.BGPPeer"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.BGPPeer"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.BGPPeer"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.BGPPeer"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "BGPPeer",
          "version": "v3"
        }
      }
    },
    "/bgppeers/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete a BGPPeer",
        "operationId": "deleteProjectcalicoOrgV3BGPPeer",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions_v2"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "in": "query",
            "name": "propagationPolicy",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "BGPPeer",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "read the specified BGPPeer",
        "operationId": "readProjectcalicoOrgV3BGPPeer",
        "parameters": [
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.BGPPeer"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "BGPPeer",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "name of the BGPPeer",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "description": "partially update the specified BGPPeer",
        "operationId": "patchProjectcalicoOrgV3BGPPeer",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.BGPPeer"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "BGPPeer",
          "version": "v3"
        }
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "description": "replace the specified BGPPeer",
        "operationId": "replaceProjectcalicoOrgV3BGPPeer",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.BGPPeer"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.BGPPeer"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.BGPPeer"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "BGPPeer",
          "version": "v3"
        }
      }
    },
    "/felixconfigurations": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete collection of FelixConfiguration",
        "operationId": "deleteProjectcalicoOrgV3CollectionFelixConfiguration",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "FelixConfiguration",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "list or watch objects of kind FelixConfiguration",
        "operationId": "listProjectcalicoOrgV3FelixConfiguration",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.FelixConfigurationList"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "FelixConfiguration",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "post": {
        "consumes": [
          "*/*"
        ],
        "description": "create a FelixConfiguration",
        "operationId": "createProjectcalicoOrgV3FelixConfiguration",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.FelixConfiguration"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.FelixConfiguration"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.FelixConfiguration"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.FelixConfiguration"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "FelixConfiguration",
          "version": "v3"
        }
      }
    },
    "/felixconfigurations/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete a FelixConfiguration",
        "operationId": "deleteProjectcalicoOrgV3FelixConfiguration",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions_v2"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "in": "query",
            "name": "propagationPolicy",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "FelixConfiguration",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "read the specified FelixConfiguration",
        "operationId": "readProjectcalicoOrgV3FelixConfiguration",
        "parameters": [
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.FelixConfiguration"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "FelixConfiguration",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "name of the FelixConfiguration",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "description": "partially update the specified FelixConfiguration",
        "operationId": "patchProjectcalicoOrgV3FelixConfiguration",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.FelixConfiguration"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "FelixConfiguration",
          "version": "v3"
        }
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "description": "replace the specified FelixConfiguration",
        "operationId": "replaceProjectcalicoOrgV3FelixConfiguration",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.FelixConfiguration"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.FelixConfiguration"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.FelixConfiguration"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "FelixConfiguration",
          "version": "v3"
        }
      }
    },
    "/globalnetworkpolicies": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete collection of GlobalNetworkPolicy",
        "operationId": "deleteProjectcalicoOrgV3CollectionGlobalNetworkPolicy",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "list or watch objects of kind GlobalNetworkPolicy",
        "operationId": "listProjectcalicoOrgV3GlobalNetworkPolicy",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalNetworkPolicyList"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "post": {
        "consumes": [
          "*/*"
        ],
        "description": "create a GlobalNetworkPolicy",
        "operationId": "createProjectcalicoOrgV3GlobalNetworkPolicy",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalNetworkPolicy"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalNetworkPolicy"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalNetworkPolicy"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalNetworkPolicy"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "version": "v3"
        }
      }
    },
    "/globalnetworkpolicies/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete a GlobalNetworkPolicy",
        "operationId": "deleteProjectcalicoOrgV3GlobalNetworkPolicy",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions_v2"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "in": "query",
            "name": "propagationPolicy",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "read the specified GlobalNetworkPolicy",
        "operationId": "readProjectcalicoOrgV3GlobalNetworkPolicy",
        "parameters": [
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalNetworkPolicy"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "name of the GlobalNetworkPolicy",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "description": "partially update the specified GlobalNetworkPolicy",
        "operationId": "patchProjectcalicoOrgV3GlobalNetworkPolicy",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalNetworkPolicy"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "version": "v3"
        }
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "description": "replace the specified GlobalNetworkPolicy",
        "operationId": "replaceProjectcalicoOrgV3GlobalNetworkPolicy",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalNetworkPolicy"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalNetworkPolicy"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalNetworkPolicy"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "version": "v3"
        }
      }
    },
    "/globalnetworksets": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete collection of GlobalNetworkSet",
        "operationId": "deleteProjectcalicoOrgV3CollectionGlobalNetworkSet",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalNetworkSet",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "list or watch objects of kind GlobalNetworkSet",
        "operationId": "listProjectcalicoOrgV3GlobalNetworkSet",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalNetworkSetList"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalNetworkSet",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "post": {
        "consumes": [
          "*/*"
        ],
        "description": "create a GlobalNetworkSet",
        "operationId": "createProjectcalicoOrgV3GlobalNetworkSet",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalNetworkSet"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalNetworkSet"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalNetworkSet"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalNetworkSet"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalNetworkSet",
          "version": "v3"
        }
      }
    },
    "/globalnetworksets/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete a GlobalNetworkSet",
        "operationId": "deleteProjectcalicoOrgV3GlobalNetworkSet",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions_v2"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "in": "query",
            "name": "propagationPolicy",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalNetworkSet",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "read the specified GlobalNetworkSet",
        "operationId": "readProjectcalicoOrgV3GlobalNetworkSet",
        "parameters": [
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalNetworkSet"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalNetworkSet",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "name of the GlobalNetworkSet",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "description": "partially update the specified GlobalNetworkSet",
        "operationId": "patchProjectcalicoOrgV3GlobalNetworkSet",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalNetworkSet"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalNetworkSet",
          "version": "v3"
        }
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "description": "replace the specified GlobalNetworkSet",
        "operationId": "replaceProjectcalicoOrgV3GlobalNetworkSet",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalNetworkSet"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalNetworkSet"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalNetworkSet"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalNetworkSet",
          "version": "v3"
        }
      }
    },
    "/globalreports": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete collection of GlobalReport",
        "operationId": "deleteProjectcalicoOrgV3CollectionGlobalReport",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalReport",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "list or watch objects of kind GlobalReport",
        "operationId": "listProjectcalicoOrgV3GlobalReport",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReportList"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalReport",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "post": {
        "consumes": [
          "*/*"
        ],
        "description": "create a GlobalReport",
        "operationId": "createProjectcalicoOrgV3GlobalReport",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReport"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReport"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReport"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReport"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalReport",
          "version": "v3"
        }
      }
    },
    "/globalreports/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete a GlobalReport",
        "operationId": "deleteProjectcalicoOrgV3GlobalReport",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions_v2"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "in": "query",
            "name": "propagationPolicy",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalReport",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "read the specified GlobalReport",
        "operationId": "readProjectcalicoOrgV3GlobalReport",
        "parameters": [
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReport"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalReport",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "name of the GlobalReport",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "description": "partially update the specified GlobalReport",
        "operationId": "patchProjectcalicoOrgV3GlobalReport",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReport"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalReport",
          "version": "v3"
        }
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "description": "replace the specified GlobalReport",
        "operationId": "replaceProjectcalicoOrgV3GlobalReport",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReport"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReport"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReport"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalReport",
          "version": "v3"
        }
      }
    },
    "/globalreports/{name}/status": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "read status of the specified GlobalReport",
        "operationId": "readProjectcalicoOrgV3GlobalReportStatus",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReport"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalReport",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "name of the GlobalReport",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "description": "partially update status of the specified GlobalReport",
        "operationId": "patchProjectcalicoOrgV3GlobalReportStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReport"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalReport",
          "version": "v3"
        }
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "description": "replace status of the specified GlobalReport",
        "operationId": "replaceProjectcalicoOrgV3GlobalReportStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReport"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReport"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReport"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalReport",
          "version": "v3"
        }
      }
    },
    "/globalreporttypes": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete collection of GlobalReportType",
        "operationId": "deleteProjectcalicoOrgV3CollectionGlobalReportType",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalReportType",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "list or watch objects of kind GlobalReportType",
        "operationId": "listProjectcalicoOrgV3GlobalReportType",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReportTypeList"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalReportType",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "post": {
        "consumes": [
          "*/*"
        ],
        "description": "create a GlobalReportType",
        "operationId": "createProjectcalicoOrgV3GlobalReportType",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReportType"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReportType"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReportType"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReportType"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalReportType",
          "version": "v3"
        }
      }
    },
    "/globalreporttypes/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete a GlobalReportType",
        "operationId": "deleteProjectcalicoOrgV3GlobalReportType",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions_v2"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "in": "query",
            "name": "propagationPolicy",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalReportType",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "read the specified GlobalReportType",
        "operationId": "readProjectcalicoOrgV3GlobalReportType",
        "parameters": [
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReportType"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalReportType",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "name of the GlobalReportType",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "description": "partially update the specified GlobalReportType",
        "operationId": "patchProjectcalicoOrgV3GlobalReportType",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReportType"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalReportType",
          "version": "v3"
        }
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "description": "replace the specified GlobalReportType",
        "operationId": "replaceProjectcalicoOrgV3GlobalReportType",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReportType"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReportType"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReportType"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalReportType",
          "version": "v3"
        }
      }
    },
    "/globalthreatfeeds": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete collection of GlobalThreatFeed",
        "operationId": "deleteProjectcalicoOrgV3CollectionGlobalThreatFeed",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalThreatFeed",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "list or watch objects of kind GlobalThreatFeed",
        "operationId": "listProjectcalicoOrgV3GlobalThreatFeed",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalThreatFeedList"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalThreatFeed",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "post": {
        "consumes": [
          "*/*"
        ],
        "description": "create a GlobalThreatFeed",
        "operationId": "createProjectcalicoOrgV3GlobalThreatFeed",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalThreatFeed",
          "version": "v3"
        }
      }
    },
    "/globalthreatfeeds/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete a GlobalThreatFeed",
        "operationId": "deleteProjectcalicoOrgV3GlobalThreatFeed",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions_v2"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "in": "query",
            "name": "propagationPolicy",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalThreatFeed",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "read the specified GlobalThreatFeed",
        "operationId": "readProjectcalicoOrgV3GlobalThreatFeed",
        "parameters": [
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalThreatFeed",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "name of the GlobalThreatFeed",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "description": "partially update the specified GlobalThreatFeed",
        "operationId": "patchProjectcalicoOrgV3GlobalThreatFeed",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalThreatFeed",
          "version": "v3"
        }
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "description": "replace the specified GlobalThreatFeed",
        "operationId": "replaceProjectcalicoOrgV3GlobalThreatFeed",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalThreatFeed",
          "version": "v3"
        }
      }
    },
    "/globalthreatfeeds/{name}/status": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "read status of the specified GlobalThreatFeed",
        "operationId": "readProjectcalicoOrgV3GlobalThreatFeedStatus",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalThreatFeed",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "name of the GlobalThreatFeed",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "description": "partially update status of the specified GlobalThreatFeed",
        "operationId": "patchProjectcalicoOrgV3GlobalThreatFeedStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalThreatFeed",
          "version": "v3"
        }
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "description": "replace status of the specified GlobalThreatFeed",
        "operationId": "replaceProjectcalicoOrgV3GlobalThreatFeedStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalThreatFeed",
          "version": "v3"
        }
      }
    },
    "/hostendpoints": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete collection of HostEndpoint",
        "operationId": "deleteProjectcalicoOrgV3CollectionHostEndpoint",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "HostEndpoint",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "list or watch objects of kind HostEndpoint",
        "operationId": "listProjectcalicoOrgV3HostEndpoint",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.HostEndpointList"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "HostEndpoint",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "post": {
        "consumes": [
          "*/*"
        ],
        "description": "create a HostEndpoint",
        "operationId": "createProjectcalicoOrgV3HostEndpoint",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.HostEndpoint"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.HostEndpoint"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.HostEndpoint"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.HostEndpoint"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "HostEndpoint",
          "version": "v3"
        }
      }
    },
    "/hostendpoints/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete a HostEndpoint",
        "operationId": "deleteProjectcalicoOrgV3HostEndpoint",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions_v2"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "in": "query",
            "name": "propagationPolicy",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "HostEndpoint",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "read the specified HostEndpoint",
        "operationId": "readProjectcalicoOrgV3HostEndpoint",
        "parameters": [
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.HostEndpoint"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "HostEndpoint",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "name of the HostEndpoint",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "description": "partially update the specified HostEndpoint",
        "operationId": "patchProjectcalicoOrgV3HostEndpoint",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.HostEndpoint"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "HostEndpoint",
          "version": "v3"
        }
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "description": "replace the specified HostEndpoint",
        "operationId": "replaceProjectcalicoOrgV3HostEndpoint",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.HostEndpoint"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.HostEndpoint"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.HostEndpoint"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "HostEndpoint",
          "version": "v3"
        }
      }
    },
    "/ippools": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete collection of IPPool",
        "operationId": "deleteProjectcalicoOrgV3CollectionIPPool",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "IPPool",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "list or watch objects of kind IPPool",
        "operationId": "listProjectcalicoOrgV3IPPool",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.IPPoolList"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "IPPool",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "post": {
        "consumes": [
          "*/*"
        ],
        "description": "create an IPPool",
        "operationId": "createProjectcalicoOrgV3IPPool",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.IPPool"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.IPPool"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.IPPool"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.IPPool"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "IPPool",
          "version": "v3"
        }
      }
    },
    "/ippools/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete an IPPool",
        "operationId": "deleteProjectcalicoOrgV3IPPool",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions_v2"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "in": "query",
            "name": "propagationPolicy",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "IPPool",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "read the specified IPPool",
        "operationId": "readProjectcalicoOrgV3IPPool",
        "parameters": [
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.IPPool"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "IPPool",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "name of the IPPool",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "description": "partially update the specified IPPool",
        "operationId": "patchProjectcalicoOrgV3IPPool",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.IPPool"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "IPPool",
          "version": "v3"
        }
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "description": "replace the specified IPPool",
        "operationId": "replaceProjectcalicoOrgV3IPPool",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.IPPool"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.IPPool"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.IPPool"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "IPPool",
          "version": "v3"
        }
      }
    },
    "/licensekeys": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete collection of LicenseKey",
        "operationId": "deleteProjectcalicoOrgV3CollectionLicenseKey",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "LicenseKey",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "list or watch objects of kind LicenseKey",
        "operationId": "listProjectcalicoOrgV3LicenseKey",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.LicenseKeyList"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "LicenseKey",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "post": {
        "consumes": [
          "*/*"
        ],
        "description": "create a LicenseKey",
        "operationId": "createProjectcalicoOrgV3LicenseKey",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.LicenseKey"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.LicenseKey"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.LicenseKey"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.LicenseKey"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "LicenseKey",
          "version": "v3"
        }
      }
    },
    "/licensekeys/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete a LicenseKey",
        "operationId": "deleteProjectcalicoOrgV3LicenseKey",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions_v2"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "in": "query",
            "name": "propagationPolicy",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "LicenseKey",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "read the specified LicenseKey",
        "operationId": "readProjectcalicoOrgV3LicenseKey",
        "parameters": [
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.LicenseKey"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "LicenseKey",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "name of the LicenseKey",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "description": "partially update the specified LicenseKey",
        "operationId": "patchProjectcalicoOrgV3LicenseKey",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.LicenseKey"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "LicenseKey",
          "version": "v3"
        }
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "description": "replace the specified LicenseKey",
        "operationId": "replaceProjectcalicoOrgV3LicenseKey",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.LicenseKey"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.LicenseKey"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.LicenseKey"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "LicenseKey",
          "version": "v3"
        }
      }
    },
    "/managedclusters": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete collection of ManagedCluster",
        "operationId": "deleteProjectcalicoOrgV3CollectionManagedCluster",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "ManagedCluster",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "list or watch objects of kind ManagedCluster",
        "operationId": "listProjectcalicoOrgV3ManagedCluster",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.ManagedClusterList"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "ManagedCluster",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "post": {
        "consumes": [
          "*/*"
        ],
        "description": "create a ManagedCluster",
        "operationId": "createProjectcalicoOrgV3ManagedCluster",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.ManagedCluster"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.ManagedCluster"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.ManagedCluster"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.ManagedCluster"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "ManagedCluster",
          "version": "v3"
        }
      }
    },
    "/managedclusters/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete a ManagedCluster",
        "operationId": "deleteProjectcalicoOrgV3ManagedCluster",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions_v2"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "in": "query",
            "name": "propagationPolicy",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "ManagedCluster",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "read the specified ManagedCluster",
        "operationId": "readProjectcalicoOrgV3ManagedCluster",
        "parameters": [
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.ManagedCluster"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "ManagedCluster",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "name of the ManagedCluster",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "description": "partially update the specified ManagedCluster",
        "operationId": "patchProjectcalicoOrgV3ManagedCluster",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.ManagedCluster"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "ManagedCluster",
          "version": "v3"
        }
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "description": "replace the specified ManagedCluster",
        "operationId": "replaceProjectcalicoOrgV3ManagedCluster",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.ManagedCluster"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.ManagedCluster"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.ManagedCluster"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "ManagedCluster",
          "version": "v3"
        }
      }
    },
    "/namespaces/{namespace}/networkpolicies": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete collection of NetworkPolicy",
        "operationId": "deleteProjectcalicoOrgV3CollectionNamespacedNetworkPolicy",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "NetworkPolicy",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "list or watch objects of kind NetworkPolicy",
        "operationId": "listProjectcalicoOrgV3NamespacedNetworkPolicy",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.NetworkPolicyList"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "NetworkPolicy",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "object name and auth scope, such as for teams and projects",
          "in": "path",
          "name": "namespace",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "post": {
        "consumes": [
          "*/*"
        ],
        "description": "create a NetworkPolicy",
        "operationId": "createProjectcalicoOrgV3NamespacedNetworkPolicy",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.NetworkPolicy"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.NetworkPolicy"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.NetworkPolicy"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.NetworkPolicy"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "NetworkPolicy",
          "version": "v3"
        }
      }
    },
    "/namespaces/{namespace}/networkpolicies/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete a NetworkPolicy",
        "operationId": "deleteProjectcalicoOrgV3NamespacedNetworkPolicy",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions_v2"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "in": "query",
            "name": "propagationPolicy",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "NetworkPolicy",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "read the specified NetworkPolicy",
        "operationId": "readProjectcalicoOrgV3NamespacedNetworkPolicy",
        "parameters": [
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.NetworkPolicy"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "NetworkPolicy",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "name of the NetworkPolicy",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "object name and auth scope, such as for teams and projects",
          "in": "path",
          "name": "namespace",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "description": "partially update the specified NetworkPolicy",
        "operationId": "patchProjectcalicoOrgV3NamespacedNetworkPolicy",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.NetworkPolicy"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "NetworkPolicy",
          "version": "v3"
        }
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "description": "replace the specified NetworkPolicy",
        "operationId": "replaceProjectcalicoOrgV3NamespacedNetworkPolicy",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.NetworkPolicy"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.NetworkPolicy"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.NetworkPolicy"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "NetworkPolicy",
          "version": "v3"
        }
      }
    },
    "/networkpolicies": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "list or watch objects of kind NetworkPolicy",
        "operationId": "listProjectcalicoOrgV3NetworkPolicyForAllNamespaces",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.NetworkPolicyList"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "NetworkPolicy",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/profiles": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete collection of Profile",
        "operationId": "deleteProjectcalicoOrgV3CollectionProfile",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "Profile",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "list or watch objects of kind Profile",
        "operationId": "listProjectcalicoOrgV3Profile",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.ProfileList"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "Profile",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "post": {
        "consumes": [
          "*/*"
        ],
        "description": "create a Profile",
        "operationId": "createProjectcalicoOrgV3Profile",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.Profile"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.Profile"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.Profile"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.Profile"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "Profile",
          "version": "v3"
        }
      }
    },
    "/profiles/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete a Profile",
        "operationId": "deleteProjectcalicoOrgV3Profile",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions_v2"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "in": "query",
            "name": "propagationPolicy",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "Profile",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "read the specified Profile",
        "operationId": "readProjectcalicoOrgV3Profile",
        "parameters": [
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.Profile"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "Profile",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "name of the Profile",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "description": "partially update the specified Profile",
        "operationId": "patchProjectcalicoOrgV3Profile",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.Profile"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "Profile",
          "version": "v3"
        }
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "description": "replace the specified Profile",
        "operationId": "replaceProjectcalicoOrgV3Profile",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.Profile"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.Profile"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.Profile"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "Profile",
          "version": "v3"
        }
      }
    },
    "/remoteclusterconfigurations": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete collection of RemoteClusterConfiguration",
        "operationId": "deleteProjectcalicoOrgV3CollectionRemoteClusterConfiguration",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "RemoteClusterConfiguration",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "list or watch objects of kind RemoteClusterConfiguration",
        "operationId": "listProjectcalicoOrgV3RemoteClusterConfiguration",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.RemoteClusterConfigurationList"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "RemoteClusterConfiguration",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "post": {
        "consumes": [
          "*/*"
        ],
        "description": "create a RemoteClusterConfiguration",
        "operationId": "createProjectcalicoOrgV3RemoteClusterConfiguration",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.RemoteClusterConfiguration"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.RemoteClusterConfiguration"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.RemoteClusterConfiguration"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.RemoteClusterConfiguration"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "RemoteClusterConfiguration",
          "version": "v3"
        }
      }
    },
    "/remoteclusterconfigurations/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete a RemoteClusterConfiguration",
        "operationId": "deleteProjectcalicoOrgV3RemoteClusterConfiguration",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions_v2"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "in": "query",
            "name": "propagationPolicy",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "RemoteClusterConfiguration",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "read the specified RemoteClusterConfiguration",
        "operationId": "readProjectcalicoOrgV3RemoteClusterConfiguration",
        "parameters": [
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.RemoteClusterConfiguration"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "RemoteClusterConfiguration",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "name of the RemoteClusterConfiguration",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "description": "partially update the specified RemoteClusterConfiguration",
        "operationId": "patchProjectcalicoOrgV3RemoteClusterConfiguration",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.RemoteClusterConfiguration"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "RemoteClusterConfiguration",
          "version": "v3"
        }
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "description": "replace the specified RemoteClusterConfiguration",
        "operationId": "replaceProjectcalicoOrgV3RemoteClusterConfiguration",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.RemoteClusterConfiguration"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.RemoteClusterConfiguration"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.RemoteClusterConfiguration"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "RemoteClusterConfiguration",
          "version": "v3"
        }
      }
    },
    "/tiers": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete collection of Tier",
        "operationId": "deleteProjectcalicoOrgV3CollectionTier",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "Tier",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "list or watch objects of kind Tier",
        "operationId": "listProjectcalicoOrgV3Tier",
        "parameters": [
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If true, partially initialized resources are included in the response.",
            "in": "query",
            "name": "includeUninitialized",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.TierList"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "Tier",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "post": {
        "consumes": [
          "*/*"
        ],
        "description": "create a Tier",
        "operationId": "createProjectcalicoOrgV3Tier",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.Tier"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.Tier"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.Tier"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.Tier"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "Tier",
          "version": "v3"
        }
      }
    },
    "/tiers/{name}": {
      "delete": {
        "consumes": [
          "*/*"
        ],
        "description": "delete a Tier",
        "operationId": "deleteProjectcalicoOrgV3Tier",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions_v2"
            }
          },
          {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "in": "query",
            "name": "gracePeriodSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "in": "query",
            "name": "orphanDependents",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "in": "query",
            "name": "propagationPolicy",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "Tier",
          "version": "v3"
        }
      },
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "read the specified Tier",
        "operationId": "readProjectcalicoOrgV3Tier",
        "parameters": [
          {
            "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
            "in": "query",
            "name": "exact",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "Should this value be exported.  Export strips fields that a user can not specify.",
            "in": "query",
            "name": "export",
            "type": "boolean",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.Tier"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "Tier",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "name of the Tier",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        }
      ],
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json"
        ],
        "description": "partially update the specified Tier",
        "operationId": "patchProjectcalicoOrgV3Tier",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.Tier"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "Tier",
          "version": "v3"
        }
      },
      "put": {
        "consumes": [
          "*/*"
        ],
        "description": "replace the specified Tier",
        "operationId": "replaceProjectcalicoOrgV3Tier",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.Tier"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.Tier"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.Tier"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "Tier",
          "version": "v3"
        }
      }
    },
    "/watch/bgpconfigurations": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch individual changes to a list of BGPConfiguration",
        "operationId": "watchProjectcalicoOrgV3BGPConfigurationList",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "BGPConfiguration",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/bgpconfigurations/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch changes to an object of kind BGPConfiguration",
        "operationId": "watchProjectcalicoOrgV3BGPConfiguration",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "BGPConfiguration",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "name of the BGPConfiguration",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/bgppeers": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch individual changes to a list of BGPPeer",
        "operationId": "watchProjectcalicoOrgV3BGPPeerList",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "BGPPeer",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/bgppeers/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch changes to an object of kind BGPPeer",
        "operationId": "watchProjectcalicoOrgV3BGPPeer",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "BGPPeer",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "name of the BGPPeer",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/felixconfigurations": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch individual changes to a list of FelixConfiguration",
        "operationId": "watchProjectcalicoOrgV3FelixConfigurationList",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "FelixConfiguration",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/felixconfigurations/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch changes to an object of kind FelixConfiguration",
        "operationId": "watchProjectcalicoOrgV3FelixConfiguration",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "FelixConfiguration",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "name of the FelixConfiguration",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/globalnetworkpolicies": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch individual changes to a list of GlobalNetworkPolicy",
        "operationId": "watchProjectcalicoOrgV3GlobalNetworkPolicyList",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/globalnetworkpolicies/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch changes to an object of kind GlobalNetworkPolicy",
        "operationId": "watchProjectcalicoOrgV3GlobalNetworkPolicy",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "name of the GlobalNetworkPolicy",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/globalnetworksets": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch individual changes to a list of GlobalNetworkSet",
        "operationId": "watchProjectcalicoOrgV3GlobalNetworkSetList",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalNetworkSet",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/globalnetworksets/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch changes to an object of kind GlobalNetworkSet",
        "operationId": "watchProjectcalicoOrgV3GlobalNetworkSet",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalNetworkSet",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "name of the GlobalNetworkSet",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/globalreports": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch individual changes to a list of GlobalReport",
        "operationId": "watchProjectcalicoOrgV3GlobalReportList",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalReport",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/globalreports/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch changes to an object of kind GlobalReport",
        "operationId": "watchProjectcalicoOrgV3GlobalReport",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalReport",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "name of the GlobalReport",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/globalreporttypes": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch individual changes to a list of GlobalReportType",
        "operationId": "watchProjectcalicoOrgV3GlobalReportTypeList",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalReportType",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/globalreporttypes/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch changes to an object of kind GlobalReportType",
        "operationId": "watchProjectcalicoOrgV3GlobalReportType",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalReportType",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "name of the GlobalReportType",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/globalthreatfeeds": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch individual changes to a list of GlobalThreatFeed",
        "operationId": "watchProjectcalicoOrgV3GlobalThreatFeedList",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalThreatFeed",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/globalthreatfeeds/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch changes to an object of kind GlobalThreatFeed",
        "operationId": "watchProjectcalicoOrgV3GlobalThreatFeed",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "GlobalThreatFeed",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "name of the GlobalThreatFeed",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/hostendpoints": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch individual changes to a list of HostEndpoint",
        "operationId": "watchProjectcalicoOrgV3HostEndpointList",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "HostEndpoint",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/hostendpoints/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch changes to an object of kind HostEndpoint",
        "operationId": "watchProjectcalicoOrgV3HostEndpoint",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "HostEndpoint",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "name of the HostEndpoint",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/ippools": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch individual changes to a list of IPPool",
        "operationId": "watchProjectcalicoOrgV3IPPoolList",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "IPPool",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/ippools/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch changes to an object of kind IPPool",
        "operationId": "watchProjectcalicoOrgV3IPPool",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "IPPool",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "name of the IPPool",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/licensekeys": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch individual changes to a list of LicenseKey",
        "operationId": "watchProjectcalicoOrgV3LicenseKeyList",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "LicenseKey",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/licensekeys/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch changes to an object of kind LicenseKey",
        "operationId": "watchProjectcalicoOrgV3LicenseKey",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "LicenseKey",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "name of the LicenseKey",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/managedclusters": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch individual changes to a list of ManagedCluster",
        "operationId": "watchProjectcalicoOrgV3ManagedClusterList",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "ManagedCluster",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/managedclusters/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch changes to an object of kind ManagedCluster",
        "operationId": "watchProjectcalicoOrgV3ManagedCluster",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "ManagedCluster",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "name of the ManagedCluster",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/namespaces/{namespace}/networkpolicies": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch individual changes to a list of NetworkPolicy",
        "operationId": "watchProjectcalicoOrgV3NamespacedNetworkPolicyList",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "NetworkPolicy",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "object name and auth scope, such as for teams and projects",
          "in": "path",
          "name": "namespace",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/namespaces/{namespace}/networkpolicies/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch changes to an object of kind NetworkPolicy",
        "operationId": "watchProjectcalicoOrgV3NamespacedNetworkPolicy",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "NetworkPolicy",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "name of the NetworkPolicy",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "object name and auth scope, such as for teams and projects",
          "in": "path",
          "name": "namespace",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/networkpolicies": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch individual changes to a list of NetworkPolicy",
        "operationId": "watchProjectcalicoOrgV3NetworkPolicyListForAllNamespaces",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "NetworkPolicy",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/profiles": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch individual changes to a list of Profile",
        "operationId": "watchProjectcalicoOrgV3ProfileList",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "Profile",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/profiles/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch changes to an object of kind Profile",
        "operationId": "watchProjectcalicoOrgV3Profile",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "Profile",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "name of the Profile",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/remoteclusterconfigurations": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch individual changes to a list of RemoteClusterConfiguration",
        "operationId": "watchProjectcalicoOrgV3RemoteClusterConfigurationList",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "RemoteClusterConfiguration",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/remoteclusterconfigurations/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch changes to an object of kind RemoteClusterConfiguration",
        "operationId": "watchProjectcalicoOrgV3RemoteClusterConfiguration",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "RemoteClusterConfiguration",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "name of the RemoteClusterConfiguration",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/tiers": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch individual changes to a list of Tier",
        "operationId": "watchProjectcalicoOrgV3TierList",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "Tier",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    },
    "/watch/tiers/{name}": {
      "get": {
        "consumes": [
          "*/*"
        ],
        "description": "watch changes to an object of kind Tier",
        "operationId": "watchProjectcalicoOrgV3Tier",
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent_v2"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "schemes": [
          "https"
        ],
        "tags": [
          ""
        ],
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "projectcalico.org",
          "kind": "Tier",
          "version": "v3"
        }
      },
      "parameters": [
        {
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "in": "query",
          "name": "continue",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "in": "query",
          "name": "fieldSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If true, partially initialized resources are included in the response.",
          "in": "query",
          "name": "includeUninitialized",
          "type": "boolean",
          "uniqueItems": true
        },
        {
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "in": "query",
          "name": "labelSelector",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "in": "query",
          "name": "limit",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "name of the Tier",
          "in": "path",
          "name": "name",
          "required": true,
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "If 'true', then the output is pretty printed.",
          "in": "query",
          "name": "pretty",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
          "in": "query",
          "name": "resourceVersion",
          "type": "string",
          "uniqueItems": true
        },
        {
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "in": "query",
          "name": "timeoutSeconds",
          "type": "integer",
          "uniqueItems": true
        },
        {
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "in": "query",
          "name": "watch",
          "type": "boolean",
          "uniqueItems": true
        }
      ]
    }
  },
  "definitions": {
    "com.github.projectcalico.libcalico-go.lib.apis.v1.IPIPConfiguration": {
      "properties": {
        "enabled": {
          "description": "When enabled is true, ipip tunneling will be used to deliver packets to destinations within this pool.",
          "type": "boolean"
        },
        "mode": {
          "description": "The IPIP mode.  This can be one of \"always\" or \"cross-subnet\".  A mode of \"always\" will also use IPIP tunneling for routing to destination IP addresses within this pool.  A mode of \"cross-subnet\" will only use IPIP tunneling when the destination node is on a different subnet to the originating node.  The default value (if not specified) is \"always\".",
          "type": "string"
        }
      }
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.AuditEventsSelection": {
      "description": "AuditEventsSelection defines which set of resources should be audited.",
      "properties": {
        "resources": {
          "description": "Resources lists the resources that will be included in the audit logs in the ReportData.  Blank fields in the listed ResourceID structs are treated as wildcards.",
          "items": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.AuditResource"
          },
          "type": "array"
        }
      }
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.AuditResource": {
      "description": "AuditResource is used to filter Audit events in the Report configuration.\n\nAn empty field value indicates a wildcard. For example, if Resource is set to \"networkpolicies\" and all other fields are blank then this filter would include all NetworkPolicy resources across all namespaces, and would include both Calico and Kubernetes resource types.",
      "properties": {
        "apiGroup": {
          "description": "APIGroup is the name of the API group that contains the referred object (e.g. projectcalico.org).",
          "type": "string"
        },
        "apiVersion": {
          "description": "APIVersion is the version of the API group that contains the referred object (e.g. v3).",
          "type": "string"
        },
        "name": {
          "description": "The resource name.",
          "type": "string"
        },
        "namespace": {
          "description": "The resource namespace.",
          "type": "string"
        },
        "resource": {
          "description": "The resource type. The format is the lowercase plural as used in audit event selection and RBAC configuration.",
          "type": "string"
        }
      }
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.BGPConfigurationSpec": {
      "description": "BGPConfigurationSpec contains the values of the BGP configuration.",
      "properties": {
        "asNumber": {
          "description": "ASNumber is the default AS number used by a node. [Default: 64512]",
          "format": "int64",
          "type": "integer"
        },
        "extensions": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Extensions is a mapping of keys to values that can be used in custom BGP templates",
          "type": "object"
        },
        "logSeverityScreen": {
          "description": "LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: INFO]",
          "type": "string"
        },
        "nodeToNodeMeshEnabled": {
          "description": "NodeToNodeMeshEnabled sets whether full node to node BGP mesh is enabled. [Default: true]",
          "type": "boolean"
        }
      }
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.BGPPeerSpec": {
      "description": "BGPPeerSpec contains the specification for a BGPPeer resource.",
      "properties": {
        "asNumber": {
          "description": "The AS Number of the peer.",
          "format": "int64",
          "type": "integer"
        },
        "extensions": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Extensions is a mapping of keys to values that can be used in custom BGP templates",
          "type": "object"
        },
        "node": {
          "description": "The node name identifying the Calico node instance that is peering with this peer. If this is not set, this represents a global peer, i.e. a peer that peers with every node in the deployment.",
          "type": "string"
        },
        "nodeSelector": {
          "description": "Selector for the nodes that should have this peering.  When this is set, the Node field must be empty.",
          "type": "string"
        },
        "peerIP": {
          "description": "The IP address of the peer.",
          "type": "string"
        },
        "peerSelector": {
          "description": "Selector for the remote nodes to peer with.  When this is set, the PeerIP and ASNumber fields must be empty.  For each peering between the local node and selected remote nodes, we configure an IPv4 peering if both ends have NodeBGPSpec.IPv4Address specified, and an IPv6 peering if both ends have NodeBGPSpec.IPv6Address specified.  The remote AS number comes from the remote node’s NodeBGPSpec.ASNumber, or the global default if that is not set.",
          "type": "string"
        }
      },
      "required": [
        "peerIP",
        "asNumber"
      ]
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.CISBenchmarkFilter": {
      "description": "CISBenchmarkFilter provides filters for a set of benchmarks that match particular selection criteria.",
      "properties": {
        "benchmarkSelection": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.CISBenchmarkSelection",
          "description": "BenchmarkSelection specifies which benchmarks this filter applies to. If not specified, applies to all."
        },
        "exclude": {
          "description": "Exclude is an array of test indices to exclude from the report.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "include": {
          "description": "Include is an array of test indices to show in the report. Is additive if IncludeUnscoredTests is true. Takes precedence over Exclude.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.CISBenchmarkParams": {
      "description": "CISBenchmarkParams contains the parameters for configuring a CIS benchmark report.",
      "properties": {
        "highThreshold": {
          "description": "Interpretted as a percentage to indicate at what levels of passing tests a node should be considered HIGH, MED, and LOW. - If \u003e= HighThreshold flag as high - Otherwise, if \u003e MedThreshold flag as med - Otherwise flag as low.",
          "format": "int32",
          "type": "integer"
        },
        "includeUnscoredTests": {
          "description": "Specifies if the report should also show results for scored/not-scored tests.",
          "type": "boolean"
        },
        "medThreshold": {
          "format": "int32",
          "type": "integer"
        },
        "numFailedTests": {
          "description": "Configure the number of top failed tests to show up on the report.",
          "format": "int32",
          "type": "integer"
        },
        "resultsFilters": {
          "description": "Benchmark results filters. The first matching set of filters is applied to each set of benchmark results. If there are no matching filters, the full set of benchmark results will be included in the report.",
          "items": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.CISBenchmarkFilter"
          },
          "type": "array"
        }
      }
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.CISBenchmarkSelection": {
      "description": "CISBenchmarkSelection selects a particular set of benchmarks.",
      "properties": {
        "kubernetesVersion": {
          "description": "KubernetesVersion is used select nodes that are running a specific version of kubelet. The full version need not be fully specified down to the patch level, in which case the significant parts of the version are matched. e.g. \"1.0\" will match versions \"1.0.1\" and \"1.0.2\" If not specified, matches all versions.",
          "type": "string"
        }
      }
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.CompletedReportJob": {
      "description": "CompletedReportJob augments the ReportJob with completion details.",
      "properties": {
        "end": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "The end time of the report."
        },
        "job": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference",
          "description": "A reference to the report creation job if known."
        },
        "jobCompletionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "The time the report job completed."
        },
        "start": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "The start time of the report."
        }
      },
      "required": [
        "start",
        "end",
        "job"
      ]
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.EndpointPort": {
      "properties": {
        "name": {
          "type": "string"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        },
        "protocol": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.numorstring.Protocol"
        }
      },
      "required": [
        "name",
        "protocol",
        "port"
      ]
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.EndpointsSelection": {
      "description": "EndpointsSelection is a set of selectors used to select the endpoints that are considered to be in-scope for the report. An empty selector is equivalent to all(). All three selectors are ANDed together.",
      "properties": {
        "namespaces": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.NamesAndLabelsMatch",
          "description": "Namespace match restricts endpoint selection to those in the selected namespaces."
        },
        "selector": {
          "description": "Selector, selects endpoints by endpoint labels. If omitted, all endpoints are included in the report data.",
          "type": "string"
        },
        "serviceAccounts": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.NamesAndLabelsMatch",
          "description": "ServiceAccount match restricts endpoint selection to those in the selected service accounts."
        }
      }
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.EntityRule": {
      "description": "An EntityRule is a sub-component of a Rule comprising the match criteria specific to a particular entity (that is either the source or destination).\n\nA source EntityRule matches the source endpoint and originating traffic. A destination EntityRule matches the destination endpoint and terminating traffic.",
      "properties": {
        "domains": {
          "description": "Domains is an optional field, valid for egress Allow rules only, that restricts the rule to apply only to traffic to one of the specified domains.  If this field is specified, Action must be Allow, and Nets and Selector must both be left empty.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "namespaceSelector": {
          "description": "NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and Selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule.\n\nFor NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy.\n\nFor GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.",
          "type": "string"
        },
        "nets": {
          "description": "Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "notNets": {
          "description": "NotNets is the negated version of the Nets field.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "notPorts": {
          "description": "NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \"TCP\" or \"UDP\".",
          "items": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.numorstring.Port"
          },
          "type": "array"
        },
        "notSelector": {
          "description": "NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.",
          "type": "string"
        },
        "ports": {
          "description": "Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports.\n\nSince only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \"TCP\" or \"UDP\".",
          "items": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.numorstring.Port"
          },
          "type": "array"
        },
        "selector": {
          "description": "Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched.\n\nNote that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match:\n\n\tSelector = \"!has(my_label)\" matches packets that are from other Calico-controlled\n\tendpoints that do not have the label “my_label”.\n\n\tNotSelector = \"has(my_label)\" matches packets that are not from Calico-controlled\n\tendpoints that do have the label “my_label”.\n\nThe effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.",
          "type": "string"
        },
        "serviceAccounts": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ServiceAccountMatch",
          "description": "ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account."
        }
      }
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.ErrorCondition": {
      "properties": {
        "message": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "message"
      ]
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.FelixConfigurationSpec": {
      "description": "FelixConfigurationSpec contains the values of the Felix configuration.",
      "properties": {
        "XDPRefreshInterval": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
          "description": "XDPRefreshInterval is the period at which Felix re-checks all XDP state to ensure that no other process has accidentally broken Calico's BPF maps or attached programs. Set to 0 to disable XDP refresh. [Default: 90s]"
        },
        "chainInsertMode": {
          "description": "ChainInsertMode controls whether Felix hooks the kernel’s top-level iptables chains by inserting a rule at the top of the chain or by appending a rule at the bottom. insert is the safe default since it prevents Calico’s rules from being bypassed. If you switch to append mode, be sure that the other rules in the chains signal acceptance by falling through to the Calico rules, otherwise the Calico policy will be bypassed. [Default: insert]",
          "type": "string"
        },
        "cloudWatchLogsAggregationKindForAllowed": {
          "description": "CloudWatchLogsAggregationKindForAllowed is used to choose the type of aggregation for flow log entries created for allowed connections. [Default: 2 - pod prefix name based aggregation]. Accepted values are 0, 1 and 2. 0 - No aggregation 1 - Source port based aggregation 2 - Pod prefix name based aggreagation.",
          "format": "int32",
          "type": "integer"
        },
        "cloudWatchLogsAggregationKindForDenied": {
          "description": "CloudWatchLogsAggregationKindForDenied is used to choose the type of aggregation for flow log entries created for denied connections. [Default: 1 - source port based aggregation]. Accepted values are 0, 1 and 2. 0 - No aggregation 1 - Source port based aggregation 2 - Pod prefix name based aggreagation.",
          "format": "int32",
          "type": "integer"
        },
        "cloudWatchLogsEnableHostEndpoint": {
          "description": "Deprecated: Use FlowLogsEnableHostEndpoint.",
          "type": "boolean"
        },
        "cloudWatchLogsEnabledForAllowed": {
          "description": "CloudWatchLogsEnabledForAllowed is used to enable/disable flow logs entries created for allowed connections. Default is true. This parameter only takes effect when CloudWatchLogsReporterEnabled is set to true.",
          "type": "boolean"
        },
        "cloudWatchLogsEnabledForDenied": {
          "description": "CloudWatchLogsEnabledForDenied is used to enable/disable flow logs entries created for denied flows. Default is true. This parameter only takes effect when CloudWatchLogsReporterEnabled is set to true.",
          "type": "boolean"
        },
        "cloudWatchLogsFlushInterval": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
          "description": "Deprecated: Use FlowLogsFlushInterval instead."
        },
        "cloudWatchLogsIncludeLabels": {
          "description": "CloudWatchLogsIncludeLabels is used to configure if endpoint labels are included in a Flow log entry.",
          "type": "boolean"
        },
        "cloudWatchLogsIncludePolicies": {
          "description": "CloudWatchLogsIncludePolicies is used to configure if policy information are included in a Flow log entry.",
          "type": "boolean"
        },
        "cloudWatchLogsLogGroupName": {
          "description": "CloudWatchLogsLogGroupName configures the Log group to use for exporting flow logs. Defaults to \"tigera-flowlogs-\u003ccluster-guid\u003e\".",
          "type": "string"
        },
        "cloudWatchLogsLogStreamName": {
          "description": "CloudWatchLogsLogStreamName configures the Log stream to use for exporting flow logs. Defaults to \"\u003cfelix-hostname\u003e_Flowlogs\".",
          "type": "string"
        },
        "cloudWatchLogsReporterEnabled": {
          "description": "Enable Flow logs reporting to AWS CloudWatch.",
          "type": "boolean"
        },
        "cloudWatchLogsRetentionDays": {
          "description": "Number of days for which to retain logs. See https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutRetentionPolicy.html for allowed values.",
          "format": "int32",
          "type": "integer"
        },
        "cloudWatchMetricsPushIntervalSecs": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
          "description": "CloudWatchMetricsPushInterval configures the interval at which Felix exports metrics to CloudWatch."
        },
        "cloudWatchMetricsReporterEnabled": {
          "description": "Enable reporting metrics to CloudWatch.",
          "type": "boolean"
        },
        "cloudWatchNodeHealthPushIntervalSecs": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
          "description": "CloudWatchNodeHealthPushIntervalSecs configures the frequency of pushing the node health metrics to CloudWatch."
        },
        "cloudWatchNodeHealthStatusEnabled": {
          "description": "CloudWatchNodeHealthStatusEnabled enables pushing node health data to CloudWatch.",
          "type": "boolean"
        },
        "dataplaneDriver": {
          "type": "string"
        },
        "debugDisableLogDropping": {
          "type": "boolean"
        },
        "debugMemoryProfilePath": {
          "type": "string"
        },
        "debugSimulateCalcGraphHangAfter": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        },
        "debugSimulateDataplaneHangAfter": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        },
        "defaultEndpointToHostAction": {
          "description": "DefaultEndpointToHostAction controls what happens to traffic that goes from a workload endpoint to the host itself (after the traffic hits the endpoint egress policy). By default Calico blocks traffic from workload endpoints to the host itself with an iptables “DROP” action. If you want to allow some or all traffic from endpoint to host, set this parameter to RETURN or ACCEPT. Use RETURN if you have your own rules in the iptables “INPUT” chain; Calico will insert its rules at the top of that chain, then “RETURN” packets to the “INPUT” chain once it has completed processing workload endpoint egress policy. Use ACCEPT to unconditionally accept packets from workloads after processing workload endpoint egress policy. [Default: Drop]",
          "type": "string"
        },
        "deletedMetricsRetentionSecs": {
          "format": "int32",
          "type": "integer"
        },
        "disableConntrackInvalidCheck": {
          "type": "boolean"
        },
        "dnsCacheFile": {
          "description": "The name of the file that Felix uses to preserve learnt DNS information when restarting. [Default: \"/var/run/calico/felix-dns-cache.txt\"].",
          "type": "string"
        },
        "dnsCacheSaveInterval": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
          "description": "The periodic interval at which Felix saves learnt DNS information to the cache file. [Default: 60s]."
        },
        "dnsLogsFileAggregationKind": {
          "description": "DNSLogsFileAggregationKind is used to choose the type of aggregation for DNS log entries. [Default: 1 - client name prefix aggregation]. Accepted values are 0 and 1. 0 - No aggregation 1 - Aggregate over clients with the same name prefix",
          "format": "int32",
          "type": "integer"
        },
        "dnsLogsFileDirectory": {
          "description": "DNSLogsFileDirectory sets the directory where DNS log files are stored. [Default: /var/log/calico/dnslogs]",
          "type": "string"
        },
        "dnsLogsFileEnabled": {
          "description": "DNSLogsFileEnabled controls logging DNS logs to a file. If false no DNS logging to file will occur. [Default: false]",
          "type": "boolean"
        },
        "dnsLogsFileIncludeLabels": {
          "description": "DNSLogsFileIncludeLabels is used to configure if endpoint labels are included in a DNS log entry written to file. [Default: true]",
          "type": "boolean"
        },
        "dnsLogsFileMaxFileSizeMB": {
          "description": "DNSLogsFileMaxFileSizeMB sets the max size in MB of DNS log files before rotation. [Default: 100]",
          "format": "int32",
          "type": "integer"
        },
        "dnsLogsFileMaxFiles": {
          "description": "DNSLogsFileMaxFiles sets the number of DNS log files to keep. [Default: 5]",
          "format": "int32",
          "type": "integer"
        },
        "dnsLogsFilePerNodeLimit": {
          "description": "Limit on the number of DNS logs that can be emitted within each flush interval.  When this limit has been reached, Felix counts the number of unloggable DNS responses within the flush interval, and emits a WARNING log with that count at the same time as it flushes the buffered DNS logs.  [Default: 0, meaning no limit]",
          "format": "int32",
          "type": "integer"
        },
        "dnsLogsFlushInterval": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
          "description": "DNSLogsFlushInterval configures the interval at which Felix exports DNS logs. [Default: 300s]"
        },
        "dnsTrustedServers": {
          "description": "The DNS servers that Felix should trust. Each entry here must be an IP, or \"k8s-service:\u003cname\u003e\", where \u003cname\u003e is the name of a Kubernetes Service in the \"kube-system\" namespace. [Default: \"k8s-service:kube-dns\"].",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "dropActionOverride": {
          "description": "DropActionOverride overrides the Drop action in Felix, optionally changing the behavior to Accept, and optionally adding Log. Possible values are Drop, LogAndDrop, Accept, LogAndAccept. [Default: Drop]",
          "type": "string"
        },
        "endpointReportingDelay": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        },
        "endpointReportingEnabled": {
          "type": "boolean"
        },
        "externalNodesList": {
          "description": "ExternalNodesCIDRList is a list of CIDR's of external-non-calico-nodes which may source tunnel traffic and have the tunneled traffic be accepted at calico nodes.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "failsafeInboundHostPorts": {
          "description": "FailsafeInboundHostPorts is a comma-delimited list of UDP/TCP ports that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidently cutting off a host with incorrect configuration. Each port should be specified as tcp:\u003cport-number\u003e or udp:\u003cport-number\u003e. For back-compatibility, if the protocol is not specified, it defaults to “tcp”. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68]",
          "items": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ProtoPort"
          },
          "type": "array"
        },
        "failsafeOutboundHostPorts": {
          "description": "FailsafeOutboundHostPorts is a comma-delimited list of UDP/TCP ports that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidently cutting off a host with incorrect configuration. Each port should be specified as tcp:\u003cport-number\u003e or udp:\u003cport-number\u003e. For back-compatibility, if the protocol is not specified, it defaults to “tcp”. To disable all outbound host ports, use the value none. The default value opens etcd’s standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:2379, tcp:2380, tcp:4001, tcp:7001, udp:53, udp:67]",
          "items": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ProtoPort"
          },
          "type": "array"
        },
        "flowLogsEnableHostEndpoint": {
          "description": "FlowLogsEnableHostEndpoint enables Flow logs reporting for HostEndpoints.",
          "type": "boolean"
        },
        "flowLogsEnableNetworkSets": {
          "description": "FlowLogsEnableNetworkSets enables Flow logs reporting for GlobalNetworkSets.",
          "type": "boolean"
        },
        "flowLogsFileAggregationKindForAllowed": {
          "description": "FlowLogsFileAggregationKindForAllowed is used to choose the type of aggregation for flow log entries created for allowed connections. [Default: 2 - pod prefix name based aggregation]. Accepted values are 0, 1 and 2. 0 - No aggregation 1 - Source port based aggregation 2 - Pod prefix name based aggreagation.",
          "format": "int32",
          "type": "integer"
        },
        "flowLogsFileAggregationKindForDenied": {
          "description": "FlowLogsFileAggregationKindForDenied is used to choose the type of aggregation for flow log entries created for denied connections. [Default: 1 - source port based aggregation]. Accepted values are 0, 1 and 2. 0 - No aggregation 1 - Source port based aggregation 2 - Pod prefix name based aggreagation.",
          "format": "int32",
          "type": "integer"
        },
        "flowLogsFileDirectory": {
          "description": "FlowLogsFileDirectory sets the directory where flow logs files are stored.",
          "type": "string"
        },
        "flowLogsFileEnabled": {
          "description": "FlowLogsFileEnabled when set to true, enables logging flow logs to a file. If false no flow logging to file will occur.",
          "type": "boolean"
        },
        "flowLogsFileEnabledForAllowed": {
          "description": "FlowLogsFileEnabledForAllowed is used to enable/disable flow logs entries created for allowed connections. Default is true. This parameter only takes effect when FlowLogsFileReporterEnabled is set to true.",
          "type": "boolean"
        },
        "flowLogsFileEnabledForDenied": {
          "description": "FlowLogsFileEnabledForDenied is used to enable/disable flow logs entries created for denied flows. Default is true. This parameter only takes effect when FlowLogsFileReporterEnabled is set to true.",
          "type": "boolean"
        },
        "flowLogsFileIncludeLabels": {
          "description": "FlowLogsFileIncludeLabels is used to configure if endpoint labels are included in a Flow log entry written to file.",
          "type": "boolean"
        },
        "flowLogsFileIncludePolicies": {
          "description": "FlowLogsFileIncludePolicies is used to configure if policy information are included in a Flow log entry written to file.",
          "type": "boolean"
        },
        "flowLogsFileMaxFileSizeMB": {
          "description": "FlowLogsFileMaxFileSizeMB sets the max size in MB of flow logs files before rotation.",
          "format": "int32",
          "type": "integer"
        },
        "flowLogsFileMaxFiles": {
          "description": "FlowLogsFileMaxFiles sets the number of log files to keep.",
          "format": "int32",
          "type": "integer"
        },
        "flowLogsFlushInterval": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
          "description": "FlowLogsFlushInterval configures the interval at which Felix exports flow logs."
        },
        "flowLogsMaxOriginalIPsIncluded": {
          "description": "FlowLogsMaxOriginalIPsIncluded specifies the number of unique IP addresses (if relevant) that should be included in Flow logs.",
          "format": "int32",
          "type": "integer"
        },
        "genericXDPEnabled": {
          "description": "GenericXDPEnabled enables Generic XDP so network cards that don't support XDP offload or driver modes can use XDP. This is not recommended since it doesn't provide better performance than iptables. [Default: false]",
          "type": "boolean"
        },
        "healthEnabled": {
          "type": "boolean"
        },
        "healthHost": {
          "type": "string"
        },
        "healthPort": {
          "format": "int32",
          "type": "integer"
        },
        "ignoreLooseRPF": {
          "type": "boolean"
        },
        "interfaceExclude": {
          "description": "InterfaceExclude is a comma-separated list of interfaces that Felix should exclude when monitoring for host endpoints. The default value ensures that Felix ignores Kubernetes' IPVS dummy interface, which is used internally by kube-proxy. If you want to exclude multiple interface names using a single value, the list supports regular expressions. For regular expressions you must wrap the value with '/'. For example having values '/^kube/,veth1' will exclude all interfaces that begin with 'kube' and also the interface 'veth1'. [Default: kube-ipvs0]",
          "type": "string"
        },
        "interfacePrefix": {
          "description": "InterfacePrefix is the interface name prefix that identifies workload endpoints and so distinguishes them from host endpoint interfaces. Note: in environments other than bare metal, the orchestrators configure this appropriately. For example our Kubernetes and Docker integrations set the ‘cali’ value, and our OpenStack integration sets the ‘tap’ value. [Default: cali]",
          "type": "string"
        },
        "ipipEnabled": {
          "type": "boolean"
        },
        "ipipMTU": {
          "description": "IPIPMTU is the MTU to set on the tunnel device. See Configuring MTU [Default: 1440]",
          "format": "int32",
          "type": "integer"
        },
        "ipsecAllowUnsecuredTraffic": {
          "description": "IPSecAllowUnsecuredTraffic controls whether non-IPsec traffic is allowed in addition to IPsec traffic. Enabling this negates the anti-spoofing protections of IPsec but it is useful when migrating to/from IPsec. [Default: false]",
          "type": "boolean"
        },
        "ipsecESPAlgorithm": {
          "description": "IPSecESAlgorithm sets IPSec ESP algorithm. Default is NIST suite B recommendation. [Default: aes128gcm16-ecp256]",
          "type": "string"
        },
        "ipsecIKEAlgorithm": {
          "description": "IPSecIKEAlgorithm sets IPSec IKE algorithm. Default is NIST suite B recommendation. [Default: aes128gcm16-prfsha256-ecp256]",
          "type": "string"
        },
        "ipsecLogLevel": {
          "description": "IPSecLogLevel controls log level for IPSec components. Set to None for no logging. A generic log level terminology is used [None, Notice, Info, Debug, Verbose]. [Default: Info]",
          "type": "string"
        },
        "ipsecMode": {
          "description": "IPSecMode controls which mode IPSec is operating on. Default value means IPSec is not enabled. [Default: \"\"]",
          "type": "string"
        },
        "ipsecPolicyRefreshInterval": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
          "description": "IPSecPolicyRefreshInterval is the interval at which Felix will check the kernel's IPsec policy tables and repair any inconsistencies. [Default: 600s]"
        },
        "ipsetsRefreshInterval": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
          "description": "IpsetsRefreshInterval is the period at which Felix re-checks all iptables state to ensure that no other process has accidentally broken Calico’s rules. Set to 0 to disable iptables refresh. [Default: 90s]"
        },
        "iptablesBackend": {
          "description": "IptablesBackend specifies which backend of iptables will be used. The default is legacy.",
          "type": "string"
        },
        "iptablesFilterAllowAction": {
          "type": "string"
        },
        "iptablesLockFilePath": {
          "description": "IptablesLockFilePath is the location of the iptables lock file. You may need to change this if the lock file is not in its standard location (for example if you have mapped it into Felix’s container at a different path). [Default: /run/xtables.lock]",
          "type": "string"
        },
        "iptablesLockProbeInterval": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
          "description": "IptablesLockProbeInterval is the time that Felix will wait between attempts to acquire the iptables lock if it is not available. Lower values make Felix more responsive when the lock is contended, but use more CPU. [Default: 50ms]"
        },
        "iptablesLockTimeout": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
          "description": "IptablesLockTimeout is the time that Felix will wait for the iptables lock, or 0, to disable. To use this feature, Felix must share the iptables lock file with all other processes that also take the lock. When running Felix inside a container, this requires the /run directory of the host to be mounted into the calico/node or calico/felix container. [Default: 0s disabled]"
        },
        "iptablesMangleAllowAction": {
          "type": "string"
        },
        "iptablesMarkMask": {
          "description": "IptablesMarkMask is the mask that Felix selects its IPTables Mark bits from. Should be a 32 bit hexadecimal number with at least 8 bits set, none of which clash with any other mark bits in use on the system. [Default: 0xff000000]",
          "format": "int64",
          "type": "integer"
        },
        "iptablesNATOutgoingInterfaceFilter": {
          "type": "string"
        },
        "iptablesPostWriteCheckInterval": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
          "description": "IptablesPostWriteCheckInterval is the period after Felix has done a write to the dataplane that it schedules an extra read back in order to check the write was not clobbered by another process. This should only occur if another application on the system doesn’t respect the iptables lock. [Default: 1s]"
        },
        "iptablesRefreshInterval": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
          "description": "IptablesRefreshInterval is the period at which Felix re-checks the IP sets in the dataplane to ensure that no other process has accidentally broken Calico’s rules. Set to 0 to disable IP sets refresh. Note: the default for this value is lower than the other refresh intervals as a workaround for a Linux kernel bug that was fixed in kernel version 4.11. If you are using v4.11 or greater you may want to set this to, a higher value to reduce Felix CPU usage. [Default: 10s]"
        },
        "ipv6Support": {
          "type": "boolean"
        },
        "kubeNodePortRanges": {
          "description": "KubeNodePortRanges holds list of port ranges used for service node ports. Only used if felix detects kube-proxy running in ipvs mode. Felix uses these ranges to separate host and workload traffic. [Default: 30000:32767].",
          "items": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.numorstring.Port"
          },
          "type": "array"
        },
        "logDropActionOverride": {
          "description": "LogDropActionOverride specifies whether or not to include the DropActionOverride in the logs when it is triggered.",
          "type": "boolean"
        },
        "logFilePath": {
          "description": "LogFilePath is the full path to the Felix log. Set to none to disable file logging. [Default: /var/log/calico/felix.log]",
          "type": "string"
        },
        "logPrefix": {
          "description": "LogPrefix is the log prefix that Felix uses when rendering LOG rules. [Default: calico-packet]",
          "type": "string"
        },
        "logSeverityFile": {
          "description": "LogSeverityFile is the log severity above which logs are sent to the log file. [Default: Info]",
          "type": "string"
        },
        "logSeverityScreen": {
          "description": "LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: Info]",
          "type": "string"
        },
        "logSeveritySys": {
          "description": "LogSeveritySys is the log severity above which logs are sent to the syslog. Set to None for no logging to syslog. [Default: Info]",
          "type": "string"
        },
        "maxIpsetSize": {
          "format": "int32",
          "type": "integer"
        },
        "metadataAddr": {
          "description": "MetadataAddr is the IP address or domain name of the server that can answer VM queries for cloud-init metadata. In OpenStack, this corresponds to the machine running nova-api (or in Ubuntu, nova-api-metadata). A value of none (case insensitive) means that Felix should not set up any NAT rule for the metadata path. [Default: 127.0.0.1]",
          "type": "string"
        },
        "metadataPort": {
          "description": "MetadataPort is the port of the metadata server. This, combined with global.MetadataAddr (if not ‘None’), is used to set up a NAT rule, from 169.254.169.254:80 to MetadataAddr:MetadataPort. In most cases this should not need to be changed [Default: 8775].",
          "format": "int32",
          "type": "integer"
        },
        "natOutgoingAddress": {
          "description": "NATOutgoingAddress specifies an address to use when performing source NAT for traffic in a natOutgoing pool that is leaving the network. By default the address used is an address on the interface the traffic is leaving on (ie it uses the iptables MASQUERADE target)",
          "type": "string"
        },
        "natPortRange": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.numorstring.Port",
          "description": "NATPortRange specifies the range of ports that is used for port mapping when doing outgoing NAT. When unset the default behavior of the network stack is used."
        },
        "netlinkTimeout": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        },
        "nfNetlinkBufSize": {
          "type": "string"
        },
        "openstackRegion": {
          "description": "OpenstackRegion is the name of the region that a particular Felix belongs to. In a multi-region Calico/OpenStack deployment, this must be configured somehow for each Felix (here in the datamodel, or in felix.cfg or the environment on each compute node), and must match the [calico] openstack_region value configured in neutron.conf on each node. [Default: Empty]",
          "type": "string"
        },
        "policySyncPathPrefix": {
          "description": "PolicySyncPathPrefix is used to by Felix to communicate policy changes to external services, like Application layer policy. [Default: Empty]",
          "type": "string"
        },
        "prometheusGoMetricsEnabled": {
          "description": "PrometheusGoMetricsEnabled disables Go runtime metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]",
          "type": "boolean"
        },
        "prometheusMetricsCAFile": {
          "type": "string"
        },
        "prometheusMetricsCertFile": {
          "description": "TLS credentials for this port.",
          "type": "string"
        },
        "prometheusMetricsEnabled": {
          "description": "PrometheusMetricsEnabled enables the experimental Prometheus metrics server in Felix if set to true. [Default: false]",
          "type": "boolean"
        },
        "prometheusMetricsKeyFile": {
          "type": "string"
        },
        "prometheusMetricsPort": {
          "description": "PrometheusMetricsPort is the TCP port that the experimental Prometheus metrics server should bind to. [Default:9091]",
          "format": "int32",
          "type": "integer"
        },
        "prometheusProcessMetricsEnabled": {
          "description": "PrometheusProcessMetricsEnabled disables process metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]",
          "type": "boolean"
        },
        "prometheusReporterCAFile": {
          "type": "string"
        },
        "prometheusReporterCertFile": {
          "type": "string"
        },
        "prometheusReporterEnabled": {
          "description": "Felix Denied Packet Metrics configuration parameters.",
          "type": "boolean"
        },
        "prometheusReporterKeyFile": {
          "type": "string"
        },
        "prometheusReporterPort": {
          "format": "int32",
          "type": "integer"
        },
        "reportingInterval": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
          "description": "ReportingInterval is the interval at which Felix reports its status into the datastore or 0 to disable. Must be non-zero in OpenStack deployments. [Default: 30s]"
        },
        "reportingTTL": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
          "description": "ReportingTTL is the time-to-live setting for process-wide status reports. [Default: 90s]"
        },
        "routeRefreshInterval": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
          "description": "RouterefreshInterval is the period at which Felix re-checks the routes in the dataplane to ensure that no other process has accidentally broken Calico’s rules. Set to 0 to disable route refresh. [Default: 90s]"
        },
        "sidecarAccelerationEnabled": {
          "description": "SidecarAccelerationEnabled enables experimental sidecar acceleration [Default: false]",
          "type": "boolean"
        },
        "statsDumpFilePath": {
          "type": "string"
        },
        "syslogReporterAddress": {
          "type": "string"
        },
        "syslogReporterNetwork": {
          "type": "string"
        },
        "usageReportingEnabled": {
          "description": "UsageReportingEnabled reports anonymous Calico version number and cluster size to projectcalico.org. Logs warnings returned by the usage server. For example, if a significant security vulnerability has been discovered in the version of Calico being used. [Default: true]",
          "type": "boolean"
        },
        "usageReportingInitialDelay": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
          "description": "UsageReportingInitialDelay controls the minimum delay before Felix makes a report. [Default: 300s]"
        },
        "usageReportingInterval": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
          "description": "UsageReportingInterval controls the interval at which Felix makes reports. [Default: 86400s]"
        },
        "useInternalDataplaneDriver": {
          "type": "boolean"
        },
        "vxlanEnabled": {
          "type": "boolean"
        },
        "vxlanMTU": {
          "description": "VXLANMTU is the MTU to set on the tunnel device. See Configuring MTU [Default: 1440]",
          "format": "int32",
          "type": "integer"
        },
        "vxlanPort": {
          "format": "int32",
          "type": "integer"
        },
        "vxlanVNI": {
          "format": "int32",
          "type": "integer"
        },
        "windowsNetworkName": {
          "description": "WindowsNetworkName specifies which Windows HNS networks Felix should operate on.  The default is to match networks that start with \"calico\".  Supports regular expression syntax.",
          "type": "string"
        },
        "xdpEnabled": {
          "description": "XDPEnabled enables XDP acceleration for suitable untracked incoming deny rules. [Default: true]",
          "type": "boolean"
        }
      },
      "required": [
        "XDPRefreshInterval"
      ]
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.GlobalNetworkPolicySpec": {
      "properties": {
        "applyOnForward": {
          "description": "ApplyOnForward indicates to apply the rules in this policy on forward traffic.",
          "type": "boolean"
        },
        "doNotTrack": {
          "description": "DoNotTrack indicates whether packets matched by the rules in this policy should go through the data plane's connection tracking, such as Linux conntrack.  If True, the rules in this policy are applied before any data plane connection tracking, and packets allowed by this policy are marked as not to be tracked.",
          "type": "boolean"
        },
        "egress": {
          "description": "The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.",
          "items": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.Rule"
          },
          "type": "array"
        },
        "ingress": {
          "description": "The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.",
          "items": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.Rule"
          },
          "type": "array"
        },
        "order": {
          "description": "Order is an optional field that specifies the order in which the policy is applied. Policies with higher \"order\" are applied after those with lower order within the same tier.  If the order is omitted, it may be considered to be \"infinite\" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy \"Name\" within the tier.",
          "format": "double",
          "type": "number"
        },
        "preDNAT": {
          "description": "PreDNAT indicates to apply the rules in this policy before any DNAT.",
          "type": "boolean"
        },
        "selector": {
          "description": "The selector is an expression used to pick pick out the endpoints that the policy should be applied to.\n\nSelector expressions follow this syntax:\n\n\tlabel == \"string_literal\"  -\u003e  comparison, e.g. my_label == \"foo bar\"\n\tlabel != \"string_literal\"   -\u003e  not equal; also matches if label is not present\n\tlabel in { \"a\", \"b\", \"c\", ... }  -\u003e  true if the value of label X is one of \"a\", \"b\", \"c\"\n\tlabel not in { \"a\", \"b\", \"c\", ... }  -\u003e  true if the value of label X is not one of \"a\", \"b\", \"c\"\n\thas(label_name)  -\u003e True if that label is present\n\t! expr -\u003e negation of expr\n\texpr \u0026\u0026 expr  -\u003e Short-circuit and\n\texpr || expr  -\u003e Short-circuit or\n\t( expr ) -\u003e parens for grouping\n\tall() or the empty selector -\u003e matches all endpoints.\n\nLabel names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters.\n\nExamples (with made-up labels):\n\n\ttype == \"webserver\" \u0026\u0026 deployment == \"prod\"\n\ttype in {\"frontend\", \"backend\"}\n\tdeployment != \"dev\"\n\t! has(label_name)",
          "type": "string"
        },
        "tier": {
          "description": "The name of the tier that this policy belongs to.  If this is omitted, the default tier (name is \"default\") is assumed.  The specified tier must exist in order to create security policies within the tier, the \"default\" tier is created automatically if it does not exist, this means for deployments requiring only a single Tier, the tier name may be omitted on all policy management requests.",
          "type": "string"
        },
        "types": {
          "description": "Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress rules are present in the policy.  The default is:\n\n- [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are\n  also no Ingress rules)\n\n- [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules\n\n- [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules.\n\nWhen the policy is read back again, Types will always be one of these values, never empty or nil.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "selector"
      ]
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.GlobalNetworkSetSpec": {
      "description": "GlobalNetworkSetSpec contains the specification for a NetworkSet resource.",
      "properties": {
        "allowedEgressDomains": {
          "description": "The list of domain names that belong to this set and are honored in egress allow rules only.  Domain names specified here only work to allow egress traffic from the cluster to external destinations.  They don't work to _deny_ traffic to destinations specified by domain name, or to allow ingress traffic from _sources_ specified by domain name.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nets": {
          "description": "The list of IP networks that belong to this set.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.GlobalNetworkSetSync": {
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      }
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.GlobalThreatFeedSpec": {
      "description": "GlobalThreatFeedSpec contains the specification of a GlobalThreatFeed resource.",
      "properties": {
        "content": {
          "description": "Content describes the kind of data the data feed provides.",
          "type": "string"
        },
        "globalNetworkSet": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.GlobalNetworkSetSync"
        },
        "pull": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.Pull"
        }
      }
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.GlobalThreatFeedStatus": {
      "properties": {
        "errorConditions": {
          "items": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ErrorCondition"
          },
          "type": "array"
        },
        "lastSuccessfulSearch": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "lastSuccessfulSync": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      },
      "required": [
        "lastSuccessfulSync",
        "lastSuccessfulSearch",
        "errorConditions"
      ]
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.HTTPHeader": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "valueFrom": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.HTTPHeaderSource"
        }
      },
      "required": [
        "name"
      ]
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.HTTPHeaderSource": {
      "properties": {
        "configMapKeyRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector",
          "description": "Selects a key of a ConfigMap."
        },
        "secretKeyRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector",
          "description": "Selects a key of a secret in the pod's namespace"
        }
      }
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.HTTPMatch": {
      "description": "HTTPMatch is an optional field that apply only to HTTP requests The Methods and Path fields are joined with AND",
      "properties": {
        "methods": {
          "description": "Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "paths": {
          "description": "Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a `exact` or a `prefix` match. The validator will check for it.",
          "items": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.HTTPPath"
          },
          "type": "array"
        }
      }
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.HTTPPath": {
      "description": "HTTPPath specifies an HTTP path to match. It may be either of the form: exact: \u003cpath\u003e: which matches the path exactly or prefix: \u003cpath-prefix\u003e: which matches the path prefix",
      "properties": {
        "exact": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        }
      }
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.HTTPPull": {
      "properties": {
        "format": {
          "type": "string"
        },
        "headers": {
          "items": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.HTTPHeader"
          },
          "type": "array"
        },
        "url": {
          "type": "string"
        }
      },
      "required": [
        "url"
      ]
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.HostEndpointSpec": {
      "description": "HostEndpointSpec contains the specification for a HostEndpoint resource.",
      "properties": {
        "expectedIPs": {
          "description": "The expected IP addresses (IPv4 and IPv6) of the endpoint. If \"InterfaceName\" is not present, Calico will look for an interface matching any of the IPs in the list and apply policy to that. Note:\n\tWhen using the selector match criteria in an ingress or egress security Policy\n\tor Profile, Calico converts the selector into a set of IP addresses. For host\n\tendpoints, the ExpectedIPs field is used for that purpose. (If only the interface\n\tname is specified, Calico does not learn the IPs of the interface for use in match\n\tcriteria.)",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "interfaceName": {
          "description": "Either \"*\", or the name of a specific Linux interface to apply policy to; or empty.  \"*\" indicates that this HostEndpoint governs all traffic to, from or through the default network namespace of the host named by the \"Node\" field; entering and leaving that namespace via any interface, including those from/to non-host-networked local workloads.\n\nIf InterfaceName is not \"*\", this HostEndpoint only governs traffic that enters or leaves the host through the specific interface named by InterfaceName, or - when InterfaceName is empty - through the specific interface that has one of the IPs in ExpectedIPs. Therefore, when InterfaceName is empty, at least one expected IP must be specified.  Only external interfaces (such as “eth0”) are supported here; it isn't possible for a HostEndpoint to protect traffic through a specific local workload interface.\n\nNote: Only some kinds of policy are implemented for \"*\" HostEndpoints; initially just pre-DNAT policy.  Please check Calico documentation for the latest position.",
          "type": "string"
        },
        "node": {
          "description": "The node name identifying the Calico node instance.",
          "type": "string"
        },
        "ports": {
          "description": "Ports contains the endpoint's named ports, which may be referenced in security policy rules.",
          "items": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.EndpointPort"
          },
          "type": "array"
        },
        "profiles": {
          "description": "A list of identifiers of security Profile objects that apply to this endpoint. Each profile is applied in the order that they appear in this list.  Profile rules are applied after the selector-based security policy.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.ICMPFields": {
      "description": "ICMPFields defines structure for ICMP and NotICMP sub-struct for ICMP code and type",
      "properties": {
        "code": {
          "description": "Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel’s iptables firewall, which Calico uses to enforce the rule.",
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "description": "Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.IPPoolSpec": {
      "description": "IPPoolSpec contains the specification for an IPPool resource.",
      "properties": {
        "blockSize": {
          "description": "The block size to use for IP address assignments from this pool. Defaults to 26 for IPv4 and 112 for IPv6.",
          "format": "int32",
          "type": "integer"
        },
        "cidr": {
          "description": "The pool CIDR.",
          "type": "string"
        },
        "disabled": {
          "description": "When disabled is true, Calico IPAM will not assign addresses from this pool.",
          "type": "boolean"
        },
        "ipip": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v1.IPIPConfiguration",
          "description": "Deprecated: this field is only used for APIv1 backwards compatibility. Setting this field is not allowed, this field is for internal use only."
        },
        "ipipMode": {
          "description": "Contains configuration for IPIP tunneling for this pool. If not specified, then this is defaulted to \"Never\" (i.e. IPIP tunelling is disabled).",
          "type": "string"
        },
        "nat-outgoing": {
          "description": "Deprecated: this field is only used for APIv1 backwards compatibility. Setting this field is not allowed, this field is for internal use only.",
          "type": "boolean"
        },
        "natOutgoing": {
          "description": "When nat-outgoing is true, packets sent from Calico networked containers in this pool to destinations outside of this pool will be masqueraded.",
          "type": "boolean"
        },
        "nodeSelector": {
          "description": "Allows IPPool to allocate for a specific node by label selector.",
          "type": "string"
        },
        "vxlanMode": {
          "description": "Contains configuration for VXLAN tunneling for this pool. If not specified, then this is defaulted to \"Never\" (i.e. VXLAN tunelling is disabled).",
          "type": "string"
        }
      },
      "required": [
        "cidr"
      ]
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.LicenseKeySpec": {
      "description": "LicenseKeySpec contains the license key itself.",
      "properties": {
        "certificate": {
          "description": "Certificate is used to validate the token.",
          "type": "string"
        },
        "token": {
          "description": "Token is the JWT containing the license claims",
          "type": "string"
        }
      },
      "required": [
        "token"
      ]
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.ManagedClusterSpec": {
      "description": "ManagedClusterSpec contains the specification of a ManagedCluster resource.",
      "properties": {
        "installationManifest": {
          "description": "Field to store dynamically generated manifest for installing component into the actual application cluster corresponding to this Managed Cluster",
          "type": "string"
        }
      }
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.NamesAndLabelsMatch": {
      "description": "NamesAndLabelsMatch is used to specify resource matches using both label and name selection.",
      "properties": {
        "names": {
          "description": "Names is an optional field that specifies a set of resources by name.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "selector": {
          "description": "Selector is an optional field that selects a set of resources by label. If both Names and Selector are specified then they are AND'ed.",
          "type": "string"
        }
      }
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.NetworkPolicySpec": {
      "properties": {
        "egress": {
          "description": "The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.",
          "items": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.Rule"
          },
          "type": "array"
        },
        "ingress": {
          "description": "The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.",
          "items": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.Rule"
          },
          "type": "array"
        },
        "order": {
          "description": "Order is an optional field that specifies the order in which the policy is applied. Policies with higher \"order\" are applied after those with lower order within the same tier.  If the order is omitted, it may be considered to be \"infinite\" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy \"Name\" within the tier.",
          "format": "double",
          "type": "number"
        },
        "selector": {
          "description": "The selector is an expression used to pick pick out the endpoints that the policy should be applied to.\n\nSelector expressions follow this syntax:\n\n\tlabel == \"string_literal\"  -\u003e  comparison, e.g. my_label == \"foo bar\"\n\tlabel != \"string_literal\"   -\u003e  not equal; also matches if label is not present\n\tlabel in { \"a\", \"b\", \"c\", ... }  -\u003e  true if the value of label X is one of \"a\", \"b\", \"c\"\n\tlabel not in { \"a\", \"b\", \"c\", ... }  -\u003e  true if the value of label X is not one of \"a\", \"b\", \"c\"\n\thas(label_name)  -\u003e True if that label is present\n\t! expr -\u003e negation of expr\n\texpr \u0026\u0026 expr  -\u003e Short-circuit and\n\texpr || expr  -\u003e Short-circuit or\n\t( expr ) -\u003e parens for grouping\n\tall() or the empty selector -\u003e matches all endpoints.\n\nLabel names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters.\n\nExamples (with made-up labels):\n\n\ttype == \"webserver\" \u0026\u0026 deployment == \"prod\"\n\ttype in {\"frontend\", \"backend\"}\n\tdeployment != \"dev\"\n\t! has(label_name)",
          "type": "string"
        },
        "tier": {
          "description": "The name of the tier that this policy belongs to.  If this is omitted, the default tier (name is \"default\") is assumed.  The specified tier must exist in order to create security policies within the tier, the \"default\" tier is created automatically if it does not exist, this means for deployments requiring only a single Tier, the tier name may be omitted on all policy management requests.",
          "type": "string"
        },
        "types": {
          "description": "Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress are present in the policy.  The default is:\n\n- [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are\n  also no Ingress rules)\n\n- [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules\n\n- [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules.\n\nWhen the policy is read back again, Types will always be one of these values, never empty or nil.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "selector"
      ]
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.ProfileSpec": {
      "description": "ProfileSpec contains the specification for a security Profile resource.",
      "properties": {
        "egress": {
          "description": "The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.",
          "items": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.Rule"
          },
          "type": "array"
        },
        "ingress": {
          "description": "The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.",
          "items": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.Rule"
          },
          "type": "array"
        },
        "labelsToApply": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "An option set of labels to apply to each endpoint (in addition to their own labels) referencing this profile.  If labels configured on the endpoint have keys matching those labels inherited from the profile, the endpoint label values take precedence.",
          "type": "object"
        }
      }
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.ProtoPort": {
      "description": "ProtoPort is combination of protocol and port, both must be specified.",
      "properties": {
        "port": {
          "format": "int32",
          "type": "integer"
        },
        "protocol": {
          "type": "string"
        }
      },
      "required": [
        "protocol",
        "port"
      ]
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.Pull": {
      "properties": {
        "http": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.HTTPPull"
        },
        "period": {
          "type": "string"
        }
      },
      "required": [
        "http"
      ]
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.RemoteClusterConfigurationSpec": {
      "description": "RemoteClusterConfigurationSpec contains the values of describing the cluster.",
      "properties": {
        "datastoreType": {
          "description": "Indicates the datastore to use. If unspecified, defaults to etcdv3",
          "type": "string"
        },
        "etcdCACertFile": {
          "description": "Path to the etcd Certificate Authority file. Valid if DatastoreType is etcdv3.",
          "type": "string"
        },
        "etcdCertFile": {
          "description": "Path to the etcd client certificate. Valid if DatastoreType is etcdv3.",
          "type": "string"
        },
        "etcdEndpoints": {
          "description": "A comma separated list of etcd endpoints. Valid if DatastoreType is etcdv3.",
          "type": "string"
        },
        "etcdKeyFile": {
          "description": "Path to the etcd key file. Valid if DatastoreType is etcdv3.",
          "type": "string"
        },
        "etcdPassword": {
          "description": "Password for the given user name. Valid if DatastoreType is etcdv3.",
          "type": "string"
        },
        "etcdUsername": {
          "description": "User name for RBAC. Valid if DatastoreType is etcdv3.",
          "type": "string"
        },
        "k8sAPIEndpoint": {
          "description": "Location of the Kubernetes API. Not required if using kubeconfig. Valid if DatastoreType is kubernetes.",
          "type": "string"
        },
        "k8sAPIToken": {
          "description": "Token to be used for accessing the Kubernetes API. Valid if DatastoreType is kubernetes.",
          "type": "string"
        },
        "k8sCAFile": {
          "description": "Location of a CA for accessing the Kubernetes API. Valid if DatastoreType is kubernetes.",
          "type": "string"
        },
        "k8sCertFile": {
          "description": "Location of a client certificate for accessing the Kubernetes API. Valid if DatastoreType is kubernetes.",
          "type": "string"
        },
        "k8sInsecureSkipTLSVerify": {
          "type": "boolean"
        },
        "k8sKeyFile": {
          "description": "Location of a client key for accessing the Kubernetes API. Valid if DatastoreType is kubernetes.",
          "type": "string"
        },
        "kubeconfig": {
          "description": "When using the Kubernetes datastore, the location of a kubeconfig file. Valid if DatastoreType is kubernetes.",
          "type": "string"
        }
      },
      "required": [
        "datastoreType"
      ]
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.ReportJob": {
      "description": "ReportJob contains",
      "properties": {
        "end": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "The end time of the report."
        },
        "job": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference",
          "description": "A reference to the report creation job if known."
        },
        "start": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "The start time of the report."
        }
      },
      "required": [
        "start",
        "end",
        "job"
      ]
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.ReportSpec": {
      "description": "ReportSpec contains the values of the GlobalReport.",
      "properties": {
        "cis": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.CISBenchmarkParams",
          "description": "This field contain all the parameters for configuring a CIS benchmark report."
        },
        "endpoints": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.EndpointsSelection",
          "description": "Endpoints is used to specify which endpoints are in-scope and stored in the generated report data. Only used if endpoints data and/or audit logs are gathered in the report. If omitted, treated as everything in-scope."
        },
        "jobNodeSelector": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The node selector used to specify which nodes the report job may be scheduled on.",
          "type": "object"
        },
        "reportType": {
          "description": "The name of the report type.",
          "type": "string"
        },
        "schedule": {
          "description": "The report schedule specified in cron format. This specifies both the start and end times of each report, where the end time of one report becomes the start time of the next report. Separate jobs are created to generate a report, and the job generates the report data from archived audit and traffic data. To ensure this data is actually archived, the jobs to generate each report starts at a configurable time *after* the end time of the report that is being generated. The default job start delay is 30m, but is configurable through the compliance-controller environments. The cron format has minute accuracy, but only up to two values may be configured for the minute column which means you may only have at most two reports for each hour period.",
          "type": "string"
        },
        "suspend": {
          "description": "This flag tells the controller to suspend subsequent jobs for generating reports, it does not apply to already started jobs. If jobs are resumed then the controller will start creating jobs for any reports that were missed while the job was suspended.",
          "type": "boolean"
        }
      },
      "required": [
        "reportType"
      ]
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.ReportStatus": {
      "description": "ReportStatus contains the status of the automated report generation.",
      "properties": {
        "activeReportJobs": {
          "description": "The set of active report jobs.",
          "items": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ReportJob"
          },
          "type": "array"
        },
        "lastFailedReportJobs": {
          "description": "The configured report jobs that have failed.",
          "items": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.CompletedReportJob"
          },
          "type": "array"
        },
        "lastScheduledReportJob": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ReportJob",
          "description": "The last scheduled report job."
        },
        "lastSuccessfulReportJobs": {
          "description": "The configured report jobs that have completed successfully.",
          "items": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.CompletedReportJob"
          },
          "type": "array"
        }
      }
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.ReportTemplate": {
      "description": "ReportTemplate defines a template used to render a report into downloadable or UI compatible format.",
      "properties": {
        "description": {
          "description": "A user-facing description of the template.",
          "type": "string"
        },
        "name": {
          "description": "The name of this template. This should be unique across all template names within a ReportType. This will be used by the UI as the suffix of the downloadable file name.",
          "type": "string"
        },
        "template": {
          "description": "The base-64 encoded go template used to render the report data.",
          "type": "string"
        }
      }
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.ReportTypeSpec": {
      "description": "ReportTypeSpec contains the various templates, and configuration used to render a specific type of report.",
      "properties": {
        "auditEventsSelection": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.AuditEventsSelection",
          "description": "What audit log data should be included in the report. If not specified, the report will contain no audit log data. The selection may be further filtered by the Report."
        },
        "downloadTemplates": {
          "description": "The set of templates used to render the report for downloads.",
          "items": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ReportTemplate"
          },
          "type": "array"
        },
        "includeCISBenchmarkData": {
          "description": "Whether to include the full cis benchmark test results in the report.",
          "type": "boolean"
        },
        "includeEndpointData": {
          "description": "Whether to include endpoint data in the report. The actual endpoints included may be filtered by the Report, but will otherwise contain the full set of endpoints.",
          "type": "boolean"
        },
        "includeEndpointFlowLogData": {
          "description": "Whether to include endpoint-to-endpoint flow log data in the report.",
          "type": "boolean"
        },
        "uiSummaryTemplate": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ReportTemplate",
          "description": "The summary template, explicitly used by the UI to render a summary version of the report. This should render to json containing a sets of widgets that the UI can use to render the summary. The rendered data is returned on the list query of the reports."
        }
      }
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.Rule": {
      "description": "A Rule encapsulates a set of match criteria and an action.  Both selector-based security Policy and security Profiles reference rules - separated out as a list of rules for both ingress and egress packet matching.\n\nEach positive match criteria has a negated version, prefixed with ”Not”. All the match criteria within a rule must be satisfied for a packet to match. A single rule can contain the positive and negative version of a match and both must be satisfied for the rule to match.",
      "properties": {
        "action": {
          "type": "string"
        },
        "destination": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.EntityRule",
          "description": "Destination contains the match criteria that apply to destination entity."
        },
        "http": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.HTTPMatch",
          "description": "HTTP contains match criteria that apply to HTTP requests."
        },
        "icmp": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ICMPFields",
          "description": "ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \"ICMP\" or \"ICMPv6\"."
        },
        "ipVersion": {
          "description": "IPVersion is an optional field that restricts the rule to only match a specific IP version.",
          "format": "int32",
          "type": "integer"
        },
        "notICMP": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ICMPFields",
          "description": "NotICMP is the negated version of the ICMP field."
        },
        "notProtocol": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.numorstring.Protocol",
          "description": "NotProtocol is the negated version of the Protocol field."
        },
        "protocol": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.numorstring.Protocol",
          "description": "Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols).\n\nMust be one of these string values: \"TCP\", \"UDP\", \"ICMP\", \"ICMPv6\", \"SCTP\", \"UDPLite\" or an integer in the range 1-255."
        },
        "source": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.EntityRule",
          "description": "Source contains the match criteria that apply to source entity."
        }
      },
      "required": [
        "action"
      ]
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.ServiceAccountMatch": {
      "properties": {
        "names": {
          "description": "Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "selector": {
          "description": "Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.",
          "type": "string"
        }
      }
    },
    "com.github.projectcalico.libcalico-go.lib.apis.v3.TierSpec": {
      "description": "TierSpec contains the specification for a security policy tier resource.",
      "properties": {
        "order": {
          "description": "Order is an optional field that specifies the order in which the tier is applied. Tiers with higher \"order\" are applied after those with lower order.  If the order is omitted, it may be considered to be \"infinite\" - i.e. the tier will be applied last.  Tiers with identical order will be applied in alphanumerical order based on the Tier \"Name\".",
          "format": "double",
          "type": "number"
        }
      }
    },
    "com.github.projectcalico.libcalico-go.lib.numorstring.Port": {
      "format": "int-or-string",
      "type": "string"
    },
    "com.github.projectcalico.libcalico-go.lib.numorstring.Protocol": {
      "format": "int-or-string",
      "type": "string"
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.BGPConfiguration": {
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.BGPConfigurationSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "BGPConfiguration",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.BGPConfigurationList": {
      "description": "BGPConfigurationList is a list of BGPConfiguration resources.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.BGPConfiguration"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "BGPConfigurationList",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.BGPPeer": {
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.BGPPeerSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "BGPPeer",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.BGPPeerList": {
      "description": "BGPPeerList is a list of BGPPeer resources.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.BGPPeer"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "BGPPeerList",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.FelixConfiguration": {
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.FelixConfigurationSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "FelixConfiguration",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.FelixConfigurationList": {
      "description": "FelixConfigurationList contains a list of FelixConfiguration object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.FelixConfiguration"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "FelixConfigurationList",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalNetworkPolicy": {
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.GlobalNetworkPolicySpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalNetworkPolicyList": {
      "description": "GlobalNetworkPolicyList is a list of Policy objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalNetworkPolicy"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "GlobalNetworkPolicyList",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalNetworkSet": {
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.GlobalNetworkSetSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "GlobalNetworkSet",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalNetworkSetList": {
      "description": "GlobalNetworkSetList is a list of NetworkSet objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalNetworkSet"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "GlobalNetworkSetList",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReport": {
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ReportSpec"
        },
        "status": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ReportStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "GlobalReport",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReportList": {
      "description": "GlobalReportList is a list of GlobalReport objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReport"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "GlobalReportList",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReportType": {
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ReportTypeSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "GlobalReportType",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReportTypeList": {
      "description": "GlobalReportTypeList is a list of GlobalReportType objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalReportType"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "GlobalReportTypeList",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed": {
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.GlobalThreatFeedSpec"
        },
        "status": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.GlobalThreatFeedStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "GlobalThreatFeed",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalThreatFeedList": {
      "description": "GlobalThreatFeedList is a list of GlobalThreatFeed objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "GlobalThreatFeedList",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.HostEndpoint": {
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.HostEndpointSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "HostEndpoint",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.HostEndpointList": {
      "description": "HostEndpointList is a list of HostEndpoint objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.HostEndpoint"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "HostEndpointList",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.IPPool": {
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.IPPoolSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "IPPool",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.IPPoolList": {
      "description": "IPPoolList contains a list of IPPool resources.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.IPPool"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "IPPoolList",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.LicenseKey": {
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.LicenseKeySpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "LicenseKey",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.LicenseKeyList": {
      "description": "LicenseKeyList  is a list of license objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.LicenseKey"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "LicenseKeyList",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.ManagedCluster": {
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ManagedClusterSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "ManagedCluster",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.ManagedClusterList": {
      "description": "ManagedClusterList is a list of ManagedCluster objects (used for multi-cluster management).",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.ManagedCluster"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "ManagedClusterList",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.NetworkPolicy": {
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.NetworkPolicySpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "NetworkPolicy",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.NetworkPolicyList": {
      "description": "NetworkPolicyList is a list of Policy objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.NetworkPolicy"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "NetworkPolicyList",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.Profile": {
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ProfileSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "Profile",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.ProfileList": {
      "description": "ProfileList is a list of Profile objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.Profile"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "ProfileList",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.RemoteClusterConfiguration": {
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.RemoteClusterConfigurationSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "RemoteClusterConfiguration",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.RemoteClusterConfigurationList": {
      "description": "RemoteClusterConfigurationList is a list of RemoteClusterConfiguration objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.RemoteClusterConfiguration"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "RemoteClusterConfigurationList",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.Tier": {
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.TierSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "Tier",
          "version": "v3"
        }
      ]
    },
    "com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.TierList": {
      "description": "TierList is a list of Tier objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.tigera.calico-k8sapiserver.pkg.apis.projectcalico.v3.Tier"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "group": "projectcalico.org",
          "kind": "TierList",
          "version": "v3"
        }
      ]
    }
  }
}
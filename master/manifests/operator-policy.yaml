# Tier containing policies to allow access to Tigera Secure EE.
apiVersion: projectcalico.org/v3
kind: Tier
metadata:
  name: allow-cnx
spec:
  order: 100

---

# Allow the Kubernetes API Server access to Tigera Secure EE API Server.
apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: allow-cnx.cnx-apiserver-access
  namespace: tigera-system
spec:
  order: 1
  tier: allow-cnx
  selector: k8s-app == 'cnx-apiserver'
  types:
  - Ingress
  ingress:
  - action: Allow
    protocol: TCP
    source:
      # This policy allows Tigera Secure EE API Server access from anywhere: replace it with
      # the addresses of your Kubernetes API Servers if those are static.
      nets: ["0.0.0.0/0"]
    destination:
      # The ports Tigera Secure EE API Server and Tigera Secure EE Query Server are configured to listen on.
      ports: [443, 5443, 8080, 10443]
---
# Allow users to access Tigera Secure EE Manager.
apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: allow-cnx.cnx-manager-access
  namespace: tigera-console
spec:
  order: 1
  tier: allow-cnx
  selector: k8s-app == 'cnx-manager'
  types:
  - Ingress
  ingress:
  - action: Allow
    protocol: TCP
    source:
      # This policy allows access to Tigera Secure EE Manager from anywhere: narrow it down if
      # only certain subnets should be allowed.
      nets: ["0.0.0.0/0"]
    destination:
      # By default, Tigera Secure EE Manager is accessed over https. Update this if needed.
      ports: [9443]
---

# Allow internal communication to compliance-server from Manager.
apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: allow-cnx.compliance-server
  namespace: tigera-compliance
spec:
  order: 1
  tier: allow-cnx
  selector: k8s-app == 'compliance-server'
  types:
  - Ingress
  ingress:
  - action: Allow
    protocol: TCP
    source:
      selector: k8s-app == 'cnx-manager'
      namespaceSelector: name == 'tigera-console'
    destination:
      ports: [5443]

---

# This manifest creates a network policy to allow traffic to Alertmanager
# (TCP port 9093).
apiVersion: extensions/v1beta1
kind: NetworkPolicy
metadata:
  name: calico-node-alertmanager
  namespace: calico-monitoring
spec:
  ingress:
  - ports:
    - port: 9093
      protocol: TCP
  podSelector:
    matchLabels:
      alertmanager: calico-node-alertmanager
      app: alertmanager
---

# This manifest creates a network policy to allow traffic between
# Alertmanagers for HA configuration (TCP port 6783).
apiVersion: extensions/v1beta1
kind: NetworkPolicy
metadata:
  name: calico-node-alertmanager-mesh
  namespace: calico-monitoring
spec:
  ingress:
  - from:
    - podSelector:
        matchExpressions:
        - key: app
          operator: In
          values:
          - alertmanager
        - key: alertmanager
          operator: In
          values:
          - calico-node-alertmanager
    ports:
    - port: 6783
      protocol: TCP
    - port: 6783
      protocol: UDP
  podSelector:
    matchLabels:
      alertmanager: calico-node-alertmanager
      app: alertmanager
---

# This manifest creates a network policy to allow traffic to access the
# Prometheus (TCP port 9090).
apiVersion: extensions/v1beta1
kind: NetworkPolicy
metadata:
  name: prometheus
  namespace: calico-monitoring
spec:
  ingress:
  - ports:
    - port: 9090
      protocol: TCP
  podSelector:
    matchLabels:
      app: prometheus
      prometheus: calico-node-prometheus
---

# Allow access to Elasticsearch client nodes from Kibana, fluentd, and the
# intrusion detection installer
apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: allow-cnx.elasticsearch-access
  namespace: calico-monitoring
spec:
  order: 1
  tier: allow-cnx
  selector: name == 'es-client-tigera-elasticsearch'
  types:
  - Ingress
  ingress:
  - action: Allow
    protocol: TCP
    source:
      selector: k8s-app == 'tigera-fluentd-node'
    destination:
      ports: [9200]
  - action: Allow
    protocol: TCP
    source:
      selector: name == 'kibana-tigera-elasticsearch'
    destination:
      ports: [9200]
  - action: Allow
    protocol: TCP
    source:
      selector: job-name == 'elastic-tsee-installer'
    destination:
      ports: [9200]
  - action: Allow
    protocol: TCP
    source:
      selector: k8s-app == 'es-curator'
    destination:
      ports: [9200]
  - action: Allow
    protocol: TCP
    source:
      selector: k8s-app == 'cnx-manager'
      namespaceSelector: name == 'tigera-console'
    destination:
      ports: [9200]
  - action: Allow
    destination:
      ports:
      - 9200
    protocol: TCP
    source:
      selector: k8s-app == 'compliance-benchmarker'
      namespaceSelector: name == 'tigera-compliance'
  - action: Allow
    destination:
      ports:
      - 9200
    protocol: TCP
    source:
      selector: k8s-app == 'compliance-controller'
      namespaceSelector: name == 'tigera-compliance'
  - action: Allow
    destination:
      ports:
      - 9200
    protocol: TCP
    source:
      selector: k8s-app == 'compliance-server'
      namespaceSelector: name == 'tigera-compliance'
  - action: Allow
    destination:
      ports:
      - 9200
    protocol: TCP
    source:
      selector: k8s-app == 'compliance-snapshotter'
      namespaceSelector: name == 'tigera-compliance'
  - action: Allow
    destination:
      ports:
      - 9200
    protocol: TCP
    source:
      selector: k8s-app == 'compliance-reporter'
      namespaceSelector: name == 'tigera-compliance'
  - action: Allow
    destination:
      ports:
        - 9200
    protocol: TCP
    source:
      selector: k8s-app == 'intrusion-detection-controller'
      namespaceSelector: name == 'tigera-intrusion-detection'

---

# Allow internal communication within the ElasticSearch cluster
apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: allow-cnx.elasticsearch-internal
  namespace: calico-monitoring
spec:
  order: 1
  tier: allow-cnx
  selector: cluster == 'tigera-elasticsearch'
  types:
  - Ingress
  ingress:
  - action: Allow
    protocol: TCP
    source:
      selector: cluster == 'tigera-elasticsearch'
    destination:
      ports: [9300]

---
# Allow access to Kibana
apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: allow-cnx.kibana-access
  namespace: calico-monitoring
spec:
  order: 1
  tier: allow-cnx
  selector: name == 'kibana-tigera-elasticsearch'
  types:
  - Ingress
  ingress:
  - action: Allow
    protocol: TCP
    source:
      # This policy allows access to Kibana from anywhere.
      # Narrow this down to your management network or remove this
      # policy to block access to Kibana.
      nets: ["0.0.0.0/0"]
    destination:
      ports: [5601]
  - action: Allow
    protocol: TCP
    source:
      # Allow the installer to access Kibana
      selector: job-name == 'elastic-tsee-installer'
    destination:
      ports: [5601]

---

kind: NetworkPolicy
apiVersion: extensions/v1beta1
metadata:
  name: default-deny
  namespace: calico-monitoring
spec:
  podSelector:
    matchLabels: {}
---


// Code generated by mockery v2.14.0. DO NOT EDIT.

package auth

import (
	mock "github.com/stretchr/testify/mock"
	user "k8s.io/apiserver/pkg/authentication/user"

	v1 "k8s.io/api/authorization/v1"
)

// MockRBACAuthorizer is an autogenerated mock type for the RBACAuthorizer type
type MockRBACAuthorizer struct {
	mock.Mock
}

// Authorize provides a mock function with given fields: usr, resources, nonResources
func (_m *MockRBACAuthorizer) Authorize(usr user.Info, resources *v1.ResourceAttributes, nonResources *v1.NonResourceAttributes) (bool, error) {
	ret := _m.Called(usr, resources, nonResources)

	var r0 bool
	if rf, ok := ret.Get(0).(func(user.Info, *v1.ResourceAttributes, *v1.NonResourceAttributes) bool); ok {
		r0 = rf(usr, resources, nonResources)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(user.Info, *v1.ResourceAttributes, *v1.NonResourceAttributes) error); ok {
		r1 = rf(usr, resources, nonResources)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockRBACAuthorizer interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockRBACAuthorizer creates a new instance of MockRBACAuthorizer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockRBACAuthorizer(t mockConstructorTestingTNewMockRBACAuthorizer) *MockRBACAuthorizer {
	mock := &MockRBACAuthorizer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

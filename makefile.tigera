GCR_REPO?=gcr.io/unique-caldron-775/cnx
REPO?=$(GCR_REPO)
PUSH_IMAGE_BASE?=$(REPO)
PUSH_IMAGE?=$(PUSH_IMAGE_BASE)/$(BUILD_IMAGE)

GO_BUILD_VER    ?= v0.50
CALICO_BUILD     = calico/go-build:$(GO_BUILD_VER)
DOCKER_CONFIG ?= $(HOME)/.docker/config.json

.PHONY: imagetag
imagetag:
ifndef IMAGETAG
	$(error IMAGETAG is undefined - run using make <target> IMAGETAG=X.Y.Z)
endif

.PHONY: confirm
confirm:
ifndef CONFIRM
	$(error CONFIRM is undefined - run using make <target> CONFIRM=true)
endif

.PHONY: image
image: imagetag $(BUILD_IMAGE)

$(BUILD_IMAGE):
	docker build --pull -f $(DOCKERFILE) -t $(BUILD_IMAGE):$(IMAGETAG)$(ARCH_TAG) .

push: imagetag confirm
	docker tag $(BUILD_IMAGE):$(IMAGETAG)$(ARCH_TAG) $(PUSH_IMAGE):$(VERSION)
	docker push $(PUSH_IMAGE):$(VERSION)

# Push manifest for Windows images. We need to use a template spec file because there is no way to
# differentiate Windows 10 version tags with manifest-tool's spec args.
#
# We override BUILD_IMAGE since we invoke this target from Linux but we're
# pushing the manifest image for Windows.
push-windows-manifest: imagetag confirm
	rm .manifest.yaml || true
	$(eval BUILD_IMAGE:=$(BUILD_IMAGE)-windows)
	sed -e "s|VERSION|$(VERSION)|g" \
		-e "s|PUSH_IMAGE|$(PUSH_IMAGE)|g" .manifest.yaml.tpl > .manifest.yaml
	docker run --rm -t \
		--entrypoint /bin/sh \
		-v /var/run/docker.sock:/var/run/docker.sock:rw \
		-v $${PWD}/.manifest.yaml:/.manifest.yaml \
		-v $(DOCKER_CONFIG):/root/.docker/config.json \
		$(CALICO_BUILD) \
		-c "/usr/bin/manifest-tool --debug push from-spec /.manifest.yaml"

## Help
.PHONY: help
help:
	$(info Available targets)
	@echo
	@awk '/^[a-zA-Z\-\_0-9\/]+:/ {                                      \
	    nb = sub( /^## /, "", helpMsg );                                \
	    if(nb == 0) {                                                   \
	        helpMsg = $$0;                                              \
	        nb = sub( /^[^:]*:.* ## /, "", helpMsg );                   \
	    }                                                               \
	    if (nb)                                                         \
	        printf "\033[1;31m%-" width "s\033[0m %s\n", $$1, helpMsg;  \
	}                                                                   \
	{ helpMsg = $$0 }'                                                  \
	width=23                                                            \
	$(MAKEFILE_LIST)
	@echo

clean-image: imagetag
	-docker rmi $(BUILD_IMAGE):$(IMAGETAG)$(ARCH_TAG) $(PUSH_IMAGE):$(IMAGETAG)$(ARCH_TAG)

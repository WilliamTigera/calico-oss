#!/bin/bash

cat <<EOF

Running calicoq ST tests with ${CALICOQ=calicoq}

EOF

passed=0
failed=0

function summarise_test {
    echo ------------------------------------------------------
    echo ST TEST SUMMARY: $passed PASSED, $failed FAILED
    echo ------------------------------------------------------
    echo
}

# Get a calicoctl.
cd st
if ! test -x calicoctl; then
    wget https://github.com/projectcalico/calicoctl/releases/download/v1.2.1/calicoctl
    chmod a+x calicoctl
fi
CALICOCTL=`pwd`/calicoctl

# Check there isn't already a calicoq-etcd container.
docker rm -f calicoq-etcd 2>/dev/null

# Run each test case in turn.
cd test-cases
for c in `ls`; do

    cd ${c}

    echo ------------------------------------------------------
    echo TEST: ${c}

    # Run etcd.
    docker run --detach --name calicoq-etcd \
       quay.io/coreos/etcd \
       etcd \
       --advertise-client-urls "http://127.0.0.1:2379,http://127.0.0.1:4001" \
       --listen-client-urls "http://0.0.0.0:2379,http://0.0.0.0:4001"
    etcd_ip=$(docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' calicoq-etcd)
    export ETCD_ENDPOINTS=http://${etcd_ip}:2379
    export DATASTORE_TYPE=etcdv2

    # Mark the DB as ready.
    while ! curl ${ETCD_ENDPOINTS}/v2/keys/calico/v1/Ready -XPUT -d value="true"; do
	sleep 2
    done

    # Apply the resources for the test case.
    ${CALICOCTL} apply -f apply.yaml

    # Check all the expected outputs.
    for expected in `ls *.expected`; do
	actual=$(basename ${expected} .expected).actual
	head -2 ${expected} > ${actual}
	eval '${CALICOQ} `head -1 ${expected}`' >> ${actual}
	if diff -u ${expected} ${actual}; then
	    echo TEST: ${c}/${expected}: PASSED
	    let 'passed++'
	else
	    echo TEST: ${c}/${expected}: FAILED
	    let 'failed++'
	fi
	rm ${actual}
    done

    docker rm -f calicoq-etcd >/dev/null

    echo ------------------------------------------------------
    echo

    cd ..

done

summarise_test

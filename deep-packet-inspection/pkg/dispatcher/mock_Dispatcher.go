// Code generated by mockery v2.27.1. DO NOT EDIT.

package dispatcher

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockDispatcher is an autogenerated mock type for the Dispatcher type
type MockDispatcher struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *MockDispatcher) Close() {
	_m.Called()
}

// Dispatch provides a mock function with given fields: _a0, _a1
func (_m *MockDispatcher) Dispatch(_a0 context.Context, _a1 []CacheRequest) {
	_m.Called(_a0, _a1)
}

type mockConstructorTestingTNewMockDispatcher interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockDispatcher creates a new instance of MockDispatcher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockDispatcher(t mockConstructorTestingTNewMockDispatcher) *MockDispatcher {
	mock := &MockDispatcher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

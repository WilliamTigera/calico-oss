// Code generated by mockery v2.14.0. DO NOT EDIT.

package eventgenerator

import (
	mock "github.com/stretchr/testify/mock"

	model "github.com/projectcalico/calico/libcalico-go/lib/backend/model"
)

// MockEventGenerator is an autogenerated mock type for the EventGenerator type
type MockEventGenerator struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *MockEventGenerator) Close() {
	_m.Called()
}

// GenerateEventsForWEP provides a mock function with given fields: wepKey
func (_m *MockEventGenerator) GenerateEventsForWEP(wepKey model.WorkloadEndpointKey) {
	_m.Called(wepKey)
}

// StopGeneratingEventsForWEP provides a mock function with given fields: wepKey
func (_m *MockEventGenerator) StopGeneratingEventsForWEP(wepKey model.WorkloadEndpointKey) {
	_m.Called(wepKey)
}

type mockConstructorTestingTNewMockEventGenerator interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockEventGenerator creates a new instance of MockEventGenerator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockEventGenerator(t mockConstructorTestingTNewMockEventGenerator) *MockEventGenerator {
	mock := &MockEventGenerator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

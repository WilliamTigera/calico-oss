AWSTemplateFormatVersion: 2010-09-09
Description: Per-VPC Tigera resources
# Creates:
# - Trusted and Has host enforcement Security Groups
# - Creates SQS and the rules and policy to ensure we get the ec2 and rds API events
# - IAM Group and User for controller

Parameters:
  VpcId:
    Description: VPC to use
    Type: AWS::EC2::VPC::Id

Resources:
  # Create two security groups.
  # - tigera-trust-host-enforcement
  # - tigera-has-host-enforcement
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html
  TigeraTrustEnforcement:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: tigera-trust-host-enforcement
      GroupDescription: Trust Tigera host enforcement
      #Tags:
      #  - Resource Tag
      VpcId:
        Ref: VpcId
  TigeraEnforced:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: tigera-has-host-enforcement
      GroupDescription: Instances with Tigera host enforcement
      #Tags:
      #  - Resource Tag
      VpcId:
        Ref: VpcId
  # Create rules for tigera-trust-host-enforcement SG.
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html
  TigeraTrustEnforcementSGEgressToEnforced:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
        - TigeraTrustEnforcement
        - GroupId
      Description: "Allow to Tigera enforced hosts"
      IpProtocol: -1
      FromPort: -1
      ToPort: -1
      DestinationSecurityGroupId:
        Fn::GetAtt:
        - TigeraEnforced
        - GroupId
  TigeraTrustEnforcementSGIngressFromEnforced:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId:
        Fn::GetAtt:
        - TigeraTrustEnforcement
        - GroupId
      Description: "Allow from Tigera enforced hosts"
      IpProtocol: -1
      FromPort: -1
      ToPort: -1
      SourceSecurityGroupId:
        Fn::GetAtt:
        - TigeraEnforced
        - GroupId
  # Create rules for tigera-has-host-enforcement SG.
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html
  TigeraEnforcedSGEgressToTrusted:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
        - TigeraEnforced
        - GroupId
      Description: "Allow to the trusting SG"
      IpProtocol: -1
      FromPort: -1
      ToPort: -1
      DestinationSecurityGroupId:
        Fn::GetAtt:
        - TigeraTrustEnforcement
        - GroupId
  TigeraEnforcedSGIngressFromTrusted:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId:
        Fn::GetAtt:
        - TigeraEnforced
        - GroupId
      Description: "Allow from the trusting SG"
      IpProtocol: -1
      FromPort: -1
      ToPort: -1
      SourceSecurityGroupId:
        Fn::GetAtt:
        - TigeraTrustEnforcement
        - GroupId

  # Create an SQS queue, rule, and queue policy.
  # TODO: Queue depth alarm
  TigeraQueue:
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html
    Type: AWS::SQS::Queue
    Properties:
      DelaySeconds: 0
      # Retention of 1 hour
      MessageRetentionPeriod: 3600
      ReceiveMessageWaitTimeSeconds: 20
      VisibilityTimeout: 5
  TigeraRule:
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html
    Type: AWS::Events::Rule
    DependsOn:
      - TigeraQueue
    Properties:
      Description: Rule for sending events to the SQS queue
      EventPattern:
        source:
          - aws.ec2
          - aws.rds
      State: ENABLED
      Targets:
        - Id: tigera-queue-target
          Arn: !GetAtt
            - TigeraQueue
            - Arn
  TigeraSqsPolicy:
    DependsOn:
      - TigeraQueue
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - Ref: TigeraQueue
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sqs:SendMessage
            Resource: !GetAtt
              - TigeraQueue
              - Arn
            Condition:
              ArnEquals:
                "aws:SourceArn": !GetAtt
                  - TigeraRule
                  - Arn

  # Create an IAM Policy, Group and User for the Tigera AWS controller.
  TigeraControllerGroup:
    Type: "AWS::IAM::Group"
    Properties:
      Policies:
      - PolicyName: "tigera-controller-policy"
        PolicyDocument:
          # TODO: Limit to target VPC.
          Statement:
          - Effect: Allow
            Action:
              - ec2:DescribeNetworkInterfaces
              - ec2:DescribeSecurityGroups
              - ec2:DescribeVpcs
              - ec2:ModifyNetworkInterfaceAttribute
            Resource: "*"
          # Allowances for querying and modifying RDS Instances and Clusters
          - Effect: Allow
            Action:
              - rds:DescribeDBInstances
              - rds:DescribeDBClusters
              - rds:ModifyDBInstance
              - rds:ModifyDBCluster
              - rds:DescribeDBSubnetGroups
            Resource: "*"
          - Effect: Allow
            Action:
              - sqs:ReceiveMessage
              - sqs:DeleteMessageBatch
              - sqs:DeleteMessage
            Resource: !GetAtt
              - TigeraQueue
              - Arn
          - Effect: Allow
            Action:
              - cloudWatch:PutMetricData
            Resource: "*"
  TigeraControllerUser:
    Type: 'AWS::IAM::User'
    Properties:
      Groups:
      - !Ref TigeraControllerGroup

# Output values.
Outputs:
  TigeraEnforcedSG:
    Description: Security group for nodes running ANX host enforcement.
    Value: !GetAtt
      - TigeraEnforced
      - GroupId
  TigeraTrustEnforcedSG:
    Description: Security group for trusting ANX host enforcement.
    Value: !GetAtt
      - TigeraTrustEnforcement
      - GroupId
  QueueURL:
    Description: URL of newly created SQS Queue
    Value: !Ref TigeraQueue
  QueueARN:
    Description: ARN of newly created SQS Queue
    Value: !GetAtt
      - TigeraQueue
      - Arn
  QueueName:
    Description: Name newly created SQS Queue
    Value: !GetAtt
      - TigeraQueue
      - QueueName
  TigeraControllerUserName:
    Description: Name of the IAM User for Tigera Controller
    Value: !Ref TigeraControllerUser

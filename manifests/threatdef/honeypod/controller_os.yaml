---
# Required RBAC:
# - get/list workloadenpoints and pods
apiVersion: v1
kind: ServiceAccount
metadata:
  name: honeypod-controller 
  namespace: tigera-intrusion-detection
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: tigera-intrusion-detection
  name: honeypod-controller-role
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["list","get"]
  - apiGroups: ["crd.projectcalico.org"]
    resources: ["licensekeys"]
    verbs: ["list","watch", "get"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: honeypod-controller-binding
subjects:
  - kind: ServiceAccount
    name: honeypod-controller 
    namespace: tigera-intrusion-detection
roleRef:
  kind: ClusterRole
  name: honeypod-controller-role
  apiGroup: rbac.authorization.k8s.io
---
# The actual honeypod-controller deployment
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: honeypod-controller
  namespace: tigera-intrusion-detection
spec:
  selector:
    matchLabels:
      app: honeypod-controller
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: honeypod-controller
    spec:
      hostNetwork: false
      hostIPC: false
      hostPID: false
      securityContext:
        runAsUser: 999
        runAsGroup: 999
      serviceAccountName: honeypod-controller
      imagePullSecrets:
      - name: tigera-pull-secret
      containers:
      - name: controller 
        imagePullPolicy: "IfNotPresent"
        image: gcr.io/unique-caldron-775/cnx/tigera/honeypod-controller:master
        env:
        - name: ELASTIC_SCHEME
          value: https
        - name: ELASTIC_HOST
          value: tigera-secure-es-gateway-http.tigera-elasticsearch.svc
        - name: ELASTIC_PORT
          value: "9200"
        - name: ELASTIC_SSL_VERIFY
          value: "true"
        - name: ELASTIC_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: tigera-ee-intrusion-detection-elasticsearch-access
        - name: ELASTIC_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: tigera-ee-intrusion-detection-elasticsearch-access
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: tigera-ee-intrusion-detection-elasticsearch-access
        - name: ELASTIC_CA
          value: /etc/ssl/elastic/ca.pem
        - name: ES_CA_CERT
          value: /etc/ssl/elastic/ca.pem
        - name: NODENAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - mountPath: /etc/ssl/elastic/
          name: elastic-ca-cert-volume
          readOnly: true
        - mountPath: /pcap
          name: pcap
          readOnly: true
        - mountPath: /snort
          name: snort
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:
            privileged: true
      volumes:
      - name: elastic-ca-cert-volume
        secret:
          defaultMode: 420
          items:
          - key: tls.crt
            path: ca.pem
          secretName: tigera-secure-es-gateway-http-certs-public
      - name: pcap
        hostPath:
          path: /var/log/calico/pcap/
      - name: snort
        emptyDir: {}
---
apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: allow-tigera.allow-honeypod-controller
  namespace: tigera-intrusion-detection
spec:
  tier: allow-tigera
  order: 1
  selector: app == 'honeypod-controller'
  types:
  - Ingress
  - Egress
  egress:
  - action: Allow
    protocol: TCP
    destination:
      namespaceSelector: name == 'tigera-elasticsearch'
      selector: elasticsearch.k8s.elastic.co/cluster-name == 'tigera-secure'
      ports:
      - 9200
  - action: Allow
    protocol: TCP
    destination:
      namespaceSelector: projectcalico.org/name == 'tigera-elasticsearch'
      selector: k8s-app == 'tigera-secure-es-gateway'
      ports:
      - 5554
  - action: Allow
    protocol: UDP
    destination:
      namespaceSelector: projectcalico.org/name == 'kube-system'
      selector: k8s-app == 'kube-dns'
      ports:
      - 53
  - action: Allow
    protocol: UDP
    destination:
      namespaceSelector: projectcalico.org/name == "openshift-dns"
      selector: dns.operator.openshift.io/daemonset-dns == "default"
      ports: [5353]
  - action: Allow
    protocol: TCP
    source: {}
    destination:
      selector: >-
        (provider == "kubernetes"&&component ==
        "apiserver"&&endpoints.projectcalico.org/serviceName == "kubernetes")
      namespaceSelector: projectcalico.org/name == "default"
      ports:
        - '443'
        - '6443'
        - '12388'
---
apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: allow-tigera.elasticsearch-access-honeypod-controller
  namespace: tigera-elasticsearch
spec:
  tier: allow-tigera
  order: 1
  selector: elasticsearch.k8s.elastic.co/cluster-name == 'tigera-secure'
  types:
  - Ingress
  ingress:
  - action: Allow
    destination:
      ports:
      - 9200
    protocol: TCP
    source:
      namespaceSelector: name == 'tigera-intrusion-detection'
      selector:  app == 'honeypod-controller'
---

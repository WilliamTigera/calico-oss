kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: default-deny
  namespace: tigera-elasticsearch
spec:
  podSelector:
    matchLabels: {}

---

kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: default-deny
  namespace: tigera-compliance
spec:
  podSelector:
    matchLabels: {}

---

kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: default-deny
  namespace: tigera-prometheus
spec:
  podSelector:
    matchLabels: {}

---

# Tier containing policies to allow access to Calico Enterprise.
apiVersion: projectcalico.org/v3
kind: Tier
metadata:
  name: allow-tigera
spec:
  order: 100

---

# Allow the Kubernetes API Server access to Calico Enterprise API Server.
apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: allow-tigera.cnx-apiserver-access
  namespace: tigera-system
spec:
  order: 1
  tier: allow-tigera
  selector: k8s-app == 'cnx-apiserver'
  types:
  - Ingress
  ingress:
  - action: Allow
    protocol: TCP
    source:
      # This policy allows Calico Enterprise API Server access from anywhere: replace it with
      # the addresses of your Kubernetes API Servers if those are static.
      nets: ["0.0.0.0/0"]
    destination:
      # The ports Calico Enterprise API Server and Calico Enterprise Query Server are configured to listen on.
      ports: [443, 5443, 8080, 10443]
---

# This manifest creates a network policy to allow traffic to Alertmanager
# (TCP port 9093).
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: calico-node-alertmanager
  namespace: tigera-prometheus
spec:
  ingress:
  - ports:
    - port: 9093
      protocol: TCP
  podSelector:
    matchLabels:
      alertmanager: calico-node-alertmanager
      app: alertmanager
---

# This manifest creates a network policy to allow traffic between
# Alertmanagers for HA configuration (TCP port 6783).
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: calico-node-alertmanager-mesh
  namespace: tigera-prometheus
spec:
  ingress:
  - from:
    - podSelector:
        matchExpressions:
        - key: app
          operator: In
          values:
          - alertmanager
        - key: alertmanager
          operator: In
          values:
          - calico-node-alertmanager
    ports:
    - port: 9094
      protocol: TCP
  podSelector:
    matchLabels:
      alertmanager: calico-node-alertmanager
      app: alertmanager
---

# This manifest creates a network policy to allow traffic to access the
# Prometheus (TCP port 9090).
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: prometheus
  namespace: tigera-prometheus
spec:
  ingress:
  - ports:
    - port: 9090
      protocol: TCP
  podSelector:
    matchLabels:
      app: prometheus
      prometheus: calico-node-prometheus
---

# Allow access to Elasticsearch client nodes from Kibana, fluentd, and the
# intrusion detection installer
apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: allow-tigera.elasticsearch-access
  namespace: tigera-elasticsearch
spec:
  order: 1
  tier: allow-tigera
  selector: elasticsearch.k8s.elastic.co/cluster-name == 'tigera-secure'
  types:
  - Ingress
  ingress:
  - action: Allow
    protocol: TCP
    source:
      selector: k8s-app == 'fluentd-node'
      namespaceSelector: name == 'tigera-fluentd'
    destination:
      ports: [9200]
  - action: Allow
    protocol: TCP
    source:
      selector: k8s-app == 'eks-log-forwarder'
      namespaceSelector: name == 'tigera-fluentd'
    destination:
      ports: [9200]
  - action: Allow
    protocol: TCP
    source:
      selector: k8s-app == 'elastic-curator'
      namespaceSelector: name == 'tigera-elasticsearch'
    destination:
      ports: [9200]
  - action: Allow
    destination:
      ports: [9200]
    protocol: TCP
    source:
      selector: k8s-app == 'compliance-benchmarker'
      namespaceSelector: name == 'tigera-compliance'
  - action: Allow
    destination:
      ports: [9200]
    protocol: TCP
    source:
      selector: k8s-app == 'compliance-controller'
      namespaceSelector: name == 'tigera-compliance'
  - action: Allow
    destination:
      ports: [9200]
    protocol: TCP
    source:
      selector: k8s-app == 'compliance-server'
      namespaceSelector: name == 'tigera-compliance'
  - action: Allow
    destination:
      ports: [9200]
    protocol: TCP
    source:
      selector: k8s-app == 'compliance-snapshotter'
      namespaceSelector: name == 'tigera-compliance'
  - action: Allow
    destination:
      ports: [9200]
    protocol: TCP
    source:
      selector: k8s-app == 'compliance-reporter'
      namespaceSelector: name == 'tigera-compliance'
  - action: Allow
    destination:
      ports: [9200]
    protocol: TCP
    source:
      selector: k8s-app == 'elastic-operator'
      namespaceSelector: name == 'tigera-eck-operator'
  - action: Allow
    destination:
      ports: [9200]
    protocol: TCP
    # If the node CIDRs are known they can be added to this rule to restrict access to just the nodes in the cluster

---

# Allow internal communication within the ElasticSearch cluster
apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: allow-tigera.elasticsearch-internal
  namespace: tigera-elasticsearch
spec:
  order: 1
  tier: allow-tigera
  selector: elasticsearch.k8s.elastic.co/cluster-name == 'tigera-secure'
  types:
  - Ingress
  ingress:
  - action: Allow
    protocol: TCP
    source:
      selector: elasticsearch.k8s.elastic.co/cluster-name == 'tigera-secure'
    destination:
      ports: [9300]

---

# This policy was generated with policy recommendation in order to make
# fluend POD marked protected by compliance (network access report) 
apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  labels:
    projectcalico.org/tier: default
  name: default.allow-fluentd-node
  namespace: tigera-fluentd
spec:
  egress:
  - action: Allow
    destination:
      namespaceSelector: projectcalico.org/name == "kube-system"
      ports:
      - 53
      selector: k8s-app == "kube-dns"
    protocol: UDP
    source: {}
  - action: Allow
    destination:
      namespaceSelector: projectcalico.org/name == "tigera-elasticsearch"
      ports:
      - 9200
      selector: (elasticsearch.k8s.elastic.co/node-master == "true"&&elasticsearch.k8s.elastic.co/node-ml
        == "true"&&common.k8s.elastic.co/type
        == "elasticsearch"&&elasticsearch.k8s.elastic.co/cluster-name
        == "tigera-secure"&&elasticsearch.k8s.elastic.co/node-data == "true"&&elasticsearch.k8s.elastic.co/node-ingest
        == "true")
    protocol: TCP
    source: {}
  order: 1
  selector: k8s-app == "fluentd-node"
  tier: default
  types:
  - Ingress
  - Egress

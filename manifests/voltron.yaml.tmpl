---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cnx-voltron
  namespace: calico-monitoring
---
# Give cnx-voltron ServiceAccount permissions needed for
# running authorization checks.
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: cnx-voltron-role
rules:
  - apiGroups: ["authentication.k8s.io"]
    resources:
      - tokenreviews
    verbs:
      - create
---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: cnx-voltron-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cnx-voltron-role
subjects:
- kind: ServiceAccount
  name: cnx-voltron
  namespace: calico-monitoring

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: cnx-voltron-config
  namespace: calico-monitoring
data:
  # Server port UI / mgmt
  cnx-voltron.port: "9443"
  # Server port for the tunnels
  cnx-voltron.tunnel-port: "9449"
  # Logging level
  cnx-voltron.log-level: "DEBUG"
  # Voltron public IP
  cnx-voltron.public-ip: "127.0.0.0:30449"
---
apiVersion: v1
data:
  voltron.crt: {{VOLTRON_CRT_BASE64}}
  voltron.key: {{VOLTRON_KEY_BASE64}}
kind: Secret
metadata:
  name: cnx-voltron-tls
  namespace: calico-monitoring
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: cnx-voltron
  name: cnx-voltron-server
  namespace: calico-monitoring
spec:
  selector:
    k8s-app: cnx-voltron
  ports:
    - port: 9443
      nodePort: 30443
      protocol: TCP
      name: mgmt
    - port: 9449
      nodePort: 30449
      protocol: TCP
      name: tunnels
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cnx-voltron
  namespace: calico-monitoring
  labels:
    k8s-app: cnx-voltron
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      k8s-app: cnx-voltron
  template:
    metadata:
      name: cnx-voltron
      namespace: calico-monitoring
      labels:
        k8s-app: cnx-voltron
      annotations:
        # Mark this pod as a critical add-on; when enabled,
        # the critical add-on scheduler reserves resources
        # for critical add-on pods so that they can be rescheduled
        # after a failure.  This annotation works in tandem
        # with the toleration below.
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      # TODO: We are currently piggybacking off the existing
      # ServiceAccount for cnx-voltron
      serviceAccountName: cnx-voltron
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
        # Allow this pod to be rescheduled while the node is in
        # "critical add-ons only" mode. This, along with the
        # annotation above marks this pod as a critical add-on.
        - key: CriticalAddonsOnly
          operator: Exists
      # Use the same pull secret as the rest of TSEE
      imagePullSecrets:
        - name: cnx-pull-secret
      containers:
        - name: cnx-voltron
          # Currently using latest tag, should switch to specific
          # version tag as we get closer to release time
          image: {{VOLTRON_DOCKER_PUSH_REPO}}/tigera/voltron:{{VOLTRON_DOCKER_TAG}}
          imagePullPolicy: Always
          env:
            - name: VOLTRON_PORT
              valueFrom:
                configMapKeyRef:
                  name: cnx-voltron-config
                  key: cnx-voltron.port
            - name: VOLTRON_LOGLEVEL
              valueFrom:
                configMapKeyRef:
                  name: cnx-voltron-config
                  key: cnx-voltron.log-level
            - name: VOLTRON_TUNNEL_PORT
              valueFrom:
                configMapKeyRef:
                  name: cnx-voltron-config
                  key: cnx-voltron.tunnel-port
            - name: VOLTRON_PUBLIC_IP
              valueFrom:
                configMapKeyRef:
                  name: cnx-voltron-config
                  key: cnx-voltron.public-ip
          # TODO: Should we have resource limits defined?
          resources: {}
          volumeMounts:
            - mountPath: /certs/
              name: cnx-voltron-tls
          livenessProbe:
            httpGet:
              path: /voltron/api/health
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 90
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /voltron/api/health
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 5
      volumes:
        - name: cnx-voltron-tls
          secret:
            secretName: cnx-voltron-tls

{
    "swagger": "2.0",
    "info": {
      "title": "",
      "version": "v3"
    },
    "host": "kubernetes.master",
    "basePath": "/apis/projectcalico.org/v3",
    "paths": {
      "/": {
        "get": {
          "consumes": [
            "application/json",
            "application/yaml"
          ],
          "description": "get available resources",
          "operationId": "getProjectcalicoOrgV3APIResources",
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ]
        }
      },
      "/apis/projectcalico.org/": {
        "get": {
          "consumes": [
            "application/json",
            "application/yaml"
          ],
          "description": "get information of a group",
          "operationId": "getProjectcalicoOrgAPIGroup",
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            "projectcalicoOrg"
          ]
        }
      },
      "/authenticationreviews": {
        "parameters": [
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "in": "query",
            "name": "fieldManager",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "post": {
          "consumes": [
            "*/*"
          ],
          "description": "create an AuthenticationReview",
          "operationId": "createProjectcalicoOrgV3AuthenticationReview",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.AuthenticationReview"
              }
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.AuthenticationReview"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.AuthenticationReview"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.AuthenticationReview"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "post",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "AuthenticationReview",
            "version": "v3"
          }
        }
      },
      "/authorizationreviews": {
        "parameters": [
          {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "in": "query",
            "name": "dryRun",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "in": "query",
            "name": "fieldManager",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "post": {
          "consumes": [
            "*/*"
          ],
          "description": "create an AuthorizationReview",
          "operationId": "createProjectcalicoOrgV3AuthorizationReview",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.AuthorizationReview"
              }
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.AuthorizationReview"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.AuthorizationReview"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.AuthorizationReview"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "post",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "AuthorizationReview",
            "version": "v3"
          }
        }
      },
      "/bgpconfigurations": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete collection of BGPConfiguration",
          "operationId": "deleteProjectcalicoOrgV3CollectionBGPConfiguration",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "deletecollection",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "BGPConfiguration",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind BGPConfiguration",
          "operationId": "listProjectcalicoOrgV3BGPConfiguration",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.BGPConfigurationList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "BGPConfiguration",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "post": {
          "consumes": [
            "*/*"
          ],
          "description": "create a BGPConfiguration",
          "operationId": "createProjectcalicoOrgV3BGPConfiguration",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.BGPConfiguration"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.BGPConfiguration"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.BGPConfiguration"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.BGPConfiguration"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "post",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "BGPConfiguration",
            "version": "v3"
          }
        }
      },
      "/bgpconfigurations/{name}": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete a BGPConfiguration",
          "operationId": "deleteProjectcalicoOrgV3BGPConfiguration",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "delete",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "BGPConfiguration",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read the specified BGPConfiguration",
          "operationId": "readProjectcalicoOrgV3BGPConfiguration",
          "parameters": [
            {
              "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "exact",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "export",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.BGPConfiguration"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "BGPConfiguration",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the BGPConfiguration",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update the specified BGPConfiguration",
          "operationId": "patchProjectcalicoOrgV3BGPConfiguration",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.BGPConfiguration"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "BGPConfiguration",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace the specified BGPConfiguration",
          "operationId": "replaceProjectcalicoOrgV3BGPConfiguration",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.BGPConfiguration"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.BGPConfiguration"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.BGPConfiguration"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "BGPConfiguration",
            "version": "v3"
          }
        }
      },
      "/bgppeers": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete collection of BGPPeer",
          "operationId": "deleteProjectcalicoOrgV3CollectionBGPPeer",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "deletecollection",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "BGPPeer",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind BGPPeer",
          "operationId": "listProjectcalicoOrgV3BGPPeer",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.BGPPeerList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "BGPPeer",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "post": {
          "consumes": [
            "*/*"
          ],
          "description": "create a BGPPeer",
          "operationId": "createProjectcalicoOrgV3BGPPeer",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.BGPPeer"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.BGPPeer"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.BGPPeer"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.BGPPeer"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "post",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "BGPPeer",
            "version": "v3"
          }
        }
      },
      "/bgppeers/{name}": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete a BGPPeer",
          "operationId": "deleteProjectcalicoOrgV3BGPPeer",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "delete",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "BGPPeer",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read the specified BGPPeer",
          "operationId": "readProjectcalicoOrgV3BGPPeer",
          "parameters": [
            {
              "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "exact",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "export",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.BGPPeer"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "BGPPeer",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the BGPPeer",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update the specified BGPPeer",
          "operationId": "patchProjectcalicoOrgV3BGPPeer",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.BGPPeer"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "BGPPeer",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace the specified BGPPeer",
          "operationId": "replaceProjectcalicoOrgV3BGPPeer",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.BGPPeer"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.BGPPeer"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.BGPPeer"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "BGPPeer",
            "version": "v3"
          }
        }
      },
      "/clusterinformations": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete collection of ClusterInformation",
          "operationId": "deleteProjectcalicoOrgV3CollectionClusterInformation",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "deletecollection",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "ClusterInformation",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind ClusterInformation",
          "operationId": "listProjectcalicoOrgV3ClusterInformation",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ClusterInformationList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "ClusterInformation",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "post": {
          "consumes": [
            "*/*"
          ],
          "description": "create a ClusterInformation",
          "operationId": "createProjectcalicoOrgV3ClusterInformation",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ClusterInformation"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ClusterInformation"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ClusterInformation"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ClusterInformation"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "post",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "ClusterInformation",
            "version": "v3"
          }
        }
      },
      "/clusterinformations/{name}": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete a ClusterInformation",
          "operationId": "deleteProjectcalicoOrgV3ClusterInformation",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "delete",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "ClusterInformation",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read the specified ClusterInformation",
          "operationId": "readProjectcalicoOrgV3ClusterInformation",
          "parameters": [
            {
              "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "exact",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "export",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ClusterInformation"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "ClusterInformation",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the ClusterInformation",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update the specified ClusterInformation",
          "operationId": "patchProjectcalicoOrgV3ClusterInformation",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ClusterInformation"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "ClusterInformation",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace the specified ClusterInformation",
          "operationId": "replaceProjectcalicoOrgV3ClusterInformation",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ClusterInformation"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ClusterInformation"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ClusterInformation"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "ClusterInformation",
            "version": "v3"
          }
        }
      },
      "/felixconfigurations": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete collection of FelixConfiguration",
          "operationId": "deleteProjectcalicoOrgV3CollectionFelixConfiguration",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "deletecollection",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "FelixConfiguration",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind FelixConfiguration",
          "operationId": "listProjectcalicoOrgV3FelixConfiguration",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.FelixConfigurationList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "FelixConfiguration",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "post": {
          "consumes": [
            "*/*"
          ],
          "description": "create a FelixConfiguration",
          "operationId": "createProjectcalicoOrgV3FelixConfiguration",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.FelixConfiguration"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.FelixConfiguration"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.FelixConfiguration"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.FelixConfiguration"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "post",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "FelixConfiguration",
            "version": "v3"
          }
        }
      },
      "/felixconfigurations/{name}": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete a FelixConfiguration",
          "operationId": "deleteProjectcalicoOrgV3FelixConfiguration",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "delete",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "FelixConfiguration",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read the specified FelixConfiguration",
          "operationId": "readProjectcalicoOrgV3FelixConfiguration",
          "parameters": [
            {
              "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "exact",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "export",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.FelixConfiguration"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "FelixConfiguration",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the FelixConfiguration",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update the specified FelixConfiguration",
          "operationId": "patchProjectcalicoOrgV3FelixConfiguration",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.FelixConfiguration"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "FelixConfiguration",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace the specified FelixConfiguration",
          "operationId": "replaceProjectcalicoOrgV3FelixConfiguration",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.FelixConfiguration"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.FelixConfiguration"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.FelixConfiguration"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "FelixConfiguration",
            "version": "v3"
          }
        }
      },
      "/globalalerts": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete collection of GlobalAlert",
          "operationId": "deleteProjectcalicoOrgV3CollectionGlobalAlert",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "deletecollection",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalAlert",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind GlobalAlert",
          "operationId": "listProjectcalicoOrgV3GlobalAlert",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlertList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalAlert",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "post": {
          "consumes": [
            "*/*"
          ],
          "description": "create a GlobalAlert",
          "operationId": "createProjectcalicoOrgV3GlobalAlert",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlert"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlert"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlert"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlert"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "post",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalAlert",
            "version": "v3"
          }
        }
      },
      "/globalalerts/{name}": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete a GlobalAlert",
          "operationId": "deleteProjectcalicoOrgV3GlobalAlert",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "delete",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalAlert",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read the specified GlobalAlert",
          "operationId": "readProjectcalicoOrgV3GlobalAlert",
          "parameters": [
            {
              "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "exact",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "export",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlert"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalAlert",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the GlobalAlert",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update the specified GlobalAlert",
          "operationId": "patchProjectcalicoOrgV3GlobalAlert",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlert"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalAlert",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace the specified GlobalAlert",
          "operationId": "replaceProjectcalicoOrgV3GlobalAlert",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlert"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlert"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlert"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalAlert",
            "version": "v3"
          }
        }
      },
      "/globalalerts/{name}/status": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read status of the specified GlobalAlert",
          "operationId": "readProjectcalicoOrgV3GlobalAlertStatus",
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlert"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalAlert",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the GlobalAlert",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update status of the specified GlobalAlert",
          "operationId": "patchProjectcalicoOrgV3GlobalAlertStatus",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlert"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalAlert",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace status of the specified GlobalAlert",
          "operationId": "replaceProjectcalicoOrgV3GlobalAlertStatus",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlert"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlert"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlert"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalAlert",
            "version": "v3"
          }
        }
      },
      "/globalalerttemplates": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete collection of GlobalAlertTemplate",
          "operationId": "deleteProjectcalicoOrgV3CollectionGlobalAlertTemplate",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "deletecollection",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalAlertTemplate",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind GlobalAlertTemplate",
          "operationId": "listProjectcalicoOrgV3GlobalAlertTemplate",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlertTemplateList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalAlertTemplate",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "post": {
          "consumes": [
            "*/*"
          ],
          "description": "create a GlobalAlertTemplate",
          "operationId": "createProjectcalicoOrgV3GlobalAlertTemplate",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlertTemplate"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlertTemplate"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlertTemplate"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlertTemplate"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "post",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalAlertTemplate",
            "version": "v3"
          }
        }
      },
      "/globalalerttemplates/{name}": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete a GlobalAlertTemplate",
          "operationId": "deleteProjectcalicoOrgV3GlobalAlertTemplate",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "delete",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalAlertTemplate",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read the specified GlobalAlertTemplate",
          "operationId": "readProjectcalicoOrgV3GlobalAlertTemplate",
          "parameters": [
            {
              "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "exact",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "export",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlertTemplate"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalAlertTemplate",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the GlobalAlertTemplate",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update the specified GlobalAlertTemplate",
          "operationId": "patchProjectcalicoOrgV3GlobalAlertTemplate",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlertTemplate"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalAlertTemplate",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace the specified GlobalAlertTemplate",
          "operationId": "replaceProjectcalicoOrgV3GlobalAlertTemplate",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlertTemplate"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlertTemplate"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlertTemplate"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalAlertTemplate",
            "version": "v3"
          }
        }
      },
      "/globalnetworkpolicies": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete collection of GlobalNetworkPolicy",
          "operationId": "deleteProjectcalicoOrgV3CollectionGlobalNetworkPolicy",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "deletecollection",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalNetworkPolicy",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind GlobalNetworkPolicy",
          "operationId": "listProjectcalicoOrgV3GlobalNetworkPolicy",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalNetworkPolicyList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalNetworkPolicy",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "post": {
          "consumes": [
            "*/*"
          ],
          "description": "create a GlobalNetworkPolicy",
          "operationId": "createProjectcalicoOrgV3GlobalNetworkPolicy",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalNetworkPolicy"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalNetworkPolicy"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalNetworkPolicy"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalNetworkPolicy"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "post",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalNetworkPolicy",
            "version": "v3"
          }
        }
      },
      "/globalnetworkpolicies/{name}": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete a GlobalNetworkPolicy",
          "operationId": "deleteProjectcalicoOrgV3GlobalNetworkPolicy",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "delete",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalNetworkPolicy",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read the specified GlobalNetworkPolicy",
          "operationId": "readProjectcalicoOrgV3GlobalNetworkPolicy",
          "parameters": [
            {
              "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "exact",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "export",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalNetworkPolicy"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalNetworkPolicy",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the GlobalNetworkPolicy",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update the specified GlobalNetworkPolicy",
          "operationId": "patchProjectcalicoOrgV3GlobalNetworkPolicy",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalNetworkPolicy"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalNetworkPolicy",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace the specified GlobalNetworkPolicy",
          "operationId": "replaceProjectcalicoOrgV3GlobalNetworkPolicy",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalNetworkPolicy"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalNetworkPolicy"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalNetworkPolicy"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalNetworkPolicy",
            "version": "v3"
          }
        }
      },
      "/globalnetworksets": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete collection of GlobalNetworkSet",
          "operationId": "deleteProjectcalicoOrgV3CollectionGlobalNetworkSet",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "deletecollection",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalNetworkSet",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind GlobalNetworkSet",
          "operationId": "listProjectcalicoOrgV3GlobalNetworkSet",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalNetworkSetList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalNetworkSet",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "post": {
          "consumes": [
            "*/*"
          ],
          "description": "create a GlobalNetworkSet",
          "operationId": "createProjectcalicoOrgV3GlobalNetworkSet",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalNetworkSet"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalNetworkSet"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalNetworkSet"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalNetworkSet"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "post",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalNetworkSet",
            "version": "v3"
          }
        }
      },
      "/globalnetworksets/{name}": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete a GlobalNetworkSet",
          "operationId": "deleteProjectcalicoOrgV3GlobalNetworkSet",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "delete",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalNetworkSet",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read the specified GlobalNetworkSet",
          "operationId": "readProjectcalicoOrgV3GlobalNetworkSet",
          "parameters": [
            {
              "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "exact",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "export",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalNetworkSet"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalNetworkSet",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the GlobalNetworkSet",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update the specified GlobalNetworkSet",
          "operationId": "patchProjectcalicoOrgV3GlobalNetworkSet",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalNetworkSet"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalNetworkSet",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace the specified GlobalNetworkSet",
          "operationId": "replaceProjectcalicoOrgV3GlobalNetworkSet",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalNetworkSet"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalNetworkSet"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalNetworkSet"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalNetworkSet",
            "version": "v3"
          }
        }
      },
      "/globalreports": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete collection of GlobalReport",
          "operationId": "deleteProjectcalicoOrgV3CollectionGlobalReport",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "deletecollection",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalReport",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind GlobalReport",
          "operationId": "listProjectcalicoOrgV3GlobalReport",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReportList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalReport",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "post": {
          "consumes": [
            "*/*"
          ],
          "description": "create a GlobalReport",
          "operationId": "createProjectcalicoOrgV3GlobalReport",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReport"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReport"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReport"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReport"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "post",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalReport",
            "version": "v3"
          }
        }
      },
      "/globalreports/{name}": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete a GlobalReport",
          "operationId": "deleteProjectcalicoOrgV3GlobalReport",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "delete",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalReport",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read the specified GlobalReport",
          "operationId": "readProjectcalicoOrgV3GlobalReport",
          "parameters": [
            {
              "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "exact",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "export",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReport"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalReport",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the GlobalReport",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update the specified GlobalReport",
          "operationId": "patchProjectcalicoOrgV3GlobalReport",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReport"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalReport",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace the specified GlobalReport",
          "operationId": "replaceProjectcalicoOrgV3GlobalReport",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReport"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReport"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReport"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalReport",
            "version": "v3"
          }
        }
      },
      "/globalreports/{name}/status": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read status of the specified GlobalReport",
          "operationId": "readProjectcalicoOrgV3GlobalReportStatus",
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReport"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalReport",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the GlobalReport",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update status of the specified GlobalReport",
          "operationId": "patchProjectcalicoOrgV3GlobalReportStatus",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReport"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalReport",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace status of the specified GlobalReport",
          "operationId": "replaceProjectcalicoOrgV3GlobalReportStatus",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReport"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReport"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReport"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalReport",
            "version": "v3"
          }
        }
      },
      "/globalreporttypes": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete collection of GlobalReportType",
          "operationId": "deleteProjectcalicoOrgV3CollectionGlobalReportType",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "deletecollection",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalReportType",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind GlobalReportType",
          "operationId": "listProjectcalicoOrgV3GlobalReportType",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReportTypeList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalReportType",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "post": {
          "consumes": [
            "*/*"
          ],
          "description": "create a GlobalReportType",
          "operationId": "createProjectcalicoOrgV3GlobalReportType",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReportType"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReportType"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReportType"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReportType"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "post",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalReportType",
            "version": "v3"
          }
        }
      },
      "/globalreporttypes/{name}": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete a GlobalReportType",
          "operationId": "deleteProjectcalicoOrgV3GlobalReportType",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "delete",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalReportType",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read the specified GlobalReportType",
          "operationId": "readProjectcalicoOrgV3GlobalReportType",
          "parameters": [
            {
              "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "exact",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "export",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReportType"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalReportType",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the GlobalReportType",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update the specified GlobalReportType",
          "operationId": "patchProjectcalicoOrgV3GlobalReportType",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReportType"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalReportType",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace the specified GlobalReportType",
          "operationId": "replaceProjectcalicoOrgV3GlobalReportType",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReportType"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReportType"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReportType"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalReportType",
            "version": "v3"
          }
        }
      },
      "/globalthreatfeeds": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete collection of GlobalThreatFeed",
          "operationId": "deleteProjectcalicoOrgV3CollectionGlobalThreatFeed",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "deletecollection",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalThreatFeed",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind GlobalThreatFeed",
          "operationId": "listProjectcalicoOrgV3GlobalThreatFeed",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalThreatFeedList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalThreatFeed",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "post": {
          "consumes": [
            "*/*"
          ],
          "description": "create a GlobalThreatFeed",
          "operationId": "createProjectcalicoOrgV3GlobalThreatFeed",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "post",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalThreatFeed",
            "version": "v3"
          }
        }
      },
      "/globalthreatfeeds/{name}": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete a GlobalThreatFeed",
          "operationId": "deleteProjectcalicoOrgV3GlobalThreatFeed",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "delete",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalThreatFeed",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read the specified GlobalThreatFeed",
          "operationId": "readProjectcalicoOrgV3GlobalThreatFeed",
          "parameters": [
            {
              "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "exact",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "export",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalThreatFeed",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the GlobalThreatFeed",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update the specified GlobalThreatFeed",
          "operationId": "patchProjectcalicoOrgV3GlobalThreatFeed",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalThreatFeed",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace the specified GlobalThreatFeed",
          "operationId": "replaceProjectcalicoOrgV3GlobalThreatFeed",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalThreatFeed",
            "version": "v3"
          }
        }
      },
      "/globalthreatfeeds/{name}/status": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read status of the specified GlobalThreatFeed",
          "operationId": "readProjectcalicoOrgV3GlobalThreatFeedStatus",
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalThreatFeed",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the GlobalThreatFeed",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update status of the specified GlobalThreatFeed",
          "operationId": "patchProjectcalicoOrgV3GlobalThreatFeedStatus",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalThreatFeed",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace status of the specified GlobalThreatFeed",
          "operationId": "replaceProjectcalicoOrgV3GlobalThreatFeedStatus",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalThreatFeed",
            "version": "v3"
          }
        }
      },
      "/hostendpoints": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete collection of HostEndpoint",
          "operationId": "deleteProjectcalicoOrgV3CollectionHostEndpoint",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "deletecollection",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "HostEndpoint",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind HostEndpoint",
          "operationId": "listProjectcalicoOrgV3HostEndpoint",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.HostEndpointList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "HostEndpoint",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "post": {
          "consumes": [
            "*/*"
          ],
          "description": "create a HostEndpoint",
          "operationId": "createProjectcalicoOrgV3HostEndpoint",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.HostEndpoint"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.HostEndpoint"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.HostEndpoint"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.HostEndpoint"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "post",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "HostEndpoint",
            "version": "v3"
          }
        }
      },
      "/hostendpoints/{name}": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete a HostEndpoint",
          "operationId": "deleteProjectcalicoOrgV3HostEndpoint",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "delete",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "HostEndpoint",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read the specified HostEndpoint",
          "operationId": "readProjectcalicoOrgV3HostEndpoint",
          "parameters": [
            {
              "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "exact",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "export",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.HostEndpoint"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "HostEndpoint",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the HostEndpoint",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update the specified HostEndpoint",
          "operationId": "patchProjectcalicoOrgV3HostEndpoint",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.HostEndpoint"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "HostEndpoint",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace the specified HostEndpoint",
          "operationId": "replaceProjectcalicoOrgV3HostEndpoint",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.HostEndpoint"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.HostEndpoint"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.HostEndpoint"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "HostEndpoint",
            "version": "v3"
          }
        }
      },
      "/ippools": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete collection of IPPool",
          "operationId": "deleteProjectcalicoOrgV3CollectionIPPool",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "deletecollection",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "IPPool",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind IPPool",
          "operationId": "listProjectcalicoOrgV3IPPool",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.IPPoolList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "IPPool",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "post": {
          "consumes": [
            "*/*"
          ],
          "description": "create an IPPool",
          "operationId": "createProjectcalicoOrgV3IPPool",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.IPPool"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.IPPool"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.IPPool"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.IPPool"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "post",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "IPPool",
            "version": "v3"
          }
        }
      },
      "/ippools/{name}": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete an IPPool",
          "operationId": "deleteProjectcalicoOrgV3IPPool",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "delete",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "IPPool",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read the specified IPPool",
          "operationId": "readProjectcalicoOrgV3IPPool",
          "parameters": [
            {
              "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "exact",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "export",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.IPPool"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "IPPool",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the IPPool",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update the specified IPPool",
          "operationId": "patchProjectcalicoOrgV3IPPool",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.IPPool"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "IPPool",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace the specified IPPool",
          "operationId": "replaceProjectcalicoOrgV3IPPool",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.IPPool"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.IPPool"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.IPPool"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "IPPool",
            "version": "v3"
          }
        }
      },
      "/kubecontrollersconfigurations": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete collection of KubeControllersConfiguration",
          "operationId": "deleteProjectcalicoOrgV3CollectionKubeControllersConfiguration",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "deletecollection",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "KubeControllersConfiguration",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind KubeControllersConfiguration",
          "operationId": "listProjectcalicoOrgV3KubeControllersConfiguration",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.KubeControllersConfigurationList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "KubeControllersConfiguration",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "post": {
          "consumes": [
            "*/*"
          ],
          "description": "create a KubeControllersConfiguration",
          "operationId": "createProjectcalicoOrgV3KubeControllersConfiguration",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.KubeControllersConfiguration"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.KubeControllersConfiguration"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.KubeControllersConfiguration"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.KubeControllersConfiguration"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "post",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "KubeControllersConfiguration",
            "version": "v3"
          }
        }
      },
      "/kubecontrollersconfigurations/{name}": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete a KubeControllersConfiguration",
          "operationId": "deleteProjectcalicoOrgV3KubeControllersConfiguration",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "delete",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "KubeControllersConfiguration",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read the specified KubeControllersConfiguration",
          "operationId": "readProjectcalicoOrgV3KubeControllersConfiguration",
          "parameters": [
            {
              "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "exact",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "export",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.KubeControllersConfiguration"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "KubeControllersConfiguration",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the KubeControllersConfiguration",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update the specified KubeControllersConfiguration",
          "operationId": "patchProjectcalicoOrgV3KubeControllersConfiguration",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.KubeControllersConfiguration"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "KubeControllersConfiguration",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace the specified KubeControllersConfiguration",
          "operationId": "replaceProjectcalicoOrgV3KubeControllersConfiguration",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.KubeControllersConfiguration"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.KubeControllersConfiguration"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.KubeControllersConfiguration"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "KubeControllersConfiguration",
            "version": "v3"
          }
        }
      },
      "/kubecontrollersconfigurations/{name}/status": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read status of the specified KubeControllersConfiguration",
          "operationId": "readProjectcalicoOrgV3KubeControllersConfigurationStatus",
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.KubeControllersConfiguration"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "KubeControllersConfiguration",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the KubeControllersConfiguration",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update status of the specified KubeControllersConfiguration",
          "operationId": "patchProjectcalicoOrgV3KubeControllersConfigurationStatus",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.KubeControllersConfiguration"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "KubeControllersConfiguration",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace status of the specified KubeControllersConfiguration",
          "operationId": "replaceProjectcalicoOrgV3KubeControllersConfigurationStatus",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.KubeControllersConfiguration"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.KubeControllersConfiguration"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.KubeControllersConfiguration"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "KubeControllersConfiguration",
            "version": "v3"
          }
        }
      },
      "/licensekeys": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete collection of LicenseKey",
          "operationId": "deleteProjectcalicoOrgV3CollectionLicenseKey",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "deletecollection",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "LicenseKey",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind LicenseKey",
          "operationId": "listProjectcalicoOrgV3LicenseKey",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.LicenseKeyList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "LicenseKey",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "post": {
          "consumes": [
            "*/*"
          ],
          "description": "create a LicenseKey",
          "operationId": "createProjectcalicoOrgV3LicenseKey",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.LicenseKey"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.LicenseKey"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.LicenseKey"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.LicenseKey"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "post",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "LicenseKey",
            "version": "v3"
          }
        }
      },
      "/licensekeys/{name}": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete a LicenseKey",
          "operationId": "deleteProjectcalicoOrgV3LicenseKey",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "delete",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "LicenseKey",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read the specified LicenseKey",
          "operationId": "readProjectcalicoOrgV3LicenseKey",
          "parameters": [
            {
              "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "exact",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "export",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.LicenseKey"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "LicenseKey",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the LicenseKey",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update the specified LicenseKey",
          "operationId": "patchProjectcalicoOrgV3LicenseKey",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.LicenseKey"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "LicenseKey",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace the specified LicenseKey",
          "operationId": "replaceProjectcalicoOrgV3LicenseKey",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.LicenseKey"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.LicenseKey"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.LicenseKey"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "LicenseKey",
            "version": "v3"
          }
        }
      },
      "/licensekeys/{name}/status": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read status of the specified LicenseKey",
          "operationId": "readProjectcalicoOrgV3LicenseKeyStatus",
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.LicenseKey"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "LicenseKey",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the LicenseKey",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update status of the specified LicenseKey",
          "operationId": "patchProjectcalicoOrgV3LicenseKeyStatus",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.LicenseKey"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "LicenseKey",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace status of the specified LicenseKey",
          "operationId": "replaceProjectcalicoOrgV3LicenseKeyStatus",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.LicenseKey"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.LicenseKey"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.LicenseKey"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "LicenseKey",
            "version": "v3"
          }
        }
      },
      "/managedclusters": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete collection of ManagedCluster",
          "operationId": "deleteProjectcalicoOrgV3CollectionManagedCluster",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "deletecollection",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "ManagedCluster",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind ManagedCluster",
          "operationId": "listProjectcalicoOrgV3ManagedCluster",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ManagedClusterList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "ManagedCluster",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "post": {
          "consumes": [
            "*/*"
          ],
          "description": "create a ManagedCluster",
          "operationId": "createProjectcalicoOrgV3ManagedCluster",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ManagedCluster"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ManagedCluster"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ManagedCluster"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ManagedCluster"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "post",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "ManagedCluster",
            "version": "v3"
          }
        }
      },
      "/managedclusters/{name}": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete a ManagedCluster",
          "operationId": "deleteProjectcalicoOrgV3ManagedCluster",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "delete",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "ManagedCluster",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read the specified ManagedCluster",
          "operationId": "readProjectcalicoOrgV3ManagedCluster",
          "parameters": [
            {
              "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "exact",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "export",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ManagedCluster"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "ManagedCluster",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the ManagedCluster",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update the specified ManagedCluster",
          "operationId": "patchProjectcalicoOrgV3ManagedCluster",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ManagedCluster"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "ManagedCluster",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace the specified ManagedCluster",
          "operationId": "replaceProjectcalicoOrgV3ManagedCluster",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ManagedCluster"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ManagedCluster"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ManagedCluster"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "ManagedCluster",
            "version": "v3"
          }
        }
      },
      "/managedclusters/{name}/status": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read status of the specified ManagedCluster",
          "operationId": "readProjectcalicoOrgV3ManagedClusterStatus",
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ManagedCluster"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "ManagedCluster",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the ManagedCluster",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update status of the specified ManagedCluster",
          "operationId": "patchProjectcalicoOrgV3ManagedClusterStatus",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ManagedCluster"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "ManagedCluster",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace status of the specified ManagedCluster",
          "operationId": "replaceProjectcalicoOrgV3ManagedClusterStatus",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ManagedCluster"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ManagedCluster"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ManagedCluster"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "ManagedCluster",
            "version": "v3"
          }
        }
      },
      "/namespaces/{namespace}/networkpolicies": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete collection of NetworkPolicy",
          "operationId": "deleteProjectcalicoOrgV3CollectionNamespacedNetworkPolicy",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "deletecollection",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "NetworkPolicy",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind NetworkPolicy",
          "operationId": "listProjectcalicoOrgV3NamespacedNetworkPolicy",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.NetworkPolicyList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "NetworkPolicy",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "post": {
          "consumes": [
            "*/*"
          ],
          "description": "create a NetworkPolicy",
          "operationId": "createProjectcalicoOrgV3NamespacedNetworkPolicy",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.NetworkPolicy"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.NetworkPolicy"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.NetworkPolicy"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.NetworkPolicy"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "post",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "NetworkPolicy",
            "version": "v3"
          }
        }
      },
      "/namespaces/{namespace}/networkpolicies/{name}": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete a NetworkPolicy",
          "operationId": "deleteProjectcalicoOrgV3NamespacedNetworkPolicy",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "delete",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "NetworkPolicy",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read the specified NetworkPolicy",
          "operationId": "readProjectcalicoOrgV3NamespacedNetworkPolicy",
          "parameters": [
            {
              "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "exact",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "export",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.NetworkPolicy"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "NetworkPolicy",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the NetworkPolicy",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update the specified NetworkPolicy",
          "operationId": "patchProjectcalicoOrgV3NamespacedNetworkPolicy",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.NetworkPolicy"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "NetworkPolicy",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace the specified NetworkPolicy",
          "operationId": "replaceProjectcalicoOrgV3NamespacedNetworkPolicy",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.NetworkPolicy"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.NetworkPolicy"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.NetworkPolicy"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "NetworkPolicy",
            "version": "v3"
          }
        }
      },
      "/namespaces/{namespace}/networksets": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete collection of NetworkSet",
          "operationId": "deleteProjectcalicoOrgV3CollectionNamespacedNetworkSet",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "deletecollection",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "NetworkSet",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind NetworkSet",
          "operationId": "listProjectcalicoOrgV3NamespacedNetworkSet",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.NetworkSetList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "NetworkSet",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "post": {
          "consumes": [
            "*/*"
          ],
          "description": "create a NetworkSet",
          "operationId": "createProjectcalicoOrgV3NamespacedNetworkSet",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.NetworkSet"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.NetworkSet"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.NetworkSet"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.NetworkSet"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "post",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "NetworkSet",
            "version": "v3"
          }
        }
      },
      "/namespaces/{namespace}/networksets/{name}": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete a NetworkSet",
          "operationId": "deleteProjectcalicoOrgV3NamespacedNetworkSet",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "delete",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "NetworkSet",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read the specified NetworkSet",
          "operationId": "readProjectcalicoOrgV3NamespacedNetworkSet",
          "parameters": [
            {
              "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "exact",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "export",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.NetworkSet"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "NetworkSet",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the NetworkSet",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update the specified NetworkSet",
          "operationId": "patchProjectcalicoOrgV3NamespacedNetworkSet",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.NetworkSet"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "NetworkSet",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace the specified NetworkSet",
          "operationId": "replaceProjectcalicoOrgV3NamespacedNetworkSet",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.NetworkSet"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.NetworkSet"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.NetworkSet"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "NetworkSet",
            "version": "v3"
          }
        }
      },
      "/namespaces/{namespace}/packetcaptures": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete collection of PacketCapture",
          "operationId": "deleteProjectcalicoOrgV3CollectionNamespacedPacketCapture",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "deletecollection",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "PacketCapture",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind PacketCapture",
          "operationId": "listProjectcalicoOrgV3NamespacedPacketCapture",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.PacketCaptureList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "PacketCapture",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "post": {
          "consumes": [
            "*/*"
          ],
          "description": "create a PacketCapture",
          "operationId": "createProjectcalicoOrgV3NamespacedPacketCapture",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.PacketCapture"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.PacketCapture"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.PacketCapture"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.PacketCapture"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "post",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "PacketCapture",
            "version": "v3"
          }
        }
      },
      "/namespaces/{namespace}/packetcaptures/{name}": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete a PacketCapture",
          "operationId": "deleteProjectcalicoOrgV3NamespacedPacketCapture",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "delete",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "PacketCapture",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read the specified PacketCapture",
          "operationId": "readProjectcalicoOrgV3NamespacedPacketCapture",
          "parameters": [
            {
              "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "exact",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "export",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.PacketCapture"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "PacketCapture",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the PacketCapture",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update the specified PacketCapture",
          "operationId": "patchProjectcalicoOrgV3NamespacedPacketCapture",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.PacketCapture"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "PacketCapture",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace the specified PacketCapture",
          "operationId": "replaceProjectcalicoOrgV3NamespacedPacketCapture",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.PacketCapture"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.PacketCapture"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.PacketCapture"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "PacketCapture",
            "version": "v3"
          }
        }
      },
      "/namespaces/{namespace}/stagedkubernetesnetworkpolicies": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete collection of StagedKubernetesNetworkPolicy",
          "operationId": "deleteProjectcalicoOrgV3CollectionNamespacedStagedKubernetesNetworkPolicy",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "deletecollection",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedKubernetesNetworkPolicy",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind StagedKubernetesNetworkPolicy",
          "operationId": "listProjectcalicoOrgV3NamespacedStagedKubernetesNetworkPolicy",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedKubernetesNetworkPolicyList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedKubernetesNetworkPolicy",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "post": {
          "consumes": [
            "*/*"
          ],
          "description": "create a StagedKubernetesNetworkPolicy",
          "operationId": "createProjectcalicoOrgV3NamespacedStagedKubernetesNetworkPolicy",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedKubernetesNetworkPolicy"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedKubernetesNetworkPolicy"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedKubernetesNetworkPolicy"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedKubernetesNetworkPolicy"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "post",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedKubernetesNetworkPolicy",
            "version": "v3"
          }
        }
      },
      "/namespaces/{namespace}/stagedkubernetesnetworkpolicies/{name}": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete a StagedKubernetesNetworkPolicy",
          "operationId": "deleteProjectcalicoOrgV3NamespacedStagedKubernetesNetworkPolicy",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "delete",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedKubernetesNetworkPolicy",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read the specified StagedKubernetesNetworkPolicy",
          "operationId": "readProjectcalicoOrgV3NamespacedStagedKubernetesNetworkPolicy",
          "parameters": [
            {
              "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "exact",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "export",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedKubernetesNetworkPolicy"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedKubernetesNetworkPolicy",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the StagedKubernetesNetworkPolicy",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update the specified StagedKubernetesNetworkPolicy",
          "operationId": "patchProjectcalicoOrgV3NamespacedStagedKubernetesNetworkPolicy",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedKubernetesNetworkPolicy"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedKubernetesNetworkPolicy",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace the specified StagedKubernetesNetworkPolicy",
          "operationId": "replaceProjectcalicoOrgV3NamespacedStagedKubernetesNetworkPolicy",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedKubernetesNetworkPolicy"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedKubernetesNetworkPolicy"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedKubernetesNetworkPolicy"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedKubernetesNetworkPolicy",
            "version": "v3"
          }
        }
      },
      "/namespaces/{namespace}/stagednetworkpolicies": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete collection of StagedNetworkPolicy",
          "operationId": "deleteProjectcalicoOrgV3CollectionNamespacedStagedNetworkPolicy",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "deletecollection",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedNetworkPolicy",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind StagedNetworkPolicy",
          "operationId": "listProjectcalicoOrgV3NamespacedStagedNetworkPolicy",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedNetworkPolicyList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedNetworkPolicy",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "post": {
          "consumes": [
            "*/*"
          ],
          "description": "create a StagedNetworkPolicy",
          "operationId": "createProjectcalicoOrgV3NamespacedStagedNetworkPolicy",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedNetworkPolicy"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedNetworkPolicy"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedNetworkPolicy"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedNetworkPolicy"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "post",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedNetworkPolicy",
            "version": "v3"
          }
        }
      },
      "/namespaces/{namespace}/stagednetworkpolicies/{name}": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete a StagedNetworkPolicy",
          "operationId": "deleteProjectcalicoOrgV3NamespacedStagedNetworkPolicy",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "delete",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedNetworkPolicy",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read the specified StagedNetworkPolicy",
          "operationId": "readProjectcalicoOrgV3NamespacedStagedNetworkPolicy",
          "parameters": [
            {
              "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "exact",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "export",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedNetworkPolicy"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedNetworkPolicy",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the StagedNetworkPolicy",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update the specified StagedNetworkPolicy",
          "operationId": "patchProjectcalicoOrgV3NamespacedStagedNetworkPolicy",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedNetworkPolicy"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedNetworkPolicy",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace the specified StagedNetworkPolicy",
          "operationId": "replaceProjectcalicoOrgV3NamespacedStagedNetworkPolicy",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedNetworkPolicy"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedNetworkPolicy"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedNetworkPolicy"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedNetworkPolicy",
            "version": "v3"
          }
        }
      },
      "/networkpolicies": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind NetworkPolicy",
          "operationId": "listProjectcalicoOrgV3NetworkPolicyForAllNamespaces",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.NetworkPolicyList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "NetworkPolicy",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/networksets": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind NetworkSet",
          "operationId": "listProjectcalicoOrgV3NetworkSetForAllNamespaces",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.NetworkSetList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "NetworkSet",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/packetcaptures": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind PacketCapture",
          "operationId": "listProjectcalicoOrgV3PacketCaptureForAllNamespaces",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.PacketCaptureList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "PacketCapture",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/profiles": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete collection of Profile",
          "operationId": "deleteProjectcalicoOrgV3CollectionProfile",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "deletecollection",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "Profile",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind Profile",
          "operationId": "listProjectcalicoOrgV3Profile",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ProfileList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "Profile",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "post": {
          "consumes": [
            "*/*"
          ],
          "description": "create a Profile",
          "operationId": "createProjectcalicoOrgV3Profile",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.Profile"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.Profile"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.Profile"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.Profile"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "post",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "Profile",
            "version": "v3"
          }
        }
      },
      "/profiles/{name}": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete a Profile",
          "operationId": "deleteProjectcalicoOrgV3Profile",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "delete",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "Profile",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read the specified Profile",
          "operationId": "readProjectcalicoOrgV3Profile",
          "parameters": [
            {
              "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "exact",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "export",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.Profile"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "Profile",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the Profile",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update the specified Profile",
          "operationId": "patchProjectcalicoOrgV3Profile",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.Profile"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "Profile",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace the specified Profile",
          "operationId": "replaceProjectcalicoOrgV3Profile",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.Profile"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.Profile"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.Profile"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "Profile",
            "version": "v3"
          }
        }
      },
      "/remoteclusterconfigurations": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete collection of RemoteClusterConfiguration",
          "operationId": "deleteProjectcalicoOrgV3CollectionRemoteClusterConfiguration",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "deletecollection",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "RemoteClusterConfiguration",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind RemoteClusterConfiguration",
          "operationId": "listProjectcalicoOrgV3RemoteClusterConfiguration",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.RemoteClusterConfigurationList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "RemoteClusterConfiguration",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "post": {
          "consumes": [
            "*/*"
          ],
          "description": "create a RemoteClusterConfiguration",
          "operationId": "createProjectcalicoOrgV3RemoteClusterConfiguration",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.RemoteClusterConfiguration"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.RemoteClusterConfiguration"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.RemoteClusterConfiguration"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.RemoteClusterConfiguration"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "post",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "RemoteClusterConfiguration",
            "version": "v3"
          }
        }
      },
      "/remoteclusterconfigurations/{name}": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete a RemoteClusterConfiguration",
          "operationId": "deleteProjectcalicoOrgV3RemoteClusterConfiguration",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "delete",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "RemoteClusterConfiguration",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read the specified RemoteClusterConfiguration",
          "operationId": "readProjectcalicoOrgV3RemoteClusterConfiguration",
          "parameters": [
            {
              "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "exact",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "export",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.RemoteClusterConfiguration"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "RemoteClusterConfiguration",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the RemoteClusterConfiguration",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update the specified RemoteClusterConfiguration",
          "operationId": "patchProjectcalicoOrgV3RemoteClusterConfiguration",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.RemoteClusterConfiguration"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "RemoteClusterConfiguration",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace the specified RemoteClusterConfiguration",
          "operationId": "replaceProjectcalicoOrgV3RemoteClusterConfiguration",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.RemoteClusterConfiguration"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.RemoteClusterConfiguration"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.RemoteClusterConfiguration"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "RemoteClusterConfiguration",
            "version": "v3"
          }
        }
      },
      "/stagedglobalnetworkpolicies": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete collection of StagedGlobalNetworkPolicy",
          "operationId": "deleteProjectcalicoOrgV3CollectionStagedGlobalNetworkPolicy",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "deletecollection",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedGlobalNetworkPolicy",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind StagedGlobalNetworkPolicy",
          "operationId": "listProjectcalicoOrgV3StagedGlobalNetworkPolicy",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedGlobalNetworkPolicyList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedGlobalNetworkPolicy",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "post": {
          "consumes": [
            "*/*"
          ],
          "description": "create a StagedGlobalNetworkPolicy",
          "operationId": "createProjectcalicoOrgV3StagedGlobalNetworkPolicy",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedGlobalNetworkPolicy"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedGlobalNetworkPolicy"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedGlobalNetworkPolicy"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedGlobalNetworkPolicy"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "post",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedGlobalNetworkPolicy",
            "version": "v3"
          }
        }
      },
      "/stagedglobalnetworkpolicies/{name}": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete a StagedGlobalNetworkPolicy",
          "operationId": "deleteProjectcalicoOrgV3StagedGlobalNetworkPolicy",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "delete",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedGlobalNetworkPolicy",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read the specified StagedGlobalNetworkPolicy",
          "operationId": "readProjectcalicoOrgV3StagedGlobalNetworkPolicy",
          "parameters": [
            {
              "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "exact",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "export",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedGlobalNetworkPolicy"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedGlobalNetworkPolicy",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the StagedGlobalNetworkPolicy",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update the specified StagedGlobalNetworkPolicy",
          "operationId": "patchProjectcalicoOrgV3StagedGlobalNetworkPolicy",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedGlobalNetworkPolicy"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedGlobalNetworkPolicy",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace the specified StagedGlobalNetworkPolicy",
          "operationId": "replaceProjectcalicoOrgV3StagedGlobalNetworkPolicy",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedGlobalNetworkPolicy"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedGlobalNetworkPolicy"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedGlobalNetworkPolicy"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedGlobalNetworkPolicy",
            "version": "v3"
          }
        }
      },
      "/stagedkubernetesnetworkpolicies": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind StagedKubernetesNetworkPolicy",
          "operationId": "listProjectcalicoOrgV3StagedKubernetesNetworkPolicyForAllNamespaces",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedKubernetesNetworkPolicyList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedKubernetesNetworkPolicy",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/stagednetworkpolicies": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind StagedNetworkPolicy",
          "operationId": "listProjectcalicoOrgV3StagedNetworkPolicyForAllNamespaces",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedNetworkPolicyList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedNetworkPolicy",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/tiers": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete collection of Tier",
          "operationId": "deleteProjectcalicoOrgV3CollectionTier",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "deletecollection",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "Tier",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "list or watch objects of kind Tier",
          "operationId": "listProjectcalicoOrgV3Tier",
          "parameters": [
            {
              "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
              "in": "query",
              "name": "allowWatchBookmarks",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
              "in": "query",
              "name": "continue",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
              "in": "query",
              "name": "fieldSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
              "in": "query",
              "name": "labelSelector",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
              "in": "query",
              "name": "limit",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
              "in": "query",
              "name": "resourceVersion",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
              "in": "query",
              "name": "timeoutSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
              "in": "query",
              "name": "watch",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.TierList"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "list",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "Tier",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "post": {
          "consumes": [
            "*/*"
          ],
          "description": "create a Tier",
          "operationId": "createProjectcalicoOrgV3Tier",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.Tier"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.Tier"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.Tier"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.Tier"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "post",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "Tier",
            "version": "v3"
          }
        }
      },
      "/tiers/{name}": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete a Tier",
          "operationId": "deleteProjectcalicoOrgV3Tier",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
              "in": "query",
              "name": "gracePeriodSeconds",
              "type": "integer",
              "uniqueItems": true
            },
            {
              "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
              "in": "query",
              "name": "orphanDependents",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
              "in": "query",
              "name": "propagationPolicy",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            },
            "202": {
              "description": "Accepted",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "delete",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "Tier",
            "version": "v3"
          }
        },
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "read the specified Tier",
          "operationId": "readProjectcalicoOrgV3Tier",
          "parameters": [
            {
              "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "exact",
              "type": "boolean",
              "uniqueItems": true
            },
            {
              "description": "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
              "in": "query",
              "name": "export",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.Tier"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "get",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "Tier",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "name of the Tier",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          }
        ],
        "patch": {
          "consumes": [
            "application/json-patch+json",
            "application/merge-patch+json",
            "application/strategic-merge-patch+json",
            "application/apply-patch+yaml"
          ],
          "description": "partially update the specified Tier",
          "operationId": "patchProjectcalicoOrgV3Tier",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
              "in": "query",
              "name": "force",
              "type": "boolean",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.Tier"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "patch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "Tier",
            "version": "v3"
          }
        },
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "replace the specified Tier",
          "operationId": "replaceProjectcalicoOrgV3Tier",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.Tier"
              }
            },
            {
              "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
              "in": "query",
              "name": "dryRun",
              "type": "string",
              "uniqueItems": true
            },
            {
              "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
              "in": "query",
              "name": "fieldManager",
              "type": "string",
              "uniqueItems": true
            }
          ],
          "produces": [
            "application/json",
            "application/yaml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.Tier"
              }
            },
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.Tier"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "put",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "Tier",
            "version": "v3"
          }
        }
      },
      "/watch/authenticationreviews/{name}": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch changes to an object of kind AuthenticationReview. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
          "operationId": "watchProjectcalicoOrgV3AuthenticationReview",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "AuthenticationReview",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "name of the AuthenticationReview",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/authorizationreviews/{name}": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch changes to an object of kind AuthorizationReview. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
          "operationId": "watchProjectcalicoOrgV3AuthorizationReview",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "AuthorizationReview",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "name of the AuthorizationReview",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/bgpconfigurations": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of BGPConfiguration. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3BGPConfigurationList",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "BGPConfiguration",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/bgpconfigurations/{name}": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch changes to an object of kind BGPConfiguration. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
          "operationId": "watchProjectcalicoOrgV3BGPConfiguration",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "BGPConfiguration",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "name of the BGPConfiguration",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/bgppeers": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of BGPPeer. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3BGPPeerList",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "BGPPeer",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/bgppeers/{name}": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch changes to an object of kind BGPPeer. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
          "operationId": "watchProjectcalicoOrgV3BGPPeer",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "BGPPeer",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "name of the BGPPeer",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/clusterinformations": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of ClusterInformation. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3ClusterInformationList",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "ClusterInformation",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/clusterinformations/{name}": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch changes to an object of kind ClusterInformation. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
          "operationId": "watchProjectcalicoOrgV3ClusterInformation",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "ClusterInformation",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "name of the ClusterInformation",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/felixconfigurations": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of FelixConfiguration. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3FelixConfigurationList",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "FelixConfiguration",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/felixconfigurations/{name}": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch changes to an object of kind FelixConfiguration. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
          "operationId": "watchProjectcalicoOrgV3FelixConfiguration",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "FelixConfiguration",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "name of the FelixConfiguration",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/globalalerts": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of GlobalAlert. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3GlobalAlertList",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalAlert",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/globalalerts/{name}": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch changes to an object of kind GlobalAlert. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
          "operationId": "watchProjectcalicoOrgV3GlobalAlert",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalAlert",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "name of the GlobalAlert",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/globalalerttemplates": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of GlobalAlertTemplate. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3GlobalAlertTemplateList",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalAlertTemplate",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/globalalerttemplates/{name}": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch changes to an object of kind GlobalAlertTemplate. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
          "operationId": "watchProjectcalicoOrgV3GlobalAlertTemplate",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalAlertTemplate",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "name of the GlobalAlertTemplate",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/globalnetworkpolicies": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of GlobalNetworkPolicy. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3GlobalNetworkPolicyList",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalNetworkPolicy",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/globalnetworkpolicies/{name}": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch changes to an object of kind GlobalNetworkPolicy. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
          "operationId": "watchProjectcalicoOrgV3GlobalNetworkPolicy",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalNetworkPolicy",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "name of the GlobalNetworkPolicy",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/globalnetworksets": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of GlobalNetworkSet. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3GlobalNetworkSetList",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalNetworkSet",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/globalnetworksets/{name}": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch changes to an object of kind GlobalNetworkSet. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
          "operationId": "watchProjectcalicoOrgV3GlobalNetworkSet",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalNetworkSet",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "name of the GlobalNetworkSet",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/globalreports": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of GlobalReport. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3GlobalReportList",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalReport",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/globalreports/{name}": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch changes to an object of kind GlobalReport. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
          "operationId": "watchProjectcalicoOrgV3GlobalReport",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalReport",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "name of the GlobalReport",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/globalreporttypes": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of GlobalReportType. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3GlobalReportTypeList",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalReportType",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/globalreporttypes/{name}": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch changes to an object of kind GlobalReportType. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
          "operationId": "watchProjectcalicoOrgV3GlobalReportType",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalReportType",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "name of the GlobalReportType",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/globalthreatfeeds": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of GlobalThreatFeed. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3GlobalThreatFeedList",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalThreatFeed",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/globalthreatfeeds/{name}": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch changes to an object of kind GlobalThreatFeed. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
          "operationId": "watchProjectcalicoOrgV3GlobalThreatFeed",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "GlobalThreatFeed",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "name of the GlobalThreatFeed",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/hostendpoints": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of HostEndpoint. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3HostEndpointList",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "HostEndpoint",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/hostendpoints/{name}": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch changes to an object of kind HostEndpoint. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
          "operationId": "watchProjectcalicoOrgV3HostEndpoint",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "HostEndpoint",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "name of the HostEndpoint",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/ippools": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of IPPool. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3IPPoolList",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "IPPool",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/ippools/{name}": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch changes to an object of kind IPPool. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
          "operationId": "watchProjectcalicoOrgV3IPPool",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "IPPool",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "name of the IPPool",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/kubecontrollersconfigurations": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of KubeControllersConfiguration. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3KubeControllersConfigurationList",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "KubeControllersConfiguration",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/kubecontrollersconfigurations/{name}": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch changes to an object of kind KubeControllersConfiguration. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
          "operationId": "watchProjectcalicoOrgV3KubeControllersConfiguration",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "KubeControllersConfiguration",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "name of the KubeControllersConfiguration",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/licensekeys": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of LicenseKey. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3LicenseKeyList",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "LicenseKey",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/licensekeys/{name}": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch changes to an object of kind LicenseKey. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
          "operationId": "watchProjectcalicoOrgV3LicenseKey",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "LicenseKey",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "name of the LicenseKey",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/managedclusters": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of ManagedCluster. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3ManagedClusterList",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "ManagedCluster",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/managedclusters/{name}": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch changes to an object of kind ManagedCluster. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
          "operationId": "watchProjectcalicoOrgV3ManagedCluster",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "ManagedCluster",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "name of the ManagedCluster",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/namespaces/{namespace}/networkpolicies": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of NetworkPolicy. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3NamespacedNetworkPolicyList",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "NetworkPolicy",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/namespaces/{namespace}/networkpolicies/{name}": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch changes to an object of kind NetworkPolicy. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
          "operationId": "watchProjectcalicoOrgV3NamespacedNetworkPolicy",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "NetworkPolicy",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "name of the NetworkPolicy",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/namespaces/{namespace}/networksets": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of NetworkSet. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3NamespacedNetworkSetList",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "NetworkSet",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/namespaces/{namespace}/networksets/{name}": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch changes to an object of kind NetworkSet. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
          "operationId": "watchProjectcalicoOrgV3NamespacedNetworkSet",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "NetworkSet",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "name of the NetworkSet",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/namespaces/{namespace}/packetcaptures": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of PacketCapture. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3NamespacedPacketCaptureList",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "PacketCapture",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/namespaces/{namespace}/packetcaptures/{name}": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch changes to an object of kind PacketCapture. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
          "operationId": "watchProjectcalicoOrgV3NamespacedPacketCapture",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "PacketCapture",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "name of the PacketCapture",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/namespaces/{namespace}/stagedkubernetesnetworkpolicies": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of StagedKubernetesNetworkPolicy. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3NamespacedStagedKubernetesNetworkPolicyList",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedKubernetesNetworkPolicy",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/namespaces/{namespace}/stagedkubernetesnetworkpolicies/{name}": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch changes to an object of kind StagedKubernetesNetworkPolicy. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
          "operationId": "watchProjectcalicoOrgV3NamespacedStagedKubernetesNetworkPolicy",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedKubernetesNetworkPolicy",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "name of the StagedKubernetesNetworkPolicy",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/namespaces/{namespace}/stagednetworkpolicies": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of StagedNetworkPolicy. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3NamespacedStagedNetworkPolicyList",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedNetworkPolicy",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/namespaces/{namespace}/stagednetworkpolicies/{name}": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch changes to an object of kind StagedNetworkPolicy. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
          "operationId": "watchProjectcalicoOrgV3NamespacedStagedNetworkPolicy",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedNetworkPolicy",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "name of the StagedNetworkPolicy",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "object name and auth scope, such as for teams and projects",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/networkpolicies": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of NetworkPolicy. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3NetworkPolicyListForAllNamespaces",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "NetworkPolicy",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/networksets": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of NetworkSet. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3NetworkSetListForAllNamespaces",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "NetworkSet",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/packetcaptures": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of PacketCapture. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3PacketCaptureListForAllNamespaces",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "PacketCapture",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/profiles": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of Profile. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3ProfileList",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "Profile",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/profiles/{name}": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch changes to an object of kind Profile. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
          "operationId": "watchProjectcalicoOrgV3Profile",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "Profile",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "name of the Profile",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/remoteclusterconfigurations": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of RemoteClusterConfiguration. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3RemoteClusterConfigurationList",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "RemoteClusterConfiguration",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/remoteclusterconfigurations/{name}": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch changes to an object of kind RemoteClusterConfiguration. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
          "operationId": "watchProjectcalicoOrgV3RemoteClusterConfiguration",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "RemoteClusterConfiguration",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "name of the RemoteClusterConfiguration",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/stagedglobalnetworkpolicies": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of StagedGlobalNetworkPolicy. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3StagedGlobalNetworkPolicyList",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedGlobalNetworkPolicy",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/stagedglobalnetworkpolicies/{name}": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch changes to an object of kind StagedGlobalNetworkPolicy. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
          "operationId": "watchProjectcalicoOrgV3StagedGlobalNetworkPolicy",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedGlobalNetworkPolicy",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "name of the StagedGlobalNetworkPolicy",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/stagedkubernetesnetworkpolicies": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of StagedKubernetesNetworkPolicy. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3StagedKubernetesNetworkPolicyListForAllNamespaces",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedKubernetesNetworkPolicy",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/stagednetworkpolicies": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of StagedNetworkPolicy. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3StagedNetworkPolicyListForAllNamespaces",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "StagedNetworkPolicy",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/tiers": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch individual changes to a list of Tier. deprecated: use the 'watch' parameter with a list operation instead.",
          "operationId": "watchProjectcalicoOrgV3TierList",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watchlist",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "Tier",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      },
      "/watch/tiers/{name}": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "watch changes to an object of kind Tier. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
          "operationId": "watchProjectcalicoOrgV3Tier",
          "produces": [
            "application/json",
            "application/yaml",
            "application/json;stream=watch"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
              }
            }
          },
          "schemes": [
            "https"
          ],
          "tags": [
            ""
          ],
          "x-kubernetes-action": "watch",
          "x-kubernetes-group-version-kind": {
            "group": "projectcalico.org",
            "kind": "Tier",
            "version": "v3"
          }
        },
        "parameters": [
          {
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "in": "query",
            "name": "allowWatchBookmarks",
            "type": "boolean",
            "uniqueItems": true
          },
          {
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "in": "query",
            "name": "continue",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "in": "query",
            "name": "fieldSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "in": "query",
            "name": "labelSelector",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "in": "query",
            "name": "limit",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "name of the Tier",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "If 'true', then the output is pretty printed.",
            "in": "query",
            "name": "pretty",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
            "in": "query",
            "name": "resourceVersion",
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "in": "query",
            "name": "timeoutSeconds",
            "type": "integer",
            "uniqueItems": true
          },
          {
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "in": "query",
            "name": "watch",
            "type": "boolean",
            "uniqueItems": true
          }
        ]
      }
    },
    "definitions": {
      "com.github.projectcalico.libcalico-go.lib.apis.v1.IPIPConfiguration": {
        "properties": {
          "enabled": {
            "description": "When enabled is true, ipip tunneling will be used to deliver packets to destinations within this pool.",
            "type": "boolean"
          },
          "mode": {
            "description": "The IPIP mode.  This can be one of \"always\" or \"cross-subnet\".  A mode of \"always\" will also use IPIP tunneling for routing to destination IP addresses within this pool.  A mode of \"cross-subnet\" will only use IPIP tunneling when the destination node is on a different subnet to the originating node.  The default value (if not specified) is \"always\".",
            "type": "string"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.AuditEventsSelection": {
        "description": "AuditEventsSelection defines which set of resources should be audited.",
        "properties": {
          "resources": {
            "description": "Resources lists the resources that will be included in the audit logs in the ReportData.  Blank fields in the listed ResourceID structs are treated as wildcards.",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.AuditResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.AuditResource": {
        "description": "AuditResource is used to filter Audit events in the Report configuration.\n\nAn empty field value indicates a wildcard. For example, if Resource is set to \"networkpolicies\" and all other fields are blank then this filter would include all NetworkPolicy resources across all namespaces, and would include both Calico and Kubernetes resource types.",
        "properties": {
          "apiGroup": {
            "description": "APIGroup is the name of the API group that contains the referred object (e.g. projectcalico.org).",
            "type": "string"
          },
          "apiVersion": {
            "description": "APIVersion is the version of the API group that contains the referred object (e.g. v3).",
            "type": "string"
          },
          "name": {
            "description": "The resource name.",
            "type": "string"
          },
          "namespace": {
            "description": "The resource namespace.",
            "type": "string"
          },
          "resource": {
            "description": "The resource type. The format is the lowercase plural as used in audit event selection and RBAC configuration.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.AuthenticationReviewStatus": {
        "properties": {
          "extra": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "object"
          },
          "groups": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.AuthorizationReviewResourceAttributes": {
        "properties": {
          "apiGroup": {
            "description": "The API Group to check.",
            "type": "string"
          },
          "resources": {
            "description": "The set of resources to check within the same API Group.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "verbs": {
            "description": "The set of verbs to check. This is expanded for each resource and within the same API Group.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.AuthorizationReviewSpec": {
        "properties": {
          "resourceAttributes": {
            "description": "The set of resource attributes that are being checked. Each resource attribute is expanded into individual kind/resource and verbs.",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.AuthorizationReviewResourceAttributes"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.AuthorizationReviewStatus": {
        "properties": {
          "authorizedResourceVerbs": {
            "description": "The set of authorized resource actions. A given API Group and resource combination will appear at most once in this slice.",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.AuthorizedResourceVerbs"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.AuthorizedResourceGroup": {
        "properties": {
          "namespace": {
            "description": "The namespace. If this is empty then the user is authorized cluster-wide (i.e. across all namespaces). This will always be empty for cluster-scoped resources when the user is authorized.",
            "type": "string"
          },
          "tier": {
            "description": "The tier.  This is only valid for tiered policies, and tiers.",
            "type": "string"
          }
        },
        "required": [
          "namespace"
        ],
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.AuthorizedResourceVerb": {
        "properties": {
          "resourceGroups": {
            "description": "The group of resource instances that are authorized for this verb.",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.AuthorizedResourceGroup"
            },
            "type": "array"
          },
          "verb": {
            "description": "The verb.",
            "type": "string"
          }
        },
        "required": [
          "verb",
          "resourceGroups"
        ],
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.AuthorizedResourceVerbs": {
        "properties": {
          "apiGroup": {
            "description": "The API group.",
            "type": "string"
          },
          "resource": {
            "description": "The resource.",
            "type": "string"
          },
          "verbs": {
            "description": "The set of authorized actions for this resource. For a specific verb, this contains the set of resources for which the user is authorized to perform that action. This is calculated to avoid duplication such that a single resource instance can only be associated with a single entry in this slice. This allows a consumer of this API to issue a minimal set of queries (e.g. watches) that cover, uniquely, the authorized set of resources.",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.AuthorizedResourceVerb"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.AutoHostEndpointConfig": {
        "properties": {
          "autoCreate": {
            "description": "AutoCreate enables automatic creation of host endpoints for every node. [Default: Disabled]",
            "type": "string"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.BGPConfigurationSpec": {
        "description": "BGPConfigurationSpec contains the values of the BGP configuration.",
        "properties": {
          "asNumber": {
            "description": "ASNumber is the default AS number used by a node. [Default: 64512]",
            "format": "int64",
            "type": "integer"
          },
          "communities": {
            "description": "Communities is a list of BGP community values and their arbitrary names for tagging routes.",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.Community"
            },
            "type": "array"
          },
          "extensions": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Extensions is a mapping of keys to values that can be used in custom BGP templates",
            "type": "object"
          },
          "listenPort": {
            "description": "ListenPort is the port where BGP protocol should listen. Defaults to 179",
            "format": "int32",
            "type": "integer"
          },
          "logSeverityScreen": {
            "description": "LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: INFO]",
            "type": "string"
          },
          "nodeToNodeMeshEnabled": {
            "description": "NodeToNodeMeshEnabled sets whether full node to node BGP mesh is enabled. [Default: true]",
            "type": "boolean"
          },
          "prefixAdvertisements": {
            "description": "PrefixAdvertisements contains per-prefix advertisement configuration.",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.PrefixAdvertisement"
            },
            "type": "array"
          },
          "serviceClusterIPs": {
            "description": "ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ServiceClusterIPBlock"
            },
            "type": "array"
          },
          "serviceExternalIPs": {
            "description": "ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ServiceExternalIPBlock"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.BGPPassword": {
        "description": "BGPPassword contains ways to specify a BGP password.",
        "properties": {
          "secretKeyRef": {
            "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector",
            "description": "Selects a key of a secret in the node pod's namespace."
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.BGPPeerSpec": {
        "description": "BGPPeerSpec contains the specification for a BGPPeer resource.",
        "properties": {
          "asNumber": {
            "description": "The AS Number of the peer.",
            "format": "int64",
            "type": "integer"
          },
          "birdGatewayMode": {
            "description": "Specifies the BIRD \"gateway\" mode, i.e. method for computing the immediate next hop for each received route, for peerings generated by this BGPPeer resource.  Default value \"Recursive\" means \"gateway recursive\".  \"DirectIfDirectlyConnected\" means to configure \"gateway direct\" when the peer is directly connected.",
            "type": "string"
          },
          "extensions": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Extensions is a mapping of keys to values that can be used in custom BGP templates",
            "type": "object"
          },
          "failureDetectionMode": {
            "description": "Specifies whether and how to detect loss of connectivity on the peerings generated by this BGPPeer resource.  Default value \"None\" means nothing beyond BGP's own (slow) hold timer.  \"BFDIfDirectlyConnected\" means to use BFD when the peer is directly connected.",
            "type": "string"
          },
          "keepOriginalNextHop": {
            "description": "Option to keep the original nexthop field when routes are sent to a BGP Peer. Setting \"true\" configures the selected BGP Peers node to use the \"next hop keep;\" instead of \"next hop self;\"(default) in the specific branch of the Node on \"bird.cfg\".",
            "type": "boolean"
          },
          "maxRestartTime": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "Time to allow for software restart.  When specified, this is configured as the graceful restart timeout when RestartMode is \"GracefulRestart\", and as the LLGR stale time when RestartMode is \"LongLivedGracefulRestart\".  When not specified, the BIRD defaults are used, which are 120s for \"GracefulRestart\" and 3600s for \"LongLivedGracefulRestart\"."
          },
          "node": {
            "description": "The node name identifying the Calico node instance that is targeted by this peer. If this is not set, and no nodeSelector is specified, then this BGP peer selects all nodes in the cluster.",
            "type": "string"
          },
          "nodeSelector": {
            "description": "Selector for the nodes that should have this peering.  When this is set, the Node field must be empty.",
            "type": "string"
          },
          "password": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.BGPPassword",
            "description": "Optional BGP password for the peerings generated by this BGPPeer resource."
          },
          "peerIP": {
            "description": "The IP address of the peer followed by an optional port number to peer with. If port number is given, format should be `[\u003cIPv6\u003e]:port` or `\u003cIPv4\u003e:\u003cport\u003e` for IPv4. If optional port number is not set, and this peer IP and ASNumber belongs to a calico/node with ListenPort set in BGPConfiguration, then we use that port to peer.",
            "type": "string"
          },
          "peerSelector": {
            "description": "Selector for the remote nodes to peer with.  When this is set, the PeerIP and ASNumber fields must be empty.  For each peering between the local node and selected remote nodes, we configure an IPv4 peering if both ends have NodeBGPSpec.IPv4Address specified, and an IPv6 peering if both ends have NodeBGPSpec.IPv6Address specified.  The remote AS number comes from the remote node's NodeBGPSpec.ASNumber, or the global default if that is not set.",
            "type": "string"
          },
          "restartMode": {
            "description": "Specifies restart behaviour to configure on the peerings generated by this BGPPeer resource.  Default value \"GracefulRestart\" means traditional graceful restart. \"LongLivedGracefulRestart\" means LLGR according to draft-uttaro-idr-bgp-persistence-05.",
            "type": "string"
          },
          "sourceAddress": {
            "description": "Specifies whether and how to configure a source address for the peerings generated by this BGPPeer resource.  Default value \"UseNodeIP\" means to configure the node IP as the source address.  \"None\" means not to configure a source address.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.CISBenchmarkFilter": {
        "description": "CISBenchmarkFilter provides filters for a set of benchmarks that match particular selection criteria.",
        "properties": {
          "benchmarkSelection": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.CISBenchmarkSelection",
            "description": "BenchmarkSelection specifies which benchmarks this filter applies to. If not specified, applies to all."
          },
          "exclude": {
            "description": "Exclude is an array of test indices to exclude from the report.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "include": {
            "description": "Include is an array of test indices to show in the report. Is additive if IncludeUnscoredTests is true. Takes precedence over Exclude.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.CISBenchmarkParams": {
        "description": "CISBenchmarkParams contains the parameters for configuring a CIS benchmark report.",
        "properties": {
          "highThreshold": {
            "description": "Interpretted as a percentage to indicate at what levels of passing tests a node should be considered HIGH, MED, and LOW. - If \u003e= HighThreshold flag as high - Otherwise, if \u003e MedThreshold flag as med - Otherwise flag as low.",
            "format": "int32",
            "type": "integer"
          },
          "includeUnscoredTests": {
            "description": "Specifies if the report should also show results for scored/not-scored tests.",
            "type": "boolean"
          },
          "medThreshold": {
            "format": "int32",
            "type": "integer"
          },
          "numFailedTests": {
            "description": "Configure the number of top failed tests to show up on the report.",
            "format": "int32",
            "type": "integer"
          },
          "resultsFilters": {
            "description": "Benchmark results filters. The first matching set of filters is applied to each set of benchmark results. If there are no matching filters, the full set of benchmark results will be included in the report.",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.CISBenchmarkFilter"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.CISBenchmarkSelection": {
        "description": "CISBenchmarkSelection selects a particular set of benchmarks.",
        "properties": {
          "kubernetesVersion": {
            "description": "KubernetesVersion is used select nodes that are running a specific version of kubelet. The full version need not be fully specified down to the patch level, in which case the significant parts of the version are matched. e.g. \"1.0\" will match versions \"1.0.1\" and \"1.0.2\" If not specified, matches all versions.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.ClusterInformationSpec": {
        "description": "ClusterInformationSpec contains the values of describing the cluster.",
        "properties": {
          "calicoVersion": {
            "description": "CalicoVersion is the version of Calico that the cluster is running",
            "type": "string"
          },
          "clusterGUID": {
            "description": "ClusterGUID is the GUID of the cluster",
            "type": "string"
          },
          "clusterType": {
            "description": "ClusterType describes the type of the cluster",
            "type": "string"
          },
          "cnxVersion": {
            "description": "CNXVersion is the version of CNX that the cluster is running",
            "type": "string"
          },
          "datastoreReady": {
            "description": "DatastoreReady is used during significant datastore migrations to signal to components such as Felix that it should wait before accessing the datastore.",
            "type": "boolean"
          },
          "variant": {
            "description": "Variant declares which variant of Calico should be active.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.Community": {
        "description": "Community contains standard or large community value and its name.",
        "properties": {
          "name": {
            "description": "Name given to community value.",
            "type": "string"
          },
          "value": {
            "description": "Value must be of format `aa:nn` or `aa:nn:mm`. For standard community use `aa:nn` format, where `aa` and `nn` are 16 bit number. For large community use `aa:nn:mm` format, where `aa`, `nn` and `mm` are 32 bit number. Where, `aa` is an AS Number, `nn` and `mm` are per-AS identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.CompletedReportJob": {
        "description": "CompletedReportJob augments the ReportJob with completion details.",
        "properties": {
          "end": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description": "The end time of the report."
          },
          "job": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference",
            "description": "A reference to the report creation job if known."
          },
          "jobCompletionTime": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description": "The time the report job completed."
          },
          "start": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description": "The start time of the report."
          }
        },
        "required": [
          "start",
          "end",
          "job"
        ],
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.ControllersConfig": {
        "description": "ControllersConfig enables and configures individual Kubernetes controllers",
        "properties": {
          "federatedServices": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.FederatedServicesControllerConfig",
            "description": "FederatedServices enables and configures the federatedservices controller. Disabled by default."
          },
          "namespace": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.NamespaceControllerConfig",
            "description": "Namespace enables and configures the namespace controller. Enabled by default, set to nil to disable."
          },
          "node": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.NodeControllerConfig",
            "description": "Node enables and configures the node controller. Enabled by default, set to nil to disable."
          },
          "policy": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.PolicyControllerConfig",
            "description": "Policy enables and configures the policy controller. Enabled by default, set to nil to disable."
          },
          "serviceAccount": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ServiceAccountControllerConfig",
            "description": "ServiceAccount enables and configures the service account controller. Enabled by default, set to nil to disable."
          },
          "workloadEndpoint": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.WorkloadEndpointControllerConfig",
            "description": "WorkloadEndpoint enables and configures the workload endpoint controller. Enabled by default, set to nil to disable."
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.EgressSpec": {
        "properties": {
          "namespaceSelector": {
            "description": "NamespaceSelector",
            "type": "string"
          },
          "selector": {
            "description": "Selector",
            "type": "string"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.EndpointPort": {
        "properties": {
          "name": {
            "type": "string"
          },
          "port": {
            "format": "int32",
            "type": "integer"
          },
          "protocol": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.numorstring.Protocol"
          }
        },
        "required": [
          "name",
          "protocol",
          "port"
        ],
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.EndpointsSelection": {
        "description": "EndpointsSelection is a set of selectors used to select the endpoints that are considered to be in-scope for the report. An empty selector is equivalent to all(). All three selectors are ANDed together.",
        "properties": {
          "namespaces": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.NamesAndLabelsMatch",
            "description": "Namespace match restricts endpoint selection to those in the selected namespaces."
          },
          "selector": {
            "description": "Selector, selects endpoints by endpoint labels. If omitted, all endpoints are included in the report data.",
            "type": "string"
          },
          "serviceAccounts": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.NamesAndLabelsMatch",
            "description": "ServiceAccount match restricts endpoint selection to those in the selected service accounts."
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.EntityRule": {
        "description": "An EntityRule is a sub-component of a Rule comprising the match criteria specific to a particular entity (that is either the source or destination).\n\nA source EntityRule matches the source endpoint and originating traffic. A destination EntityRule matches the destination endpoint and terminating traffic.",
        "properties": {
          "domains": {
            "description": "Domains is an optional field, valid for egress Allow rules only, that restricts the rule to apply only to traffic to one of the specified domains.  If this field is specified, Action must be Allow, and Nets and Selector must both be left empty.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "namespaceSelector": {
            "description": "NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and Selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule.\n\nFor NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy.\n\nFor NetworkPolicy, `global()` NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint.\n\nFor GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.",
            "type": "string"
          },
          "nets": {
            "description": "Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "notNets": {
            "description": "NotNets is the negated version of the Nets field.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "notPorts": {
            "description": "NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \"TCP\" or \"UDP\".",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.numorstring.Port"
            },
            "type": "array"
          },
          "notSelector": {
            "description": "NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.",
            "type": "string"
          },
          "ports": {
            "description": "Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports.\n\nSince only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \"TCP\" or \"UDP\".",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.numorstring.Port"
            },
            "type": "array"
          },
          "selector": {
            "description": "Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched.\n\nNote that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match:\n\n\tSelector = \"!has(my_label)\" matches packets that are from other Calico-controlled\n\tendpoints that do not have the label “my_label”.\n\n\tNotSelector = \"has(my_label)\" matches packets that are not from Calico-controlled\n\tendpoints that do have the label “my_label”.\n\nThe effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.",
            "type": "string"
          },
          "serviceAccounts": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ServiceAccountMatch",
            "description": "ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account."
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.ErrorCondition": {
        "properties": {
          "message": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "message"
        ],
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.FederatedServicesControllerConfig": {
        "description": "FederatedServicesControllerConfig configures the federated services controller, which syncs Kubernetes services from remote clusters.",
        "properties": {
          "reconcilerPeriod": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "ReconcilerPeriod is the period to perform reconciliation. [Default: 5m]"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.FelixConfigurationSpec": {
        "description": "FelixConfigurationSpec contains the values of the Felix configuration.",
        "properties": {
          "allowIPIPPacketsFromWorkloads": {
            "description": "AllowIPIPPacketsFromWorkloads controls whether Felix will add a rule to drop IPIP encapsulated traffic from workloads [Default: false]",
            "type": "boolean"
          },
          "allowVXLANPacketsFromWorkloads": {
            "description": "AllowVXLANPacketsFromWorkloads controls whether Felix will add a rule to drop VXLAN encapsulated traffic from workloads [Default: false]",
            "type": "boolean"
          },
          "awsSrcDstCheck": {
            "description": "Set source-destination-check on AWS EC2 instances. Accepted value must be one of \"DoNothing\", \"Enabled\" or \"Disabled\". [Default: DoNothing]",
            "type": "string"
          },
          "bpfConnectTimeLoadBalancingEnabled": {
            "description": "BPFConnectTimeLoadBalancingEnabled when in BPF mode, controls whether Felix installs the connection-time load balancer.  The connect-time load balancer is required for the host to be able to reach Kubernetes services and it improves the performance of pod-to-service connections.  The only reason to disable it is for debugging purposes.  [Default: true]",
            "type": "boolean"
          },
          "bpfDataIfacePattern": {
            "description": "BPFDataIfacePattern is a regular expression that controls which interfaces Felix should attach BPF programs to in order to catch traffic to/from the network.  This needs to match the interfaces that Calico workload traffic flows over as well as any interfaces that handle incoming traffic to nodeports and services from outside the cluster.  It should not match the workload interfaces (usually named cali...).",
            "type": "string"
          },
          "bpfDisableUnprivileged": {
            "description": "BPFDisableUnprivileged, if enabled, Felix sets the kernel.unprivileged_bpf_disabled sysctl to disable unprivileged use of BPF.  This ensures that unprivileged users cannot access Calico's BPF maps and cannot insert their own BPF programs to interfere with Calico's. [Default: true]",
            "type": "boolean"
          },
          "bpfEnabled": {
            "description": "BPFEnabled, if enabled Felix will use the BPF dataplane. [Default: false]",
            "type": "boolean"
          },
          "bpfExternalServiceMode": {
            "description": "BPFExternalServiceMode in BPF mode, controls how connections from outside the cluster to services (node ports and cluster IPs) are forwarded to remote workloads.  If set to \"Tunnel\" then both request and response traffic is tunneled to the remote node.  If set to \"DSR\", the request traffic is tunneled but the response traffic is sent directly from the remote node.  In \"DSR\" mode, the remote node appears to use the IP of the ingress node; this requires a permissive L2 network.  [Default: Tunnel]",
            "type": "string"
          },
          "bpfKubeProxyEndpointSlicesEnabled": {
            "description": "BPFKubeProxyEndpointSlicesEnabled in BPF mode, controls whether Felix's embedded kube-proxy accepts EndpointSlices or not.",
            "type": "boolean"
          },
          "bpfKubeProxyIptablesCleanupEnabled": {
            "description": "BPFKubeProxyIptablesCleanupEnabled, if enabled in BPF mode, Felix will proactively clean up the upstream Kubernetes kube-proxy's iptables chains.  Should only be enabled if kube-proxy is not running.  [Default: true]",
            "type": "boolean"
          },
          "bpfKubeProxyMinSyncPeriod": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "BPFKubeProxyMinSyncPeriod, in BPF mode, controls the minimum time between updates to the dataplane for Felix's embedded kube-proxy.  Lower values give reduced set-up latency.  Higher values reduce Felix CPU usage by batching up more work.  [Default: 1s]"
          },
          "bpfLogLevel": {
            "description": "BPFLogLevel controls the log level of the BPF programs when in BPF dataplane mode.  One of \"Off\", \"Info\", or \"Debug\".  The logs are emitted to the BPF trace pipe, accessible with the command `tc exec bpf debug`. [Default: Off].",
            "type": "string"
          },
          "captureDir": {
            "description": "CaptureDir controls directory to store file capture. [Default: /var/log/calico/pcap]",
            "type": "string"
          },
          "captureMaxFiles": {
            "description": "CaptureMaxFiles controls number of rotated capture file to keep. [Default: 2]",
            "format": "int32",
            "type": "integer"
          },
          "captureMaxSizeBytes": {
            "description": "CaptureMaxSizeBytes controls the max size of a file capture. [Default: 10000000]",
            "format": "int32",
            "type": "integer"
          },
          "captureRotationSeconds": {
            "description": "CaptureRotationSeconds controls the time rotation of a packet capture. [Default: 3600]",
            "format": "int32",
            "type": "integer"
          },
          "chainInsertMode": {
            "description": "ChainInsertMode controls whether Felix hooks the kernel's top-level iptables chains by inserting a rule at the top of the chain or by appending a rule at the bottom. insert is the safe default since it prevents Calico's rules from being bypassed. If you switch to append mode, be sure that the other rules in the chains signal acceptance by falling through to the Calico rules, otherwise the Calico policy will be bypassed. [Default: insert]",
            "type": "string"
          },
          "cloudWatchLogsAggregationKindForAllowed": {
            "description": "CloudWatchLogsAggregationKindForAllowed is used to choose the type of aggregation for flow log entries created for allowed connections. [Default: 2 - pod prefix name based aggregation]. Accepted values are 0, 1 and 2. 0 - No aggregation 1 - Source port based aggregation 2 - Pod prefix name based aggreagation.",
            "format": "int32",
            "type": "integer"
          },
          "cloudWatchLogsAggregationKindForDenied": {
            "description": "CloudWatchLogsAggregationKindForDenied is used to choose the type of aggregation for flow log entries created for denied connections. [Default: 1 - source port based aggregation]. Accepted values are 0, 1 and 2. 0 - No aggregation 1 - Source port based aggregation 2 - Pod prefix name based aggreagation.",
            "format": "int32",
            "type": "integer"
          },
          "cloudWatchLogsEnableHostEndpoint": {
            "description": "Deprecated: Use FlowLogsEnableHostEndpoint.",
            "type": "boolean"
          },
          "cloudWatchLogsEnabledForAllowed": {
            "description": "CloudWatchLogsEnabledForAllowed is used to enable/disable flow logs entries created for allowed connections. Default is true. This parameter only takes effect when CloudWatchLogsReporterEnabled is set to true.",
            "type": "boolean"
          },
          "cloudWatchLogsEnabledForDenied": {
            "description": "CloudWatchLogsEnabledForDenied is used to enable/disable flow logs entries created for denied flows. Default is true. This parameter only takes effect when CloudWatchLogsReporterEnabled is set to true.",
            "type": "boolean"
          },
          "cloudWatchLogsFlushInterval": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "Deprecated: Use FlowLogsFlushInterval instead."
          },
          "cloudWatchLogsIncludeLabels": {
            "description": "CloudWatchLogsIncludeLabels is used to configure if endpoint labels are included in a Flow log entry.",
            "type": "boolean"
          },
          "cloudWatchLogsIncludePolicies": {
            "description": "CloudWatchLogsIncludePolicies is used to configure if policy information are included in a Flow log entry.",
            "type": "boolean"
          },
          "cloudWatchLogsLogGroupName": {
            "description": "CloudWatchLogsLogGroupName configures the Log group to use for exporting flow logs. Defaults to \"tigera-flowlogs-\u003ccluster-guid\u003e\".",
            "type": "string"
          },
          "cloudWatchLogsLogStreamName": {
            "description": "CloudWatchLogsLogStreamName configures the Log stream to use for exporting flow logs. Defaults to \"\u003cfelix-hostname\u003e_Flowlogs\".",
            "type": "string"
          },
          "cloudWatchLogsReporterEnabled": {
            "description": "Enable Flow logs reporting to AWS CloudWatch.",
            "type": "boolean"
          },
          "cloudWatchLogsRetentionDays": {
            "description": "Number of days for which to retain logs. See https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutRetentionPolicy.html for allowed values.",
            "format": "int32",
            "type": "integer"
          },
          "cloudWatchMetricsPushIntervalSecs": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "CloudWatchMetricsPushInterval configures the interval at which Felix exports metrics to CloudWatch."
          },
          "cloudWatchMetricsReporterEnabled": {
            "description": "Enable reporting metrics to CloudWatch.",
            "type": "boolean"
          },
          "cloudWatchNodeHealthPushIntervalSecs": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "CloudWatchNodeHealthPushIntervalSecs configures the frequency of pushing the node health metrics to CloudWatch."
          },
          "cloudWatchNodeHealthStatusEnabled": {
            "description": "CloudWatchNodeHealthStatusEnabled enables pushing node health data to CloudWatch.",
            "type": "boolean"
          },
          "dataplaneDriver": {
            "type": "string"
          },
          "debugDisableLogDropping": {
            "type": "boolean"
          },
          "debugMemoryProfilePath": {
            "type": "string"
          },
          "debugSimulateCalcGraphHangAfter": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
          },
          "debugSimulateDataplaneHangAfter": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
          },
          "defaultEndpointToHostAction": {
            "description": "DefaultEndpointToHostAction controls what happens to traffic that goes from a workload endpoint to the host itself (after the traffic hits the endpoint egress policy). By default Calico blocks traffic from workload endpoints to the host itself with an iptables “DROP” action. If you want to allow some or all traffic from endpoint to host, set this parameter to RETURN or ACCEPT. Use RETURN if you have your own rules in the iptables “INPUT” chain; Calico will insert its rules at the top of that chain, then “RETURN” packets to the “INPUT” chain once it has completed processing workload endpoint egress policy. Use ACCEPT to unconditionally accept packets from workloads after processing workload endpoint egress policy. [Default: Drop]",
            "type": "string"
          },
          "deletedMetricsRetentionSecs": {
            "format": "int32",
            "type": "integer"
          },
          "deviceRouteProtocol": {
            "description": "This defines the route protocol added to programmed device routes, by default this will be RTPROT_BOOT when left blank.",
            "format": "int32",
            "type": "integer"
          },
          "deviceRouteSourceAddress": {
            "description": "This is the source address to use on programmed device routes. By default the source address is left blank, leaving the kernel to choose the source address used.",
            "type": "string"
          },
          "disableConntrackInvalidCheck": {
            "type": "boolean"
          },
          "dnsCacheEpoch": {
            "description": "An arbitrary number that can be changed, at runtime, to tell Felix to discard all its learnt DNS information. [Default: 0].",
            "format": "int32",
            "type": "integer"
          },
          "dnsCacheFile": {
            "description": "The name of the file that Felix uses to preserve learnt DNS information when restarting. [Default: \"/var/run/calico/felix-dns-cache.txt\"].",
            "type": "string"
          },
          "dnsCacheSaveInterval": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "The periodic interval at which Felix saves learnt DNS information to the cache file. [Default: 60s]."
          },
          "dnsExtraTTL": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "Extra time to keep IPs and alias names that are learnt from DNS, in addition to each name or IP's advertised TTL. [Default: 0s]."
          },
          "dnsLogsFileAggregationKind": {
            "description": "DNSLogsFileAggregationKind is used to choose the type of aggregation for DNS log entries. [Default: 1 - client name prefix aggregation]. Accepted values are 0 and 1. 0 - No aggregation 1 - Aggregate over clients with the same name prefix",
            "format": "int32",
            "type": "integer"
          },
          "dnsLogsFileDirectory": {
            "description": "DNSLogsFileDirectory sets the directory where DNS log files are stored. [Default: /var/log/calico/dnslogs]",
            "type": "string"
          },
          "dnsLogsFileEnabled": {
            "description": "DNSLogsFileEnabled controls logging DNS logs to a file. If false no DNS logging to file will occur. [Default: false]",
            "type": "boolean"
          },
          "dnsLogsFileIncludeLabels": {
            "description": "DNSLogsFileIncludeLabels is used to configure if endpoint labels are included in a DNS log entry written to file. [Default: true]",
            "type": "boolean"
          },
          "dnsLogsFileMaxFileSizeMB": {
            "description": "DNSLogsFileMaxFileSizeMB sets the max size in MB of DNS log files before rotation. [Default: 100]",
            "format": "int32",
            "type": "integer"
          },
          "dnsLogsFileMaxFiles": {
            "description": "DNSLogsFileMaxFiles sets the number of DNS log files to keep. [Default: 5]",
            "format": "int32",
            "type": "integer"
          },
          "dnsLogsFilePerNodeLimit": {
            "description": "Limit on the number of DNS logs that can be emitted within each flush interval.  When this limit has been reached, Felix counts the number of unloggable DNS responses within the flush interval, and emits a WARNING log with that count at the same time as it flushes the buffered DNS logs.  [Default: 0, meaning no limit]",
            "format": "int32",
            "type": "integer"
          },
          "dnsLogsFlushInterval": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "DNSLogsFlushInterval configures the interval at which Felix exports DNS logs. [Default: 300s]"
          },
          "dnsLogsLatency": {
            "description": "DNSLogsLatency indicates to include measurements of DNS request/response latency in each DNS log. [Default: true]",
            "type": "boolean"
          },
          "dnsTrustedServers": {
            "description": "The DNS servers that Felix should trust. Each entry here must be `\u003cip\u003e[:\u003cport\u003e]` - indicating an explicit DNS server IP - or `k8s-service:[\u003cnamespace\u003e/]\u003cname\u003e[:port]` - indicating a Kubernetes DNS service. `\u003cport\u003e` defaults to the first service port, or 53 for an IP, and `\u003cnamespace\u003e` to `kube-system`. An IPv6 address with a port must use the square brackets convention, for example `[fd00:83a6::12]:5353`.Note that Felix (calico-node) will need RBAC permission to read the details of each service specified by a `k8s-service:...` form. [Default: \"k8s-service:kube-dns\"].",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dropActionOverride": {
            "description": "DropActionOverride overrides the Drop action in Felix, optionally changing the behavior to Accept, and optionally adding Log. Possible values are Drop, LogAndDrop, Accept, LogAndAccept. [Default: Drop]",
            "type": "string"
          },
          "egressIPRoutingRulePriority": {
            "description": "EgressIPRoutingRulePriority controls the priority value to use for the egress IP routing rule. [Default: 100]",
            "format": "int32",
            "type": "integer"
          },
          "egressIPSupport": {
            "description": "EgressIPSupport defines three different support modes for egress IP function. [Default: Disabled] - Disabled:                    Egress IP function is disabled. - EnabledPerNamespace:         Egress IP function is enabled and can be configured on a per-namespace basis;\n                               per-pod egress annotations are ignored.\n- EnabledPerNamespaceOrPerPod: Egress IP function is enabled and can be configured per-namespace or per-pod,\n                               with per-pod egress annotations overriding namespace annotations.",
            "type": "string"
          },
          "egressIPVXLANPort": {
            "description": "EgressIPVXLANPort is the port number of vxlan tunnel device for egress traffic. [Default: 4790]",
            "format": "int32",
            "type": "integer"
          },
          "egressIPVXLANVNI": {
            "description": "EgressIPVXLANVNI is the VNI ID of vxlan tunnel device for egress traffic. [Default: 4097]",
            "format": "int32",
            "type": "integer"
          },
          "endpointReportingDelay": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
          },
          "endpointReportingEnabled": {
            "type": "boolean"
          },
          "externalNodesList": {
            "description": "ExternalNodesCIDRList is a list of CIDR's of external-non-calico-nodes which may source tunnel traffic and have the tunneled traffic be accepted at calico nodes.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "failsafeInboundHostPorts": {
            "description": "FailsafeInboundHostPorts is a comma-delimited list of UDP/TCP ports that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. Each port should be specified as tcp:\u003cport-number\u003e or udp:\u003cport-number\u003e. For back-compatibility, if the protocol is not specified, it defaults to “tcp”. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ProtoPort"
            },
            "type": "array"
          },
          "failsafeOutboundHostPorts": {
            "description": "FailsafeOutboundHostPorts is a comma-delimited list of UDP/TCP ports that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. Each port should be specified as tcp:\u003cport-number\u003e or udp:\u003cport-number\u003e. For back-compatibility, if the protocol is not specified, it defaults to “tcp”. To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ProtoPort"
            },
            "type": "array"
          },
          "featureDetectOverride": {
            "description": "FeatureDetectOverride is used to override the feature detection. Values are specified in a comma separated list with no spaces, example; \"SNATFullyRandom=true,MASQFullyRandom=false,RestoreSupportsLock=\". \"true\" or \"false\" will force the feature, empty or omitted values are auto-detected.",
            "type": "string"
          },
          "flowLogsAggregationThresholdBytes": {
            "description": "FlowLogsAggregationThresholdBytes is used specify how far behind the external pipeline that reads flow logs can be. Default is 8192 bytes. This parameter only takes effect when FlowLogsDynamicAggregationEnabled is set to true.",
            "format": "int32",
            "type": "integer"
          },
          "flowLogsDynamicAggregationEnabled": {
            "description": "FlowLogsDynamicAggregationEnabled is used to enable/disable dynamically changing aggregation levels. Default is true.",
            "type": "boolean"
          },
          "flowLogsEnableHostEndpoint": {
            "description": "FlowLogsEnableHostEndpoint enables Flow logs reporting for HostEndpoints.",
            "type": "boolean"
          },
          "flowLogsEnableNetworkSets": {
            "description": "FlowLogsEnableNetworkSets enables Flow logs reporting for GlobalNetworkSets.",
            "type": "boolean"
          },
          "flowLogsFileAggregationKindForAllowed": {
            "description": "FlowLogsFileAggregationKindForAllowed is used to choose the type of aggregation for flow log entries created for allowed connections. [Default: 2 - pod prefix name based aggregation]. Accepted values are 0, 1 and 2. 0 - No aggregation 1 - Source port based aggregation 2 - Pod prefix name based aggreagation.",
            "format": "int32",
            "type": "integer"
          },
          "flowLogsFileAggregationKindForDenied": {
            "description": "FlowLogsFileAggregationKindForDenied is used to choose the type of aggregation for flow log entries created for denied connections. [Default: 1 - source port based aggregation]. Accepted values are 0, 1 and 2. 0 - No aggregation 1 - Source port based aggregation 2 - Pod prefix name based aggregation. 3 - No destination ports based aggregation",
            "format": "int32",
            "type": "integer"
          },
          "flowLogsFileDirectory": {
            "description": "FlowLogsFileDirectory sets the directory where flow logs files are stored.",
            "type": "string"
          },
          "flowLogsFileEnabled": {
            "description": "FlowLogsFileEnabled when set to true, enables logging flow logs to a file. If false no flow logging to file will occur.",
            "type": "boolean"
          },
          "flowLogsFileEnabledForAllowed": {
            "description": "FlowLogsFileEnabledForAllowed is used to enable/disable flow logs entries created for allowed connections. Default is true. This parameter only takes effect when FlowLogsFileReporterEnabled is set to true.",
            "type": "boolean"
          },
          "flowLogsFileEnabledForDenied": {
            "description": "FlowLogsFileEnabledForDenied is used to enable/disable flow logs entries created for denied flows. Default is true. This parameter only takes effect when FlowLogsFileReporterEnabled is set to true.",
            "type": "boolean"
          },
          "flowLogsFileIncludeLabels": {
            "description": "FlowLogsFileIncludeLabels is used to configure if endpoint labels are included in a Flow log entry written to file.",
            "type": "boolean"
          },
          "flowLogsFileIncludePolicies": {
            "description": "FlowLogsFileIncludePolicies is used to configure if policy information are included in a Flow log entry written to file.",
            "type": "boolean"
          },
          "flowLogsFileIncludeService": {
            "description": "FlowLogsFileIncludeService is used to configure if the destination service is included in a Flow log entry written to file. The service information can only be included if the flow was explicitly determined to be directed at the service (e.g. when the pre-DNAT destination corresponds to the service ClusterIP and port).",
            "type": "boolean"
          },
          "flowLogsFileMaxFileSizeMB": {
            "description": "FlowLogsFileMaxFileSizeMB sets the max size in MB of flow logs files before rotation.",
            "format": "int32",
            "type": "integer"
          },
          "flowLogsFileMaxFiles": {
            "description": "FlowLogsFileMaxFiles sets the number of log files to keep.",
            "format": "int32",
            "type": "integer"
          },
          "flowLogsFlushInterval": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "FlowLogsFlushInterval configures the interval at which Felix exports flow logs."
          },
          "flowLogsMaxOriginalIPsIncluded": {
            "description": "FlowLogsMaxOriginalIPsIncluded specifies the number of unique IP addresses (if relevant) that should be included in Flow logs.",
            "format": "int32",
            "type": "integer"
          },
          "flowLogsPositionFilePath": {
            "description": "FlowLogsPositionFilePath is used specify the position of the external pipeline that reads flow logs. Default is /var/log/calico/flows.log.pos. This parameter only takes effect when FlowLogsDynamicAggregationEnabled is set to true.",
            "type": "string"
          },
          "genericXDPEnabled": {
            "description": "GenericXDPEnabled enables Generic XDP so network cards that don't support XDP offload or driver modes can use XDP. This is not recommended since it doesn't provide better performance than iptables. [Default: false]",
            "type": "boolean"
          },
          "healthEnabled": {
            "type": "boolean"
          },
          "healthHost": {
            "type": "string"
          },
          "healthPort": {
            "format": "int32",
            "type": "integer"
          },
          "interfaceExclude": {
            "description": "InterfaceExclude is a comma-separated list of interfaces that Felix should exclude when monitoring for host endpoints. The default value ensures that Felix ignores Kubernetes' IPVS dummy interface, which is used internally by kube-proxy. If you want to exclude multiple interface names using a single value, the list supports regular expressions. For regular expressions you must wrap the value with '/'. For example having values '/^kube/,veth1' will exclude all interfaces that begin with 'kube' and also the interface 'veth1'. [Default: kube-ipvs0]",
            "type": "string"
          },
          "interfacePrefix": {
            "description": "InterfacePrefix is the interface name prefix that identifies workload endpoints and so distinguishes them from host endpoint interfaces. Note: in environments other than bare metal, the orchestrators configure this appropriately. For example our Kubernetes and Docker integrations set the 'cali' value, and our OpenStack integration sets the 'tap' value. [Default: cali]",
            "type": "string"
          },
          "interfaceRefreshInterval": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "InterfaceRefreshInterval is the period at which Felix rescans local interfaces to verify their state. The rescan can be disabled by setting the interval to 0."
          },
          "ipipEnabled": {
            "type": "boolean"
          },
          "ipipMTU": {
            "description": "IPIPMTU is the MTU to set on the tunnel device. See Configuring MTU [Default: 1440]",
            "format": "int32",
            "type": "integer"
          },
          "ipsecAllowUnsecuredTraffic": {
            "description": "IPSecAllowUnsecuredTraffic controls whether non-IPsec traffic is allowed in addition to IPsec traffic. Enabling this negates the anti-spoofing protections of IPsec but it is useful when migrating to/from IPsec. [Default: false]",
            "type": "boolean"
          },
          "ipsecESPAlgorithm": {
            "description": "IPSecESAlgorithm sets IPSec ESP algorithm. Default is NIST suite B recommendation. [Default: aes128gcm16-ecp256]",
            "type": "string"
          },
          "ipsecIKEAlgorithm": {
            "description": "IPSecIKEAlgorithm sets IPSec IKE algorithm. Default is NIST suite B recommendation. [Default: aes128gcm16-prfsha256-ecp256]",
            "type": "string"
          },
          "ipsecLogLevel": {
            "description": "IPSecLogLevel controls log level for IPSec components. Set to None for no logging. A generic log level terminology is used [None, Notice, Info, Debug, Verbose]. [Default: Info]",
            "type": "string"
          },
          "ipsecMode": {
            "description": "IPSecMode controls which mode IPSec is operating on. Default value means IPSec is not enabled. [Default: \"\"]",
            "type": "string"
          },
          "ipsecPolicyRefreshInterval": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "IPSecPolicyRefreshInterval is the interval at which Felix will check the kernel's IPsec policy tables and repair any inconsistencies. [Default: 600s]"
          },
          "ipsetsRefreshInterval": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "IpsetsRefreshInterval is the period at which Felix re-checks all iptables state to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable iptables refresh. [Default: 90s]"
          },
          "iptablesBackend": {
            "description": "IptablesBackend specifies which backend of iptables will be used. The default is legacy.",
            "type": "string"
          },
          "iptablesFilterAllowAction": {
            "type": "string"
          },
          "iptablesLockFilePath": {
            "description": "IptablesLockFilePath is the location of the iptables lock file. You may need to change this if the lock file is not in its standard location (for example if you have mapped it into Felix's container at a different path). [Default: /run/xtables.lock]",
            "type": "string"
          },
          "iptablesLockProbeInterval": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "IptablesLockProbeInterval is the time that Felix will wait between attempts to acquire the iptables lock if it is not available. Lower values make Felix more responsive when the lock is contended, but use more CPU. [Default: 50ms]"
          },
          "iptablesLockTimeout": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "IptablesLockTimeout is the time that Felix will wait for the iptables lock, or 0, to disable. To use this feature, Felix must share the iptables lock file with all other processes that also take the lock. When running Felix inside a container, this requires the /run directory of the host to be mounted into the calico/node or calico/felix container. [Default: 0s disabled]"
          },
          "iptablesMangleAllowAction": {
            "type": "string"
          },
          "iptablesMarkMask": {
            "description": "IptablesMarkMask is the mask that Felix selects its IPTables Mark bits from. Should be a 32 bit hexadecimal number with at least 8 bits set, none of which clash with any other mark bits in use on the system. [Default: 0xff000000]",
            "format": "int64",
            "type": "integer"
          },
          "iptablesNATOutgoingInterfaceFilter": {
            "type": "string"
          },
          "iptablesPostWriteCheckInterval": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "IptablesPostWriteCheckInterval is the period after Felix has done a write to the dataplane that it schedules an extra read back in order to check the write was not clobbered by another process. This should only occur if another application on the system doesn't respect the iptables lock. [Default: 1s]"
          },
          "iptablesRefreshInterval": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "IptablesRefreshInterval is the period at which Felix re-checks the IP sets in the dataplane to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable IP sets refresh. Note: the default for this value is lower than the other refresh intervals as a workaround for a Linux kernel bug that was fixed in kernel version 4.11. If you are using v4.11 or greater you may want to set this to, a higher value to reduce Felix CPU usage. [Default: 10s]"
          },
          "ipv6Support": {
            "type": "boolean"
          },
          "kubeNodePortRanges": {
            "description": "KubeNodePortRanges holds list of port ranges used for service node ports. Only used if felix detects kube-proxy running in ipvs mode. Felix uses these ranges to separate host and workload traffic. [Default: 30000:32767].",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.numorstring.Port"
            },
            "type": "array"
          },
          "logDropActionOverride": {
            "description": "LogDropActionOverride specifies whether or not to include the DropActionOverride in the logs when it is triggered.",
            "type": "boolean"
          },
          "logFilePath": {
            "description": "LogFilePath is the full path to the Felix log. Set to none to disable file logging. [Default: /var/log/calico/felix.log]",
            "type": "string"
          },
          "logPrefix": {
            "description": "LogPrefix is the log prefix that Felix uses when rendering LOG rules. [Default: calico-packet]",
            "type": "string"
          },
          "logSeverityFile": {
            "description": "LogSeverityFile is the log severity above which logs are sent to the log file. [Default: Info]",
            "type": "string"
          },
          "logSeverityScreen": {
            "description": "LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: Info]",
            "type": "string"
          },
          "logSeveritySys": {
            "description": "LogSeveritySys is the log severity above which logs are sent to the syslog. Set to None for no logging to syslog. [Default: Info]",
            "type": "string"
          },
          "maxIpsetSize": {
            "format": "int32",
            "type": "integer"
          },
          "metadataAddr": {
            "description": "MetadataAddr is the IP address or domain name of the server that can answer VM queries for cloud-init metadata. In OpenStack, this corresponds to the machine running nova-api (or in Ubuntu, nova-api-metadata). A value of none (case insensitive) means that Felix should not set up any NAT rule for the metadata path. [Default: 127.0.0.1]",
            "type": "string"
          },
          "metadataPort": {
            "description": "MetadataPort is the port of the metadata server. This, combined with global.MetadataAddr (if not 'None'), is used to set up a NAT rule, from 169.254.169.254:80 to MetadataAddr:MetadataPort. In most cases this should not need to be changed [Default: 8775].",
            "format": "int32",
            "type": "integer"
          },
          "mtuIfacePattern": {
            "description": "MTUIfacePattern is a regular expression that controls which interfaces Felix should scan in order to calculate the host's MTU. This should not match workload interfaces (usually named cali...).",
            "type": "string"
          },
          "natOutgoingAddress": {
            "description": "NATOutgoingAddress specifies an address to use when performing source NAT for traffic in a natOutgoing pool that is leaving the network. By default the address used is an address on the interface the traffic is leaving on (ie it uses the iptables MASQUERADE target)",
            "type": "string"
          },
          "natPortRange": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.numorstring.Port",
            "description": "NATPortRange specifies the range of ports that is used for port mapping when doing outgoing NAT. When unset the default behavior of the network stack is used."
          },
          "netlinkTimeout": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
          },
          "nfNetlinkBufSize": {
            "type": "string"
          },
          "openstackRegion": {
            "description": "OpenstackRegion is the name of the region that a particular Felix belongs to. In a multi-region Calico/OpenStack deployment, this must be configured somehow for each Felix (here in the datamodel, or in felix.cfg or the environment on each compute node), and must match the [calico] openstack_region value configured in neutron.conf on each node. [Default: Empty]",
            "type": "string"
          },
          "policySyncPathPrefix": {
            "description": "PolicySyncPathPrefix is used to by Felix to communicate policy changes to external services, like Application layer policy. [Default: Empty]",
            "type": "string"
          },
          "prometheusGoMetricsEnabled": {
            "description": "PrometheusGoMetricsEnabled disables Go runtime metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]",
            "type": "boolean"
          },
          "prometheusMetricsCAFile": {
            "type": "string"
          },
          "prometheusMetricsCertFile": {
            "description": "TLS credentials for this port.",
            "type": "string"
          },
          "prometheusMetricsEnabled": {
            "description": "PrometheusMetricsEnabled enables the Prometheus metrics server in Felix if set to true. [Default: false]",
            "type": "boolean"
          },
          "prometheusMetricsHost": {
            "description": "PrometheusMetricsHost is the host that the Prometheus metrics server should bind to. [Default: empty]",
            "type": "string"
          },
          "prometheusMetricsKeyFile": {
            "type": "string"
          },
          "prometheusMetricsPort": {
            "description": "PrometheusMetricsPort is the TCP port that the Prometheus metrics server should bind to. [Default: 9091]",
            "format": "int32",
            "type": "integer"
          },
          "prometheusProcessMetricsEnabled": {
            "description": "PrometheusProcessMetricsEnabled disables process metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]",
            "type": "boolean"
          },
          "prometheusReporterCAFile": {
            "type": "string"
          },
          "prometheusReporterCertFile": {
            "type": "string"
          },
          "prometheusReporterEnabled": {
            "description": "Felix Denied Packet Metrics configuration parameters.",
            "type": "boolean"
          },
          "prometheusReporterKeyFile": {
            "type": "string"
          },
          "prometheusReporterPort": {
            "format": "int32",
            "type": "integer"
          },
          "removeExternalRoutes": {
            "description": "Whether or not to remove device routes that have not been programmed by Felix. Disabling this will allow external applications to also add device routes. This is enabled by default which means we will remove externally added routes.",
            "type": "boolean"
          },
          "reportingInterval": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "ReportingInterval is the interval at which Felix reports its status into the datastore or 0 to disable. Must be non-zero in OpenStack deployments. [Default: 30s]"
          },
          "reportingTTL": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "ReportingTTL is the time-to-live setting for process-wide status reports. [Default: 90s]"
          },
          "routeRefreshInterval": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "RouteRefreshInterval is the period at which Felix re-checks the routes in the dataplane to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable route refresh. [Default: 90s]"
          },
          "routeSource": {
            "description": "RouteSource configures where Felix gets its routing information. - WorkloadIPs: use workload endpoints to construct routes. - CalicoIPAM: the default - use IPAM data to construct routes.",
            "type": "string"
          },
          "routeTableRange": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.RouteTableRange",
            "description": "Calico programs additional Linux route tables for various purposes.  RouteTableRange specifies the indices of the route tables that Calico should use."
          },
          "serviceLoopPrevention": {
            "description": "When service IP advertisement is enabled, prevent routing loops to service IPs that are not in use, by dropping or rejecting packets that do not get DNAT'd by kube-proxy. Unless set to \"Disabled\", in which case such routing loops continue to be allowed. [Default: Drop]",
            "type": "string"
          },
          "sidecarAccelerationEnabled": {
            "description": "SidecarAccelerationEnabled enables experimental sidecar acceleration [Default: false]",
            "type": "boolean"
          },
          "statsDumpFilePath": {
            "type": "string"
          },
          "syslogReporterAddress": {
            "type": "string"
          },
          "syslogReporterNetwork": {
            "type": "string"
          },
          "usageReportingEnabled": {
            "description": "UsageReportingEnabled reports anonymous Calico version number and cluster size to projectcalico.org. Logs warnings returned by the usage server. For example, if a significant security vulnerability has been discovered in the version of Calico being used. [Default: true]",
            "type": "boolean"
          },
          "usageReportingInitialDelay": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "UsageReportingInitialDelay controls the minimum delay before Felix makes a report. [Default: 300s]"
          },
          "usageReportingInterval": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "UsageReportingInterval controls the interval at which Felix makes reports. [Default: 86400s]"
          },
          "useInternalDataplaneDriver": {
            "type": "boolean"
          },
          "vxlanEnabled": {
            "type": "boolean"
          },
          "vxlanMTU": {
            "description": "VXLANMTU is the MTU to set on the tunnel device. See Configuring MTU [Default: 1440]",
            "format": "int32",
            "type": "integer"
          },
          "vxlanPort": {
            "format": "int32",
            "type": "integer"
          },
          "vxlanVNI": {
            "format": "int32",
            "type": "integer"
          },
          "windowsNetworkName": {
            "description": "WindowsNetworkName specifies which Windows HNS networks Felix should operate on.  The default is to match networks that start with \"calico\".  Supports regular expression syntax.",
            "type": "string"
          },
          "wireguardEnabled": {
            "description": "WireguardEnabled controls whether Wireguard is enabled. [Default: false]",
            "type": "boolean"
          },
          "wireguardInterfaceName": {
            "description": "WireguardInterfaceName specifies the name to use for the Wireguard interface. [Default: wg.calico]",
            "type": "string"
          },
          "wireguardListeningPort": {
            "description": "WireguardListeningPort controls the listening port used by Wireguard. [Default: 51820]",
            "format": "int32",
            "type": "integer"
          },
          "wireguardMTU": {
            "description": "WireguardMTU controls the MTU on the Wireguard interface. See Configuring MTU [Default: 1420]",
            "format": "int32",
            "type": "integer"
          },
          "wireguardRoutingRulePriority": {
            "description": "WireguardRoutingRulePriority controls the priority value to use for the Wireguard routing rule. [Default: 99]",
            "format": "int32",
            "type": "integer"
          },
          "xdpEnabled": {
            "description": "XDPEnabled enables XDP acceleration for suitable untracked incoming deny rules. [Default: true]",
            "type": "boolean"
          },
          "xdpRefreshInterval": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "XDPRefreshInterval is the period at which Felix re-checks all XDP state to ensure that no other process has accidentally broken Calico's BPF maps or attached programs. Set to 0 to disable XDP refresh. [Default: 90s]"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.GlobalAlertSpec": {
        "properties": {
          "aggregateBy": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "condition": {
            "type": "string"
          },
          "dataSet": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "field": {
            "type": "string"
          },
          "lookback": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
          },
          "metric": {
            "type": "string"
          },
          "period": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
          },
          "query": {
            "type": "string"
          },
          "severity": {
            "format": "int32",
            "type": "integer"
          },
          "summary": {
            "type": "string"
          },
          "threshold": {
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "description",
          "severity",
          "dataSet"
        ],
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.GlobalAlertStatus": {
        "properties": {
          "active": {
            "type": "boolean"
          },
          "errorConditions": {
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ErrorCondition"
            },
            "type": "array"
          },
          "executionState": {
            "type": "string"
          },
          "healthy": {
            "type": "boolean"
          },
          "lastEvent": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
          },
          "lastExecuted": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
          },
          "lastUpdate": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
          }
        },
        "required": [
          "active",
          "healthy"
        ],
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.GlobalNetworkPolicySpec": {
        "properties": {
          "applyOnForward": {
            "description": "ApplyOnForward indicates to apply the rules in this policy on forward traffic.",
            "type": "boolean"
          },
          "doNotTrack": {
            "description": "DoNotTrack indicates whether packets matched by the rules in this policy should go through the data plane's connection tracking, such as Linux conntrack.  If True, the rules in this policy are applied before any data plane connection tracking, and packets allowed by this policy are marked as not to be tracked.",
            "type": "boolean"
          },
          "egress": {
            "description": "The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.Rule"
            },
            "type": "array"
          },
          "ingress": {
            "description": "The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.Rule"
            },
            "type": "array"
          },
          "namespaceSelector": {
            "description": "NamespaceSelector is an optional field for an expression used to select a pod based on namespaces.",
            "type": "string"
          },
          "order": {
            "description": "Order is an optional field that specifies the order in which the policy is applied. Policies with higher \"order\" are applied after those with lower order within the same tier.  If the order is omitted, it may be considered to be \"infinite\" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy \"Name\" within the tier.",
            "format": "double",
            "type": "number"
          },
          "preDNAT": {
            "description": "PreDNAT indicates to apply the rules in this policy before any DNAT.",
            "type": "boolean"
          },
          "selector": {
            "description": "The selector is an expression used to pick pick out the endpoints that the policy should be applied to.\n\nSelector expressions follow this syntax:\n\n\tlabel == \"string_literal\"  -\u003e  comparison, e.g. my_label == \"foo bar\"\n\tlabel != \"string_literal\"   -\u003e  not equal; also matches if label is not present\n\tlabel in { \"a\", \"b\", \"c\", ... }  -\u003e  true if the value of label X is one of \"a\", \"b\", \"c\"\n\tlabel not in { \"a\", \"b\", \"c\", ... }  -\u003e  true if the value of label X is not one of \"a\", \"b\", \"c\"\n\thas(label_name)  -\u003e True if that label is present\n\t! expr -\u003e negation of expr\n\texpr \u0026\u0026 expr  -\u003e Short-circuit and\n\texpr || expr  -\u003e Short-circuit or\n\t( expr ) -\u003e parens for grouping\n\tall() or the empty selector -\u003e matches all endpoints.\n\nLabel names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters.\n\nExamples (with made-up labels):\n\n\ttype == \"webserver\" \u0026\u0026 deployment == \"prod\"\n\ttype in {\"frontend\", \"backend\"}\n\tdeployment != \"dev\"\n\t! has(label_name)",
            "type": "string"
          },
          "serviceAccountSelector": {
            "description": "ServiceAccountSelector is an optional field for an expression used to select a pod based on service accounts.",
            "type": "string"
          },
          "tier": {
            "description": "The name of the tier that this policy belongs to.  If this is omitted, the default tier (name is \"default\") is assumed.  The specified tier must exist in order to create security policies within the tier, the \"default\" tier is created automatically if it does not exist, this means for deployments requiring only a single Tier, the tier name may be omitted on all policy management requests.",
            "type": "string"
          },
          "types": {
            "description": "Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress rules are present in the policy.  The default is:\n\n- [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are\n  also no Ingress rules)\n\n- [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules\n\n- [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules.\n\nWhen the policy is read back again, Types will always be one of these values, never empty or nil.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.GlobalNetworkSetSpec": {
        "description": "GlobalNetworkSetSpec contains the specification for a NetworkSet resource.",
        "properties": {
          "allowedEgressDomains": {
            "description": "The list of domain names that belong to this set and are honored in egress allow rules only.  Domain names specified here only work to allow egress traffic from the cluster to external destinations.  They don't work to _deny_ traffic to destinations specified by domain name, or to allow ingress traffic from _sources_ specified by domain name.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "nets": {
            "description": "The list of IP networks that belong to this set.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.GlobalNetworkSetSync": {
        "properties": {
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.GlobalThreatFeedSpec": {
        "description": "GlobalThreatFeedSpec contains the specification of a GlobalThreatFeed resource.",
        "properties": {
          "content": {
            "description": "Content describes the kind of data the data feed provides.",
            "type": "string"
          },
          "globalNetworkSet": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.GlobalNetworkSetSync"
          },
          "pull": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.Pull"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.GlobalThreatFeedStatus": {
        "properties": {
          "errorConditions": {
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ErrorCondition"
            },
            "type": "array"
          },
          "lastSuccessfulSearch": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
          },
          "lastSuccessfulSync": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
          }
        },
        "required": [
          "lastSuccessfulSync",
          "lastSuccessfulSearch",
          "errorConditions"
        ],
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.HTTPHeader": {
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "valueFrom": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.HTTPHeaderSource"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.HTTPHeaderSource": {
        "properties": {
          "configMapKeyRef": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector",
            "description": "Selects a key of a ConfigMap."
          },
          "secretKeyRef": {
            "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector",
            "description": "Selects a key of a secret in the pod's namespace"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.HTTPMatch": {
        "description": "HTTPMatch is an optional field that apply only to HTTP requests The Methods and Path fields are joined with AND",
        "properties": {
          "methods": {
            "description": "Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "paths": {
            "description": "Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a `exact` or a `prefix` match. The validator will check for it.",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.HTTPPath"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.HTTPPath": {
        "description": "HTTPPath specifies an HTTP path to match. It may be either of the form: exact: \u003cpath\u003e: which matches the path exactly or prefix: \u003cpath-prefix\u003e: which matches the path prefix",
        "properties": {
          "exact": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.HTTPPull": {
        "properties": {
          "format": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ThreatFeedFormat"
          },
          "headers": {
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.HTTPHeader"
            },
            "type": "array"
          },
          "url": {
            "type": "string"
          }
        },
        "required": [
          "url"
        ],
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.HostEndpointSpec": {
        "description": "HostEndpointSpec contains the specification for a HostEndpoint resource.",
        "properties": {
          "expectedIPs": {
            "description": "The expected IP addresses (IPv4 and IPv6) of the endpoint. If \"InterfaceName\" is not present, Calico will look for an interface matching any of the IPs in the list and apply policy to that. Note:\n\tWhen using the selector match criteria in an ingress or egress security Policy\n\tor Profile, Calico converts the selector into a set of IP addresses. For host\n\tendpoints, the ExpectedIPs field is used for that purpose. (If only the interface\n\tname is specified, Calico does not learn the IPs of the interface for use in match\n\tcriteria.)",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "interfaceName": {
            "description": "Either \"*\", or the name of a specific Linux interface to apply policy to; or empty.  \"*\" indicates that this HostEndpoint governs all traffic to, from or through the default network namespace of the host named by the \"Node\" field; entering and leaving that namespace via any interface, including those from/to non-host-networked local workloads.\n\nIf InterfaceName is not \"*\", this HostEndpoint only governs traffic that enters or leaves the host through the specific interface named by InterfaceName, or - when InterfaceName is empty - through the specific interface that has one of the IPs in ExpectedIPs. Therefore, when InterfaceName is empty, at least one expected IP must be specified.  Only external interfaces (such as “eth0”) are supported here; it isn't possible for a HostEndpoint to protect traffic through a specific local workload interface.\n\nNote: Only some kinds of policy are implemented for \"*\" HostEndpoints; initially just pre-DNAT policy.  Please check Calico documentation for the latest position.",
            "type": "string"
          },
          "node": {
            "description": "The node name identifying the Calico node instance.",
            "type": "string"
          },
          "ports": {
            "description": "Ports contains the endpoint's named ports, which may be referenced in security policy rules.",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.EndpointPort"
            },
            "type": "array"
          },
          "profiles": {
            "description": "A list of identifiers of security Profile objects that apply to this endpoint. Each profile is applied in the order that they appear in this list.  Profile rules are applied after the selector-based security policy.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.ICMPFields": {
        "description": "ICMPFields defines structure for ICMP and NotICMP sub-struct for ICMP code and type",
        "properties": {
          "code": {
            "description": "Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.",
            "format": "int32",
            "type": "integer"
          },
          "type": {
            "description": "Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.IPPoolSpec": {
        "description": "IPPoolSpec contains the specification for an IPPool resource.",
        "properties": {
          "blockSize": {
            "description": "The block size to use for IP address assignments from this pool. Defaults to 26 for IPv4 and 112 for IPv6.",
            "format": "int32",
            "type": "integer"
          },
          "cidr": {
            "description": "The pool CIDR.",
            "type": "string"
          },
          "disabled": {
            "description": "When disabled is true, Calico IPAM will not assign addresses from this pool.",
            "type": "boolean"
          },
          "ipip": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v1.IPIPConfiguration",
            "description": "Deprecated: this field is only used for APIv1 backwards compatibility. Setting this field is not allowed, this field is for internal use only."
          },
          "ipipMode": {
            "description": "Contains configuration for IPIP tunneling for this pool. If not specified, then this is defaulted to \"Never\" (i.e. IPIP tunneling is disabled).",
            "type": "string"
          },
          "nat-outgoing": {
            "description": "Deprecated: this field is only used for APIv1 backwards compatibility. Setting this field is not allowed, this field is for internal use only.",
            "type": "boolean"
          },
          "natOutgoing": {
            "description": "When nat-outgoing is true, packets sent from Calico networked containers in this pool to destinations outside of this pool will be masqueraded.",
            "type": "boolean"
          },
          "nodeSelector": {
            "description": "Allows IPPool to allocate for a specific node by label selector.",
            "type": "string"
          },
          "vxlanMode": {
            "description": "Contains configuration for VXLAN tunneling for this pool. If not specified, then this is defaulted to \"Never\" (i.e. VXLAN tunneling is disabled).",
            "type": "string"
          }
        },
        "required": [
          "cidr"
        ],
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.KubeControllersConfigurationSpec": {
        "description": "KubeControllersConfigurationSpec contains the values of the Kubernetes controllers configuration.",
        "properties": {
          "controllers": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ControllersConfig",
            "description": "Controllers enables and configures individual Kubernetes controllers"
          },
          "etcdV3CompactionPeriod": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "EtcdV3CompactionPeriod is the period between etcdv3 compaction requests. Set to 0 to disable. [Default: 10m]"
          },
          "healthChecks": {
            "description": "HealthChecks enables or disables support for health checks [Default: Enabled]",
            "type": "string"
          },
          "logSeverityScreen": {
            "description": "LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: Info]",
            "type": "string"
          }
        },
        "required": [
          "controllers"
        ],
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.KubeControllersConfigurationStatus": {
        "description": "KubeControllersConfigurationStatus represents the status of the configuration. It's useful for admins to be able to see the actual config that was applied, which can be modified by environment variables on the kube-controllers process.",
        "properties": {
          "environmentVars": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "EnvironmentVars contains the environment variables on the kube-controllers that influenced the RunningConfig.",
            "type": "object"
          },
          "runningConfig": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.KubeControllersConfigurationSpec",
            "description": "RunningConfig contains the effective config that is running in the kube-controllers pod, after merging the API resource with any environment variables."
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.LicenseKeySpec": {
        "description": "LicenseKeySpec contains the license key itself.",
        "properties": {
          "certificate": {
            "description": "Certificate is used to validate the token.",
            "type": "string"
          },
          "token": {
            "description": "Token is the JWT containing the license claims",
            "type": "string"
          }
        },
        "required": [
          "token"
        ],
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.LicenseKeyStatus": {
        "description": "LicenseKeyStatus contains the license key information.",
        "properties": {
          "expiry": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description": "Expiry is the expiry date of License"
          },
          "maxnodes": {
            "description": "Maximum Number of Allowed Nodes",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.ManagedClusterSpec": {
        "description": "ManagedClusterSpec contains the specification of a ManagedCluster resource.",
        "properties": {
          "installationManifest": {
            "description": "Field to store dynamically generated manifest for installing component into the actual application cluster corresponding to this Managed Cluster",
            "type": "string"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.ManagedClusterStatus": {
        "properties": {
          "conditions": {
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ManagedClusterStatusCondition"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.ManagedClusterStatusCondition": {
        "description": "Condition contains various status information",
        "properties": {
          "message": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "status",
          "type"
        ],
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.NamesAndLabelsMatch": {
        "description": "NamesAndLabelsMatch is used to specify resource matches using both label and name selection.",
        "properties": {
          "names": {
            "description": "Names is an optional field that specifies a set of resources by name.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "selector": {
            "description": "Selector is an optional field that selects a set of resources by label. If both Names and Selector are specified then they are AND'ed.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.NamespaceControllerConfig": {
        "description": "NamespaceControllerConfig configures the service account controller, which syncs Kubernetes service accounts to Calico profiles (only used for etcdv3 datastore).",
        "properties": {
          "reconcilerPeriod": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.NetworkPolicySpec": {
        "properties": {
          "egress": {
            "description": "The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.Rule"
            },
            "type": "array"
          },
          "ingress": {
            "description": "The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.Rule"
            },
            "type": "array"
          },
          "order": {
            "description": "Order is an optional field that specifies the order in which the policy is applied. Policies with higher \"order\" are applied after those with lower order within the same tier.  If the order is omitted, it may be considered to be \"infinite\" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy \"Name\" within the tier.",
            "format": "double",
            "type": "number"
          },
          "selector": {
            "description": "The selector is an expression used to pick pick out the endpoints that the policy should be applied to.\n\nSelector expressions follow this syntax:\n\n\tlabel == \"string_literal\"  -\u003e  comparison, e.g. my_label == \"foo bar\"\n\tlabel != \"string_literal\"   -\u003e  not equal; also matches if label is not present\n\tlabel in { \"a\", \"b\", \"c\", ... }  -\u003e  true if the value of label X is one of \"a\", \"b\", \"c\"\n\tlabel not in { \"a\", \"b\", \"c\", ... }  -\u003e  true if the value of label X is not one of \"a\", \"b\", \"c\"\n\thas(label_name)  -\u003e True if that label is present\n\t! expr -\u003e negation of expr\n\texpr \u0026\u0026 expr  -\u003e Short-circuit and\n\texpr || expr  -\u003e Short-circuit or\n\t( expr ) -\u003e parens for grouping\n\tall() or the empty selector -\u003e matches all endpoints.\n\nLabel names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters.\n\nExamples (with made-up labels):\n\n\ttype == \"webserver\" \u0026\u0026 deployment == \"prod\"\n\ttype in {\"frontend\", \"backend\"}\n\tdeployment != \"dev\"\n\t! has(label_name)",
            "type": "string"
          },
          "serviceAccountSelector": {
            "description": "ServiceAccountSelector is an optional field for an expression used to select a pod based on service accounts.",
            "type": "string"
          },
          "tier": {
            "description": "The name of the tier that this policy belongs to.  If this is omitted, the default tier (name is \"default\") is assumed.  The specified tier must exist in order to create security policies within the tier, the \"default\" tier is created automatically if it does not exist, this means for deployments requiring only a single Tier, the tier name may be omitted on all policy management requests.",
            "type": "string"
          },
          "types": {
            "description": "Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress are present in the policy.  The default is:\n\n- [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are\n  also no Ingress rules)\n\n- [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules\n\n- [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules.\n\nWhen the policy is read back again, Types will always be one of these values, never empty or nil.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.NetworkSetSpec": {
        "description": "NetworkSetSpec contains the specification for a NetworkSet resource.",
        "properties": {
          "nets": {
            "description": "The list of IP networks that belong to this set.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.NodeControllerConfig": {
        "description": "NodeControllerConfig configures the node controller, which automatically cleans up configuration for nodes that no longer exist. Optionally, it can create host endpoints for all Kubernetes nodes.",
        "properties": {
          "hostEndpoint": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.AutoHostEndpointConfig",
            "description": "HostEndpoint controls syncing nodes to host endpoints. Disabled by default, set to nil to disable."
          },
          "reconcilerPeriod": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]"
          },
          "syncLabels": {
            "description": "SyncLabels controls whether to copy Kubernetes node labels to Calico nodes. [Default: Enabled]",
            "type": "string"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.PacketCaptureSpec": {
        "description": "PacketCaptureSpec contains the values of the packet capture.",
        "properties": {
          "selector": {
            "description": "The selector is an expression used to pick out the endpoints that the policy should be applied to.  The selector will only match endpoints in the same namespace as the PacketCapture resource.\n\nSelector expressions follow this syntax:\n\n\tlabel == \"string_literal\"  -\u003e  comparison, e.g. my_label == \"foo bar\"\n\tlabel != \"string_literal\"   -\u003e  not equal; also matches if label is not present\n\tlabel in { \"a\", \"b\", \"c\", ... }  -\u003e  true if the value of label X is one of \"a\", \"b\", \"c\"\n\tlabel not in { \"a\", \"b\", \"c\", ... }  -\u003e  true if the value of label X is not one of \"a\", \"b\", \"c\"\n\thas(label_name)  -\u003e True if that label is present\n\t! expr -\u003e negation of expr\n\texpr \u0026\u0026 expr  -\u003e Short-circuit and\n\texpr || expr  -\u003e Short-circuit or\n\t( expr ) -\u003e parens for grouping\n\tall() or the empty selector -\u003e matches all endpoints.\n\nLabel names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters.\n\nExamples (with made-up labels):\n\n\ttype == \"webserver\" \u0026\u0026 deployment == \"prod\"\n\ttype in {\"frontend\", \"backend\"}\n\tdeployment != \"dev\"\n\t! has(label_name)",
            "type": "string"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.PolicyControllerConfig": {
        "description": "PolicyControllerConfig configures the network policy controller, which syncs Kubernetes policies to Calico policies (only used for etcdv3 datastore).",
        "properties": {
          "reconcilerPeriod": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.PrefixAdvertisement": {
        "description": "PrefixAdvertisement configures advertisement properties for the specified CIDR.",
        "properties": {
          "cidr": {
            "description": "CIDR for which properties should be advertised.",
            "type": "string"
          },
          "communities": {
            "description": "Communities can be list of either community names already defined in `Specs.Communities` or community value of format `aa:nn` or `aa:nn:mm`. For standard community use `aa:nn` format, where `aa` and `nn` are 16 bit number. For large community use `aa:nn:mm` format, where `aa`, `nn` and `mm` are 32 bit number. Where,`aa` is an AS Number, `nn` and `mm` are per-AS identifier.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.ProfileSpec": {
        "description": "ProfileSpec contains the specification for a security Profile resource.",
        "properties": {
          "egress": {
            "description": "The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.Rule"
            },
            "type": "array"
          },
          "egressGateway": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.EgressSpec",
            "description": "Egress control."
          },
          "ingress": {
            "description": "The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.Rule"
            },
            "type": "array"
          },
          "labelsToApply": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "An option set of labels to apply to each endpoint (in addition to their own labels) referencing this profile.  If labels configured on the endpoint have keys matching those labels inherited from the profile, the endpoint label values take precedence.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.ProtoPort": {
        "description": "ProtoPort is combination of protocol and port, both must be specified.",
        "properties": {
          "port": {
            "format": "int32",
            "type": "integer"
          },
          "protocol": {
            "type": "string"
          }
        },
        "required": [
          "protocol",
          "port"
        ],
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.Pull": {
        "properties": {
          "http": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.HTTPPull"
          },
          "period": {
            "type": "string"
          }
        },
        "required": [
          "http"
        ],
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.RemoteClusterConfigurationSpec": {
        "description": "RemoteClusterConfigurationSpec contains the values of describing the cluster.",
        "properties": {
          "clusterAccessSecret": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference",
            "description": "Specifies a Secret to read for the RemoteClusterconfiguration. If defined all datastore configuration in this struct will be cleared and overwritten with the appropriate fields in the Secret."
          },
          "datastoreType": {
            "description": "Indicates the datastore to use. If unspecified, defaults to etcdv3",
            "type": "string"
          },
          "etcdCACert": {
            "type": "string"
          },
          "etcdCACertFile": {
            "description": "Path to the etcd Certificate Authority file. Valid if DatastoreType is etcdv3.",
            "type": "string"
          },
          "etcdCert": {
            "type": "string"
          },
          "etcdCertFile": {
            "description": "Path to the etcd client certificate. Valid if DatastoreType is etcdv3.",
            "type": "string"
          },
          "etcdEndpoints": {
            "description": "A comma separated list of etcd endpoints. Valid if DatastoreType is etcdv3.  [Default: ]",
            "type": "string"
          },
          "etcdKey": {
            "description": "These config file parameters are to support inline certificates, keys and CA / Trusted certificate.",
            "type": "string"
          },
          "etcdKeyFile": {
            "description": "Path to the etcd key file. Valid if DatastoreType is etcdv3.",
            "type": "string"
          },
          "etcdPassword": {
            "description": "Password for the given user name. Valid if DatastoreType is etcdv3.",
            "type": "string"
          },
          "etcdUsername": {
            "description": "User name for RBAC. Valid if DatastoreType is etcdv3.",
            "type": "string"
          },
          "k8sAPIEndpoint": {
            "description": "Location of the Kubernetes API. Not required if using kubeconfig. Valid if DatastoreType is kubernetes.",
            "type": "string"
          },
          "k8sAPIToken": {
            "description": "Token to be used for accessing the Kubernetes API. Valid if DatastoreType is kubernetes.",
            "type": "string"
          },
          "k8sCAFile": {
            "description": "Location of a CA for accessing the Kubernetes API. Valid if DatastoreType is kubernetes.",
            "type": "string"
          },
          "k8sCertFile": {
            "description": "Location of a client certificate for accessing the Kubernetes API. Valid if DatastoreType is kubernetes.",
            "type": "string"
          },
          "k8sInsecureSkipTLSVerify": {
            "type": "boolean"
          },
          "k8sKeyFile": {
            "description": "Location of a client key for accessing the Kubernetes API. Valid if DatastoreType is kubernetes.",
            "type": "string"
          },
          "kubeconfig": {
            "description": "When using the Kubernetes datastore, the location of a kubeconfig file. Valid if DatastoreType is kubernetes.",
            "type": "string"
          },
          "kubeconfigInline": {
            "description": "This is an alternative to Kubeconfig and if specified overrides Kubeconfig. This contains the contents that would normally be in the file pointed at by Kubeconfig.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.ReportJob": {
        "description": "ReportJob contains",
        "properties": {
          "end": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description": "The end time of the report."
          },
          "job": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference",
            "description": "A reference to the report creation job if known."
          },
          "start": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description": "The start time of the report."
          }
        },
        "required": [
          "start",
          "end",
          "job"
        ],
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.ReportSpec": {
        "description": "ReportSpec contains the values of the GlobalReport.",
        "properties": {
          "cis": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.CISBenchmarkParams",
            "description": "This field contain all the parameters for configuring a CIS benchmark report."
          },
          "endpoints": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.EndpointsSelection",
            "description": "Endpoints is used to specify which endpoints are in-scope and stored in the generated report data. Only used if endpoints data and/or audit logs are gathered in the report. If omitted, treated as everything in-scope."
          },
          "jobNodeSelector": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The node selector used to specify which nodes the report job may be scheduled on.",
            "type": "object"
          },
          "reportType": {
            "description": "The name of the report type.",
            "type": "string"
          },
          "schedule": {
            "description": "The report schedule specified in cron format. This specifies both the start and end times of each report, where the end time of one report becomes the start time of the next report. Separate jobs are created to generate a report, and the job generates the report data from archived audit and traffic data. To ensure this data is actually archived, the jobs to generate each report starts at a configurable time *after* the end time of the report that is being generated. The default job start delay is 30m, but is configurable through the compliance-controller environments. The cron format has minute accuracy, but only up to two values may be configured for the minute column which means you may only have at most two reports for each hour period.",
            "type": "string"
          },
          "suspend": {
            "description": "This flag tells the controller to suspend subsequent jobs for generating reports, it does not apply to already started jobs. If jobs are resumed then the controller will start creating jobs for any reports that were missed while the job was suspended.",
            "type": "boolean"
          }
        },
        "required": [
          "reportType"
        ],
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.ReportStatus": {
        "description": "ReportStatus contains the status of the automated report generation.",
        "properties": {
          "activeReportJobs": {
            "description": "The set of active report jobs.",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ReportJob"
            },
            "type": "array"
          },
          "lastFailedReportJobs": {
            "description": "The configured report jobs that have failed.",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.CompletedReportJob"
            },
            "type": "array"
          },
          "lastScheduledReportJob": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ReportJob",
            "description": "The last scheduled report job."
          },
          "lastSuccessfulReportJobs": {
            "description": "The configured report jobs that have completed successfully.",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.CompletedReportJob"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.ReportTemplate": {
        "description": "ReportTemplate defines a template used to render a report into downloadable or UI compatible format.",
        "properties": {
          "description": {
            "description": "A user-facing description of the template.",
            "type": "string"
          },
          "name": {
            "description": "The name of this template. This should be unique across all template names within a ReportType. This will be used by the UI as the suffix of the downloadable file name.",
            "type": "string"
          },
          "template": {
            "description": "The base-64 encoded go template used to render the report data.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.ReportTypeSpec": {
        "description": "ReportTypeSpec contains the various templates, and configuration used to render a specific type of report.",
        "properties": {
          "auditEventsSelection": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.AuditEventsSelection",
            "description": "What audit log data should be included in the report. If not specified, the report will contain no audit log data. The selection may be further filtered by the Report."
          },
          "downloadTemplates": {
            "description": "The set of templates used to render the report for downloads.",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ReportTemplate"
            },
            "type": "array"
          },
          "includeCISBenchmarkData": {
            "description": "Whether to include the full cis benchmark test results in the report.",
            "type": "boolean"
          },
          "includeEndpointData": {
            "description": "Whether to include endpoint data in the report. The actual endpoints included may be filtered by the Report, but will otherwise contain the full set of endpoints.",
            "type": "boolean"
          },
          "includeEndpointFlowLogData": {
            "description": "Whether to include endpoint-to-endpoint flow log data in the report.",
            "type": "boolean"
          },
          "uiSummaryTemplate": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ReportTemplate",
            "description": "The summary template, explicitly used by the UI to render a summary version of the report. This should render to json containing a sets of widgets that the UI can use to render the summary. The rendered data is returned on the list query of the reports."
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.RouteTableRange": {
        "properties": {
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "min": {
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "min",
          "max"
        ],
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.Rule": {
        "description": "A Rule encapsulates a set of match criteria and an action.  Both selector-based security Policy and security Profiles reference rules - separated out as a list of rules for both ingress and egress packet matching.\n\nEach positive match criteria has a negated version, prefixed with ”Not”. All the match criteria within a rule must be satisfied for a packet to match. A single rule can contain the positive and negative version of a match and both must be satisfied for the rule to match.",
        "properties": {
          "action": {
            "type": "string"
          },
          "destination": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.EntityRule",
            "description": "Destination contains the match criteria that apply to destination entity."
          },
          "http": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.HTTPMatch",
            "description": "HTTP contains match criteria that apply to HTTP requests."
          },
          "icmp": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ICMPFields",
            "description": "ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \"ICMP\" or \"ICMPv6\"."
          },
          "ipVersion": {
            "description": "IPVersion is an optional field that restricts the rule to only match a specific IP version.",
            "format": "int32",
            "type": "integer"
          },
          "metadata": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.RuleMetadata",
            "description": "Metadata contains additional information for this rule"
          },
          "notICMP": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ICMPFields",
            "description": "NotICMP is the negated version of the ICMP field."
          },
          "notProtocol": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.numorstring.Protocol",
            "description": "NotProtocol is the negated version of the Protocol field."
          },
          "protocol": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.numorstring.Protocol",
            "description": "Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols).\n\nMust be one of these string values: \"TCP\", \"UDP\", \"ICMP\", \"ICMPv6\", \"SCTP\", \"UDPLite\" or an integer in the range 1-255."
          },
          "source": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.EntityRule",
            "description": "Source contains the match criteria that apply to source entity."
          }
        },
        "required": [
          "action"
        ],
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.RuleMetadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Annotations is a set of key value pairs that give extra information about the rule",
            "type": "object"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.ServiceAccountControllerConfig": {
        "description": "ServiceAccountControllerConfig configures the service account controller, which syncs Kubernetes service accounts to Calico profiles (only used for etcdv3 datastore).",
        "properties": {
          "reconcilerPeriod": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.ServiceAccountMatch": {
        "properties": {
          "names": {
            "description": "Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "selector": {
            "description": "Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.ServiceClusterIPBlock": {
        "description": "ServiceClusterIPBlock represents a single allowed ClusterIP CIDR block.",
        "properties": {
          "cidr": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.ServiceExternalIPBlock": {
        "description": "ServiceExternalIPBlock represents a single allowed External IP CIDR block.",
        "properties": {
          "cidr": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.StagedGlobalNetworkPolicySpec": {
        "properties": {
          "applyOnForward": {
            "description": "ApplyOnForward indicates to apply the rules in this policy on forward traffic.",
            "type": "boolean"
          },
          "doNotTrack": {
            "description": "DoNotTrack indicates whether packets matched by the rules in this policy should go through the data plane's connection tracking, such as Linux conntrack.  If True, the rules in this policy are applied before any data plane connection tracking, and packets allowed by this policy are marked as not to be tracked.",
            "type": "boolean"
          },
          "egress": {
            "description": "The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.Rule"
            },
            "type": "array"
          },
          "ingress": {
            "description": "The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.Rule"
            },
            "type": "array"
          },
          "namespaceSelector": {
            "description": "NamespaceSelector is an optional field for an expression used to select a pod based on namespaces.",
            "type": "string"
          },
          "order": {
            "description": "Order is an optional field that specifies the order in which the policy is applied. Policies with higher \"order\" are applied after those with lower order within the same tier.  If the order is omitted, it may be considered to be \"infinite\" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy \"Name\" within the tier.",
            "format": "double",
            "type": "number"
          },
          "preDNAT": {
            "description": "PreDNAT indicates to apply the rules in this policy before any DNAT.",
            "type": "boolean"
          },
          "selector": {
            "description": "The selector is an expression used to pick pick out the endpoints that the policy should be applied to.\n\nSelector expressions follow this syntax:\n\n\tlabel == \"string_literal\"  -\u003e  comparison, e.g. my_label == \"foo bar\"\n\tlabel != \"string_literal\"   -\u003e  not equal; also matches if label is not present\n\tlabel in { \"a\", \"b\", \"c\", ... }  -\u003e  true if the value of label X is one of \"a\", \"b\", \"c\"\n\tlabel not in { \"a\", \"b\", \"c\", ... }  -\u003e  true if the value of label X is not one of \"a\", \"b\", \"c\"\n\thas(label_name)  -\u003e True if that label is present\n\t! expr -\u003e negation of expr\n\texpr \u0026\u0026 expr  -\u003e Short-circuit and\n\texpr || expr  -\u003e Short-circuit or\n\t( expr ) -\u003e parens for grouping\n\tall() or the empty selector -\u003e matches all endpoints.\n\nLabel names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters.\n\nExamples (with made-up labels):\n\n\ttype == \"webserver\" \u0026\u0026 deployment == \"prod\"\n\ttype in {\"frontend\", \"backend\"}\n\tdeployment != \"dev\"\n\t! has(label_name)",
            "type": "string"
          },
          "serviceAccountSelector": {
            "description": "ServiceAccountSelector is an optional field for an expression used to select a pod based on service accounts.",
            "type": "string"
          },
          "stagedAction": {
            "description": "The staged action. If this is omitted, the default is Set.",
            "type": "string"
          },
          "tier": {
            "description": "The name of the tier that this policy belongs to.  If this is omitted, the default tier (name is \"default\") is assumed.  The specified tier must exist in order to create security policies within the tier, the \"default\" tier is created automatically if it does not exist, this means for deployments requiring only a single Tier, the tier name may be omitted on all policy management requests.",
            "type": "string"
          },
          "types": {
            "description": "Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress rules are present in the policy.  The default is:\n\n- [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are\n  also no Ingress rules)\n\n- [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules\n\n- [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules.\n\nWhen the policy is read back again, Types will always be one of these values, never empty or nil.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.StagedKubernetesNetworkPolicySpec": {
        "properties": {
          "egress": {
            "description": "List of egress rules to be applied to the selected pods. Outgoing traffic is allowed if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic matches at least one egress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy limits all outgoing traffic (and serves solely to ensure that the pods it selects are isolated by default). This field is beta-level in 1.8",
            "items": {
              "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyEgressRule"
            },
            "type": "array"
          },
          "ingress": {
            "description": "List of ingress rules to be applied to the selected pods. Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic source is the pod's local node, OR if the traffic matches at least one ingress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy does not allow any traffic (and serves solely to ensure that the pods it selects are isolated by default)",
            "items": {
              "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyIngressRule"
            },
            "type": "array"
          },
          "podSelector": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
            "description": "Selects the pods to which this NetworkPolicy object applies. The array of ingress rules is applied to any pods selected by this field. Multiple network policies can select the same set of pods. In this case, the ingress rules for each are combined additively. This field is NOT optional and follows standard label selector semantics. An empty podSelector matches all pods in this namespace."
          },
          "policyTypes": {
            "description": "List of rule types that the NetworkPolicy relates to. Valid options are Ingress, Egress, or Ingress,Egress. If this field is not specified, it will default based on the existence of Ingress or Egress rules; policies that contain an Egress section are assumed to affect Egress, and all policies (whether or not they contain an Ingress section) are assumed to affect Ingress. If you want to write an egress-only policy, you must explicitly specify policyTypes [ \"Egress\" ]. Likewise, if you want to write a policy that specifies that no egress is allowed, you must specify a policyTypes value that include \"Egress\" (since such a policy would not include an Egress section and would otherwise default to just [ \"Ingress\" ]). This field is beta-level in 1.8",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "stagedAction": {
            "description": "The staged action. If this is omitted, the default is Set.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.StagedNetworkPolicySpec": {
        "properties": {
          "egress": {
            "description": "The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.Rule"
            },
            "type": "array"
          },
          "ingress": {
            "description": "The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.",
            "items": {
              "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.Rule"
            },
            "type": "array"
          },
          "order": {
            "description": "Order is an optional field that specifies the order in which the policy is applied. Policies with higher \"order\" are applied after those with lower order within the same tier.  If the order is omitted, it may be considered to be \"infinite\" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy \"Name\" within the tier.",
            "format": "double",
            "type": "number"
          },
          "selector": {
            "description": "The selector is an expression used to pick pick out the endpoints that the policy should be applied to.\n\nSelector expressions follow this syntax:\n\n\tlabel == \"string_literal\"  -\u003e  comparison, e.g. my_label == \"foo bar\"\n\tlabel != \"string_literal\"   -\u003e  not equal; also matches if label is not present\n\tlabel in { \"a\", \"b\", \"c\", ... }  -\u003e  true if the value of label X is one of \"a\", \"b\", \"c\"\n\tlabel not in { \"a\", \"b\", \"c\", ... }  -\u003e  true if the value of label X is not one of \"a\", \"b\", \"c\"\n\thas(label_name)  -\u003e True if that label is present\n\t! expr -\u003e negation of expr\n\texpr \u0026\u0026 expr  -\u003e Short-circuit and\n\texpr || expr  -\u003e Short-circuit or\n\t( expr ) -\u003e parens for grouping\n\tall() or the empty selector -\u003e matches all endpoints.\n\nLabel names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters.\n\nExamples (with made-up labels):\n\n\ttype == \"webserver\" \u0026\u0026 deployment == \"prod\"\n\ttype in {\"frontend\", \"backend\"}\n\tdeployment != \"dev\"\n\t! has(label_name)",
            "type": "string"
          },
          "serviceAccountSelector": {
            "description": "ServiceAccountSelector is an optional field for an expression used to select a pod based on service accounts.",
            "type": "string"
          },
          "stagedAction": {
            "description": "The staged action. If this is omitted, the default is Set.",
            "type": "string"
          },
          "tier": {
            "description": "The name of the tier that this policy belongs to.  If this is omitted, the default tier (name is \"default\") is assumed.  The specified tier must exist in order to create security policies within the tier, the \"default\" tier is created automatically if it does not exist, this means for deployments requiring only a single Tier, the tier name may be omitted on all policy management requests.",
            "type": "string"
          },
          "types": {
            "description": "Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress are present in the policy.  The default is:\n\n- [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are\n  also no Ingress rules)\n\n- [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules\n\n- [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules.\n\nWhen the policy is read back again, Types will always be one of these values, never empty or nil.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.ThreatFeedFormat": {
        "properties": {
          "csv": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ThreatFeedFormatCSV"
          },
          "json": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ThreatFeedFormatJSON"
          },
          "newlineDelimited": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ThreatFeedFormatNewlineDelimited"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.ThreatFeedFormatCSV": {
        "properties": {
          "columnDelimiter": {
            "type": "string"
          },
          "commentDelimiter": {
            "type": "string"
          },
          "disableRecordSizeValidation": {
            "type": "boolean"
          },
          "fieldName": {
            "type": "string"
          },
          "fieldNum": {
            "format": "int32",
            "type": "integer"
          },
          "header": {
            "type": "boolean"
          },
          "recordSize": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.ThreatFeedFormatJSON": {
        "properties": {
          "path": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.ThreatFeedFormatNewlineDelimited": {
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.TierSpec": {
        "description": "TierSpec contains the specification for a security policy tier resource.",
        "properties": {
          "order": {
            "description": "Order is an optional field that specifies the order in which the tier is applied. Tiers with higher \"order\" are applied after those with lower order.  If the order is omitted, it may be considered to be \"infinite\" - i.e. the tier will be applied last.  Tiers with identical order will be applied in alphanumerical order based on the Tier \"Name\".",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.apis.v3.WorkloadEndpointControllerConfig": {
        "description": "WorkloadEndpointControllerConfig configures the workload endpoint controller, which syncs Kubernetes labels to Calico workload endpoints (only used for etcdv3 datastore).",
        "properties": {
          "reconcilerPeriod": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration",
            "description": "ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]"
          }
        },
        "type": "object"
      },
      "com.github.projectcalico.libcalico-go.lib.numorstring.Port": {
        "format": "int-or-string",
        "type": "string"
      },
      "com.github.projectcalico.libcalico-go.lib.numorstring.Protocol": {
        "format": "int-or-string",
        "type": "string"
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.AuthenticationReview": {
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "status": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.AuthenticationReviewStatus"
          }
        },
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "AuthenticationReview",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.AuthorizationReview": {
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.AuthorizationReviewSpec"
          },
          "status": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.AuthorizationReviewStatus"
          }
        },
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "AuthorizationReview",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.BGPConfiguration": {
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.BGPConfigurationSpec"
          }
        },
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "BGPConfiguration",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.BGPConfigurationList": {
        "description": "BGPConfigurationList is a list of BGPConfiguration resources.",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.BGPConfiguration"
            },
            "type": "array"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "BGPConfigurationList",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.BGPPeer": {
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.BGPPeerSpec"
          }
        },
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "BGPPeer",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.BGPPeerList": {
        "description": "BGPPeerList is a list of BGPPeer resources.",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.BGPPeer"
            },
            "type": "array"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "BGPPeerList",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ClusterInformation": {
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ClusterInformationSpec"
          }
        },
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "ClusterInformation",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ClusterInformationList": {
        "description": "ClusterInformationList is a list of ClusterInformation objects.",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ClusterInformation"
            },
            "type": "array"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "ClusterInformationList",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.FelixConfiguration": {
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.FelixConfigurationSpec"
          }
        },
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "FelixConfiguration",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.FelixConfigurationList": {
        "description": "FelixConfigurationList contains a list of FelixConfiguration object.",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.FelixConfiguration"
            },
            "type": "array"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "FelixConfigurationList",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlert": {
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.GlobalAlertSpec"
          },
          "status": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.GlobalAlertStatus"
          }
        },
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "GlobalAlert",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlertList": {
        "description": "GlobalAlertList is a list of GlobalAlert objects.",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlert"
            },
            "type": "array"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "GlobalAlertList",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlertTemplate": {
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.GlobalAlertSpec"
          }
        },
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "GlobalAlertTemplate",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlertTemplateList": {
        "description": "GlobalAlertTemplateList is a list of GlobalAlertTemplate objects.",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalAlertTemplate"
            },
            "type": "array"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "GlobalAlertTemplateList",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalNetworkPolicy": {
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.GlobalNetworkPolicySpec"
          }
        },
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "GlobalNetworkPolicy",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalNetworkPolicyList": {
        "description": "GlobalNetworkPolicyList is a list of Policy objects.",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalNetworkPolicy"
            },
            "type": "array"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "GlobalNetworkPolicyList",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalNetworkSet": {
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.GlobalNetworkSetSpec"
          }
        },
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "GlobalNetworkSet",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalNetworkSetList": {
        "description": "GlobalNetworkSetList is a list of NetworkSet objects.",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalNetworkSet"
            },
            "type": "array"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "GlobalNetworkSetList",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReport": {
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ReportSpec"
          },
          "status": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ReportStatus"
          }
        },
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "GlobalReport",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReportList": {
        "description": "GlobalReportList is a list of GlobalReport objects.",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReport"
            },
            "type": "array"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "GlobalReportList",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReportType": {
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ReportTypeSpec"
          }
        },
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "GlobalReportType",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReportTypeList": {
        "description": "GlobalReportTypeList is a list of GlobalReportType objects.",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalReportType"
            },
            "type": "array"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "GlobalReportTypeList",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed": {
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.GlobalThreatFeedSpec"
          },
          "status": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.GlobalThreatFeedStatus"
          }
        },
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "GlobalThreatFeed",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalThreatFeedList": {
        "description": "GlobalThreatFeedList is a list of GlobalThreatFeed objects.",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.GlobalThreatFeed"
            },
            "type": "array"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "GlobalThreatFeedList",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.HostEndpoint": {
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.HostEndpointSpec"
          }
        },
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "HostEndpoint",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.HostEndpointList": {
        "description": "HostEndpointList is a list of HostEndpoint objects.",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.HostEndpoint"
            },
            "type": "array"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "HostEndpointList",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.IPPool": {
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.IPPoolSpec"
          }
        },
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "IPPool",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.IPPoolList": {
        "description": "IPPoolList contains a list of IPPool resources.",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.IPPool"
            },
            "type": "array"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "IPPoolList",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.KubeControllersConfiguration": {
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.KubeControllersConfigurationSpec"
          },
          "status": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.KubeControllersConfigurationStatus"
          }
        },
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "KubeControllersConfiguration",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.KubeControllersConfigurationList": {
        "description": "KubeControllersConfigurationList contains a list of KubeControllersConfiguration object.",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.KubeControllersConfiguration"
            },
            "type": "array"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "KubeControllersConfigurationList",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.LicenseKey": {
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.LicenseKeySpec"
          },
          "status": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.LicenseKeyStatus"
          }
        },
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "LicenseKey",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.LicenseKeyList": {
        "description": "LicenseKeyList  is a list of license objects.",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.LicenseKey"
            },
            "type": "array"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "LicenseKeyList",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ManagedCluster": {
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ManagedClusterSpec"
          },
          "status": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ManagedClusterStatus"
          }
        },
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "ManagedCluster",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ManagedClusterList": {
        "description": "ManagedClusterList is a list of ManagedCluster objects (used for multi-cluster management).",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ManagedCluster"
            },
            "type": "array"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "ManagedClusterList",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.NetworkPolicy": {
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.NetworkPolicySpec"
          }
        },
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "NetworkPolicy",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.NetworkPolicyList": {
        "description": "NetworkPolicyList is a list of Policy objects.",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.NetworkPolicy"
            },
            "type": "array"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "NetworkPolicyList",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.NetworkSet": {
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.NetworkSetSpec"
          }
        },
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "NetworkSet",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.NetworkSetList": {
        "description": "NetworkSetList is a list of NetworkSet objects.",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.NetworkSet"
            },
            "type": "array"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "NetworkSetList",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.PacketCapture": {
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.PacketCaptureSpec"
          }
        },
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "PacketCapture",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.PacketCaptureList": {
        "description": "PacketCaptureList is a list of PacketCapture objects.",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.PacketCapture"
            },
            "type": "array"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "PacketCaptureList",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.Profile": {
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.ProfileSpec"
          }
        },
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "Profile",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.ProfileList": {
        "description": "ProfileList is a list of Profile objects.",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.Profile"
            },
            "type": "array"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "ProfileList",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.RemoteClusterConfiguration": {
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.RemoteClusterConfigurationSpec"
          }
        },
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "RemoteClusterConfiguration",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.RemoteClusterConfigurationList": {
        "description": "RemoteClusterConfigurationList is a list of RemoteClusterConfiguration objects.",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.RemoteClusterConfiguration"
            },
            "type": "array"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "RemoteClusterConfigurationList",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedGlobalNetworkPolicy": {
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.StagedGlobalNetworkPolicySpec"
          }
        },
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "StagedGlobalNetworkPolicy",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedGlobalNetworkPolicyList": {
        "description": "StagedGlobalNetworkPolicyList is a list of Policy objects.",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedGlobalNetworkPolicy"
            },
            "type": "array"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "StagedGlobalNetworkPolicyList",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedKubernetesNetworkPolicy": {
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.StagedKubernetesNetworkPolicySpec"
          }
        },
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "StagedKubernetesNetworkPolicy",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedKubernetesNetworkPolicyList": {
        "description": "StagedKubernetesNetworkPolicyList is a list of Policy objects.",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedKubernetesNetworkPolicy"
            },
            "type": "array"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "StagedKubernetesNetworkPolicyList",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedNetworkPolicy": {
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.StagedNetworkPolicySpec"
          }
        },
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "StagedNetworkPolicy",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedNetworkPolicyList": {
        "description": "StagedNetworkPolicyList is a list of Policy objects.",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.StagedNetworkPolicy"
            },
            "type": "array"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "StagedNetworkPolicyList",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.Tier": {
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec": {
            "$ref": "#/definitions/com.github.projectcalico.libcalico-go.lib.apis.v3.TierSpec"
          }
        },
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "Tier",
            "version": "v3"
          }
        ]
      },
      "com.github.tigera.apiserver.pkg.apis.projectcalico.v3.TierList": {
        "description": "TierList is a list of Tier objects.",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/definitions/com.github.tigera.apiserver.pkg.apis.projectcalico.v3.Tier"
            },
            "type": "array"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "projectcalico.org",
            "kind": "TierList",
            "version": "v3"
          }
        ]
      }
    }
  }
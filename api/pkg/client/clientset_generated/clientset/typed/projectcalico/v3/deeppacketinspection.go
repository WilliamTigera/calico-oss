// Copyright (c) 2025 Tigera, Inc. All rights reserved.

// Code generated by client-gen. DO NOT EDIT.

package v3

import (
	"context"

	v3 "github.com/tigera/api/pkg/apis/projectcalico/v3"
	scheme "github.com/tigera/api/pkg/client/clientset_generated/clientset/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// DeepPacketInspectionsGetter has a method to return a DeepPacketInspectionInterface.
// A group's client should implement this interface.
type DeepPacketInspectionsGetter interface {
	DeepPacketInspections(namespace string) DeepPacketInspectionInterface
}

// DeepPacketInspectionInterface has methods to work with DeepPacketInspection resources.
type DeepPacketInspectionInterface interface {
	Create(ctx context.Context, deepPacketInspection *v3.DeepPacketInspection, opts v1.CreateOptions) (*v3.DeepPacketInspection, error)
	Update(ctx context.Context, deepPacketInspection *v3.DeepPacketInspection, opts v1.UpdateOptions) (*v3.DeepPacketInspection, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, deepPacketInspection *v3.DeepPacketInspection, opts v1.UpdateOptions) (*v3.DeepPacketInspection, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v3.DeepPacketInspection, error)
	List(ctx context.Context, opts v1.ListOptions) (*v3.DeepPacketInspectionList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *v3.DeepPacketInspection, err error)
	DeepPacketInspectionExpansion
}

// deepPacketInspections implements DeepPacketInspectionInterface
type deepPacketInspections struct {
	*gentype.ClientWithList[*v3.DeepPacketInspection, *v3.DeepPacketInspectionList]
}

// newDeepPacketInspections returns a DeepPacketInspections
func newDeepPacketInspections(c *ProjectcalicoV3Client, namespace string) *deepPacketInspections {
	return &deepPacketInspections{
		gentype.NewClientWithList[*v3.DeepPacketInspection, *v3.DeepPacketInspectionList](
			"deeppacketinspections",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *v3.DeepPacketInspection { return &v3.DeepPacketInspection{} },
			func() *v3.DeepPacketInspectionList { return &v3.DeepPacketInspectionList{} }),
	}
}

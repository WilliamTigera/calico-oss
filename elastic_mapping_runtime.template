{
  "index_patterns": [
    "tigera_secure_ee_runtime*"
  ],
  "settings": {
    "number_of_shards": 1,
    "number_of_replicas": 0
  },
  "mappings": {
    "properties": {
      /* The number of individual events that were aggregated together to form this report. */
      "count": {
        "type": "integer"
      },
      /* The type of event being reported; one of: "ProcessStart", "FileAccess". */
      "type": {
        "type": "keyword"
      },
      /* The time of the earliest individual event that was aggregated into this report. */
      "start_time": {
        "type": "date"
      },
      /* The time of the last individual event that was aggregated into this report. */
      "end_time": {
        "type": "date"
      },
      /* A free-form description of any issues with the preparation or completeness of this report,
       * or an empty string if there were no such issues.  For example, if there was a problem with
       * the process of inferring a host path from the in-container path, this would include a note
       * like "Host path could not be provided". */
      "notes": {
        "type": "keyword"
      },
      /* Human-friendly string characterizing the process invocation; typically a space-separated
       * concatenation of the executable name and args.  Please note this isn't intended to be
       * rigorous and unambiguous (e.g. when an arg itself contains spaces), but just to give a
       * useful hint, in most cases, of the process invocation. */
      "invocation": {
        "type": "keyword"
      },
      /* Container ID, if this event comes from a container; empty if not.  This is a string that
       * depends on the container runtime in use.  For example, with Docker it is like
       * “docker://12345abcc”. */
      "container_id": {
        "type": "keyword"
      },
      /* Pod info, if the process ID can be correlated to a Kubernetes pod... */
      "pod": {
        "properties": {
	  /* Pod namespace. */
          "namespace": {
            "type": "keyword"
          },
	  /* Pod name. */
          "name": {
            "type": "keyword"
          },
	  /* Pod prefix aka GenerateName. */
          "prefix": {
            "type": "keyword"
          },
	  /* The relevant container name, for the Linux process that generated this report, from the
	   * pod's PodSpec. */
          "container_name": {
            "type": "keyword"
          }
        }
      },
      /* For events involving a file, information about that file... */
      "file": {
        "properties": {
	  /* The file’s path in the mount namespace of the process that originated this event. */
          "path": {
            "type": "keyword"
          },
	  /* If the file is mapped into the host’s filesystem, the path of the file in the host
	   * filesystem.  Otherwise empty. */
          "host_path": {
            "type": "keyword"
          }
        }
      },
      /* Additional details when type is “ProcessStart”... */
      "process_start": {
        "properties": {
	  /* Args that process was invoked with. (list of strings) */
          "args": {
            "type": "keyword"
          },
	  /* Hashes of the process executable... */
          "hashes": {
            "properties": {
              "md5": {
                "type": "keyword"
              },
              "sha1": {
                "type": "keyword"
              },
              "sha256": {
                "type": "keyword"
              }
            }
          }
        }
      },
      /* Additional details when type is “FileOpen”... */
      "file_open": {
        "properties": {
	  /* File is being opened for reading. */
          "for_read": {
            "type": "boolean"
          },
	  /* File is being opened for writing. */
          "for_write": {
            "type": "boolean"
          },
	  /* May create a new file, if it doesn't already exist. */
          "may_create": {
            "type": "boolean"
          },
	  /* Full Linux bit flags value: O_APPEND, O_ASYNC etc. */
          "full_flags": {
            "type": "integer"
          },
	  /* File mode, as in chmod, if a new file is created. */
          "create_mode": {
            "type": "integer"
          }
        }
      }
    }
  }
}

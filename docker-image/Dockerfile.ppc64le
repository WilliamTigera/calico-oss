FROM alpine:3.7 as qemu

ARG QEMU_VERSION=2.9.1-1
ARG CROSS_ARCHS="aarch64 ppc64le"

RUN apk --update add curl

# Enable non-native runs on amd64 architecture hosts
RUN for i in ${CROSS_ARCHS}; do curl -L https://github.com/multiarch/qemu-user-static/releases/download/v${QEMU_VERSION}/qemu-${i}-static.tar.gz | tar zxvf - -C /usr/bin; done
RUN chmod +x /usr/bin/qemu-*

FROM ppc64le/alpine:3.6 as base
MAINTAINER Shaun Crampton <shaun@tigera.io>

# Enable non-native builds of this image on an amd64 hosts.
# This must be the first RUN command in this file!
# we only need this for the intermediate "base" image, so we can run all the apk and other commands
COPY --from=qemu /usr/bin/qemu-*-static /usr/bin/

RUN apk --no-cache add --update tini
# Install Felix's dependencies.
RUN apk --no-cache add ip6tables ipset iputils iproute2 conntrack-tools file

ADD felix.cfg /etc/calico/felix.cfg
ADD calico-felix-wrapper usr/bin

# Put out binary in /code rather than directly in /usr/bin.  This allows the downstream builds
# to more easily extract the Felix build artefacts from the container.
RUN mkdir /code
ADD bin/calico-felix-ppc64le /code/calico-felix
RUN ln -s /code/calico-felix /usr/bin

# final image just copies everything over
# do NOT do any RUN commands in the final image
FROM scratch

COPY --from=base / /

WORKDIR /code

# Since our binary isn't designed to run as PID 1, run it via the tini init daemon.
ENTRYPOINT ["/sbin/tini", "--"]


# Run felix by default
CMD ["calico-felix-wrapper"]

global:
  evaluation_interval: 30s
  scrape_timeout: 60s

rule_files:
  - /etc/prometheus/rules/prometheus-k8s-rulefiles-0/*.yaml

scrape_configs:
- job_name: kubelets
  scrape_interval: 20s
  scheme: https
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    # Skip verification until we have resolved why the certificate validation
    # for the kubelet on API server nodes fail.
    insecure_skip_verify: true
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

  kubernetes_sd_configs:
  - role: node

  relabel_configs:
  - action: labelmap
    regex: __meta_kubernetes_node_label_(.+)
  - target_label: __address__
    replacement: kubernetes.default.svc.cluster.local:443
  - target_label: __scheme__
    replacement: https
  - source_labels: [__meta_kubernetes_node_name]
    regex: (.+)
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}/proxy/metrics
  - action: labelkeep
    regex: "__.*|job|instance"

  # Drop metrics that we don't care about here - keep what we store
  # to a minimum in order to prevent runaway memory usage.
  metric_relabel_configs:
  - action: drop
    source_labels: ["__name__"]
    regex: kubelet_containers.*
  - action: drop
    source_labels: ["__name__"]
    regex: kubelet_docker.*
  - action: drop
    source_labels: ["__name__"]
    regex: kubelet_pleg.*
  - action: drop
    source_labels: ["__name__"]
    regex: kubelet_pod_worker.*
  - action: drop
    source_labels: ["__name__"]
    regex: kubelet_runtime.*
  - action: drop
    source_labels: ["__name__"]
    regex: kubelet_cgroup_manager.*
  - action: drop
    source_labels: ["__name__"]
    regex: etcd_.*
  - action: drop
    source_labels: ["__name__"]
    regex: get_token.*
  - action: drop
    source_labels: ["__name__"]
    regex: http_request.*

### pulled from https://raw.githubusercontent.com/prometheus/prometheus/master/documentation/examples/prometheus-kubernetes.yml
# Scrape config for Kubelet cAdvisor.
#
# This is required for Kubernetes 1.7.3 and later, where cAdvisor metrics
# (those whose names begin with 'container_') have been removed from the
# Kubelet metrics endpoint.  This job scrapes the cAdvisor endpoint to
# retrieve those metrics.
#
# In Kubernetes 1.7.0-1.7.2, these metrics are only exposed on the cAdvisor
# HTTP endpoint; use "replacement: /api/v1/nodes/${1}:4194/proxy/metrics"
# in that case (and ensure cAdvisor's HTTP server hasn't been disabled with
# the --cadvisor-port=0 Kubelet flag).
#
# This job is not necessary and should be removed in Kubernetes 1.6 and
# earlier versions, or it will cause the metrics to be scraped twice.
- job_name: 'kubernetes-cadvisor'
  scrape_interval: 20s
  scheme: https

  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

  kubernetes_sd_configs:
  - role: node

  relabel_configs:
  - action: labelmap
    regex: __meta_kubernetes_node_label_(.+)
  - target_label: __address__
    replacement: kubernetes.default.svc:443
  - source_labels: [__meta_kubernetes_node_name]
    regex: (.+)
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
  - action: labelkeep
    regex: "__.*|job|instance"

  # Drop metrics that we don't care about here - keep what we store
  # to a minimum in order to prevent runaway memory usage.
  metric_relabel_configs:
  # Drop CPU metrics apart from container_cpu_usage
  - action: drop
    source_labels: ["__name__"]
    regex: container_cpu_(?:cfs|load|system|user).*
  # Drop memory metrics apart from RSS
  - action: drop
    source_labels: ["__name__"]
    regex: container_memory_[^r][^s][^s].*
  # Drop all the other metrics groups.
  - action: drop
    source_labels: ["__name__"]
    regex: container_(?:spec|fs|network|scrape|tasks).*
  # Drop non-pod stats.
  - action: drop
    source_labels: ["__name__", "pod"]
    regex: "container_(?:cpu|memory).*;"
  # Drop k8s' boring POD containers, which only contain a pause process.
  - action: drop
    source_labels: ["container"]
    regex: "POD"

  # Sampling: hash the labels.
  - action: hashmod
    source_labels: ["__name__", "name"]
    target_label: __tmp_bucket
    modulus: 8
  # Then drop most of the client/server samples.
  - action: drop
    source_labels: ["__tmp_bucket", "pod"]
    regex: "[1-7];(?:client|server).*"
  # Throw away unused labels.
  - action: labeldrop
    regex: "__tmp.*|image"

# Scrapes the endpoint lists for the Kubernetes API server, kube-state-metrics,
# and node-exporter, which we all consider part of a default setup.
- job_name: standard-endpoints
  scrape_interval: 20s
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    # As for kubelets, certificate validation fails for the API server (node)
    # and we circumvent it for now.
    insecure_skip_verify: true
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

  kubernetes_sd_configs:
  - role: endpoints

  relabel_configs:
  - action: keep
    source_labels: [__meta_kubernetes_service_name]
    regex: kubernetes|node-exporter|kube-state-metrics|etcd-k8s
  - action: replace
    source_labels: [__meta_kubernetes_service_name]
    target_label: job
  - action: replace
    source_labels: [__meta_kubernetes_service_name]
    regex: kubernetes
    target_label: __scheme__
    replacement: https

  # Drop metrics that we don't care about here - keep what we store
  # to a minimum in order to prevent runaway memory usage.
  metric_relabel_configs:
  - action: keep
    source_labels: ["__name__"]
    regex: (?:node_(?:cpu|memory_MemTotal|memory_MemFree|memory_Buffers|memory_Cached|memory_MemTotal))|(?:kube_(?:deployment|node).*)|(?:apiserver_.*)

# Scrapes the endpoint lists for the kube-dns server. Which we consider
# part of a default setup.
- job_name: kube-components
  scrape_interval: 20s
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

  kubernetes_sd_configs:
  - role: endpoints

  relabel_configs:
  - action: replace
    source_labels: [__meta_kubernetes_service_name]
    target_label: job
    regex: "kube-(.*)-prometheus-discovery"
    replacement: "kube-${1}"
  - action: keep
    source_labels: [__meta_kubernetes_service_name]
    regex: "kube-(.*)-prometheus-discovery"
  - action: keep
    source_labels: [__meta_kubernetes_endpoint_port_name]
    regex: "prometheus"

  # Drop metrics that we don't care about here - keep what we store
  # to a minimum in order to prevent runaway memory usage.
  metric_relabel_configs:
  - action: drop
    source_labels: ["__name__"]
    regex: grpc_.*

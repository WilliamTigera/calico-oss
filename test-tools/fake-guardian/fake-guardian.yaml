### manual commands:
# k create ns fake-guardian
# k -n tigera-guardian get secrets tigera-pull-secret -o json | jq -c 'del(.metadata)|.metadata.name="tigera-pull-secret"|.metadata.namespace="fake-guardian"' | kaf -
# k -n tigera-guardian get cm tigera-ca-bundle -o json | jq -c 'del(.metadata)|.metadata.name="tigera-ca-bundle"|.metadata.namespace="fake-guardian"' | kaf -
#

kind: ServiceAccount
apiVersion: v1
metadata:
  name: fake-guardian
  namespace: fake-guardian
---
kind: Secret
apiVersion: v1
type: kubernetes.io/service-account-token
metadata:
  name: fake-guardian-sa-token
  namespace: fake-guardian
  annotations:
    kubernetes.io/service-account.name: fake-guardian
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fake-guardian
  namespace: fake-guardian
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - get
- apiGroups:
  - ""
  resources:
  - users
  - groups
  - serviceaccounts
  verbs:
  - impersonate
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fake-guardian
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fake-guardian
subjects:
- kind: ServiceAccount
  name: fake-guardian
  namespace: fake-guardian
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: fake-guardian-ss
  namespace: fake-guardian
  labels:
    app.kubernetes.io/name: fake-guardian
    k8s-app: fake-guardian
spec:
  serviceName: fake-guardian
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: fake-guardian
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fake-guardian
        k8s-app: fake-guardian
    spec:
      containers:
      - name: fake-guardian
        env:
        - name: FAKE_GUARDIAN_STATEFUL_SET
          value: "true"
        - name: FAKE_GUARDIAN_FLOW_PUBLISH_BATCH_SIZE
          value: "100"
        - name: FAKE_GUARDIAN_FLOW_PUBLISH_INTERVAL
          value: "15s"
        - name: FAKE_GUARDIAN_PROXY_LISTEN_PORT
          value: "8080"
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: gcr.io/unique-caldron-775/cnx/tigera/fake-guardian:master
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 100m
            memory: 250Mi
        volumeMounts:
        - mountPath: /etc/pki/tls/certs
          name: tigera-ca-bundle
          readOnly: true
      serviceAccountName: fake-guardian
      volumes:
      - configMap:
          defaultMode: 420
          name: tigera-ca-bundle
        name: tigera-ca-bundle
      imagePullSecrets:
      - name: tigera-pull-secret

federation:
  enabled: false
network: calico

# Sets the ipam. Can be 'calico-ipam' or 'host-local'
ipam: calico-ipam

datastore: kdd
app_layer_policy:
  enabled: false
  configured: false

# Configuration for etcd
etcd:
  # Endpoints for the etcd instances. This can be a comma separated list of endpoints.
  endpoints: null
  # Authentication information for accessing secure etcd instances.
  tls:
    crt: null
    ca: null
    key: null

# Configuration for setting up Calico node
node:
  env:
    # Optional environment variables for configuring Calico node.
    # - name: FELIX_LOGSEVERITYSCREEN
    #   value: "debug"

# Configuration for setting up Calico CNI.
cni:
  env:
    # Optional environment variables for configuring Calico CNI.
    # - name: SLEEP
    #   value: "false"

# Configuration for setting up Flannel.
flannel:
  env:
    # Optional environment variables for configuring Flannel.
    # - name: FLANNELD_SUBNET_FILE
    #   value: "/run/flannel/subnet.env"

# Configuration for setting up Calico kube controllers
kubeControllers:
  env:
    # Optional environment variables for configuring Calico kube controllers.
    # - name: ENABLED_CONTROLLERS
    #   value: "policy,namespace,serviceaccount,workloadendpoint,node"

# Configuration for setting up Typha
typha:
  enabled: false
  env:
    # Optional environment variables for configuring Typha.
    # - name: TYPHA_PROMETHEUSMETRICSENABLED
    #   value: "true"

# Configuration for the Calico aggregated API server.
apiserver:
  # Authentication information for securing communications between TSEE manager and TSEE apiserver.
  # Leave blank to use self-signed certs.
  tls:
    crt: null
    key: null
  runAsPrivileged: false
  env:
    # Optional environment variables for configuring the Calico API Server.
    # - name: DATASTORE_TYPE
    #   value: "kubernetes"

# Configuration for the Calico query server.
queryserver:
  env:
    # Optional environment variables for configuring the Calico query server.
    # - name: TIGERA_POD_SECURITY_GROUP
    #   valueFrom:
    #     configMapKeyRef:
    #       name: tigera-aws-config
    #       key: pod_sg
    #       optional: true

# TODO: move to helpers
rbac: ""
platform: ""

# Optionally specify docker configuration to be used for imagePullSecrets. 
# Default to an empty list. 
#
# E.g. 
# imagePullSecrets:
#   <secret_name>: <.docker/config.json contents>
imagePullSecrets: {}

cloudControllers:
  enabled: false

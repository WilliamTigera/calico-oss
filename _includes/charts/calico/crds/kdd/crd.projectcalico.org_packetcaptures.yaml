
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  creationTimestamp: null
  name: packetcaptures.crd.projectcalico.org
spec:
  group: crd.projectcalico.org
  names:
    kind: PacketCapture
    listKind: PacketCaptureList
    plural: packetcaptures
    singular: packetcapture
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PacketCaptureSpec contains the values of the packet capture.
            properties:
              selector:
                description: "The selector is an expression used to pick out the endpoints
                  that the policy should be applied to.  The selector will only match
                  endpoints in the same namespace as the PacketCapture resource. \n
                  Selector expressions follow this syntax: \n \tlabel == \"string_literal\"
                  \ ->  comparison, e.g. my_label == \"foo bar\" \tlabel != \"string_literal\"
                  \  ->  not equal; also matches if label is not present \tlabel in
                  { \"a\", \"b\", \"c\", ... }  ->  true if the value of label X is
                  one of \"a\", \"b\", \"c\" \tlabel not in { \"a\", \"b\", \"c\",
                  ... }  ->  true if the value of label X is not one of \"a\", \"b\",
                  \"c\" \thas(label_name)  -> True if that label is present \t! expr
                  -> negation of expr \texpr && expr  -> Short-circuit and \texpr
                  || expr  -> Short-circuit or \t( expr ) -> parens for grouping \tall()
                  or the empty selector -> matches all endpoints. \n Label names are
                  allowed to contain alphanumerics, -, _ and /. String literals are
                  more permissive but they do not support escape characters. \n Examples
                  (with made-up labels): \n \ttype == \"webserver\" && deployment
                  == \"prod\" \ttype in {\"frontend\", \"backend\"} \tdeployment !=
                  \"dev\" \t! has(label_name)"
                type: string
            type: object
          status:
            description: PacketCaptureStatus describes the files that have been captured,
              for a given PacketCapture, on each node that generates packet capture
              files
            properties:
              files:
                items:
                  description: PacketCaptureFile describes files generated by a PacketCapture.
                    It describes the location of the packet capture files that is
                    identified via a node, its directory and the file names generated.
                  properties:
                    directory:
                      description: Directory represents the path inside the calico-node
                        container for the the generated files
                      type: string
                    fileNames:
                      description: 'FileNames represents the name of the generated
                        file for a PacketCapture ordered alphanumerically. The active
                        packet capture file will be identified using the following
                        schema: "{workload endpoint name}_{host network interface}.pcap"
                        . Rotated capture files name will contain an index matching
                        the rotation timestamp.'
                      items:
                        type: string
                      type: array
                    node:
                      description: Node identifies with a a physical node from the
                        cluster via its hostname
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

// Code generated by mockery v2.14.0. DO NOT EDIT.

package api

import mock "github.com/stretchr/testify/mock"

// MockStoreFactory is an autogenerated mock type for the StoreFactory type
type MockStoreFactory struct {
	mock.Mock
}

// NewStore provides a mock function with given fields: cluster
func (_m *MockStoreFactory) NewStore(cluster string) ComplianceStore {
	ret := _m.Called(cluster)

	var r0 ComplianceStore
	if rf, ok := ret.Get(0).(func(string) ComplianceStore); ok {
		r0 = rf(cluster)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ComplianceStore)
		}
	}

	return r0
}

type mockConstructorTestingTNewMockStoreFactory interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockStoreFactory creates a new instance of MockStoreFactory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockStoreFactory(t mockConstructorTestingTNewMockStoreFactory) *MockStoreFactory {
	mock := &MockStoreFactory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

ARG UBI_IMAGE

FROM ${UBI_IMAGE} AS ubi

ARG KUBECTL_VERSION
ARG KUBE_BENCH_VERSION

RUN microdnf upgrade && microdnf install tar gzip

# install kube-bench configs
# ref: https://github.com/aquasecurity/kube-bench/blob/main/docs/installation.md
RUN curl -sfL https://github.com/aquasecurity/kube-bench/archive/refs/tags/${KUBE_BENCH_VERSION}.tar.gz -o /tmp/kube-bench.tar.gz && \
	mkdir -p /tmp/kube-bench && tar -xf /tmp/kube-bench.tar.gz --strip-components 1 -C /tmp/kube-bench && \
	mkdir -p /etc/kube-bench && mv /tmp/kube-bench/cfg /etc/kube-bench/

# install kubectl
RUN curl -sfL https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /usr/bin/kubectl && \
	chmod 755 /usr/bin/kubectl


FROM scratch

ADD bin/benchmarker-amd64 /usr/bin/compliance-benchmarker
ADD bin/kube-bench-amd64 /usr/bin/kube-bench

COPY --from=ubi /etc/kube-bench /etc/kube-bench/
COPY --from=ubi /usr/bin/kubectl /usr/bin/kubectl

# Because we build our binary with CGO, we need to add the necessary *.so files for dynamic linking.
# If *.so files are missing, you will see an error saying that your entrypoint cannot be found.
# The necessary files can be found using the ldd command on the binary.
COPY --from=ubi /lib64/ld-linux-x86-64.so.2 /lib64/ld-linux-x86-64.so.2
COPY --from=ubi /lib64/libc.so.6 /lib64/libc.so.6
COPY --from=ubi /lib64/libpthread.so.0 /lib64/libpthread.so.0

ENTRYPOINT ["/usr/bin/compliance-benchmarker"]

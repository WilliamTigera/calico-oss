FROM registry.access.redhat.com/ubi8/ubi-minimal:latest as builder

################################################################################
# Build and patch elasticsearch from source
################################################################################
ENV ELASTIC_VERSION=7.17.9
ENV GRADLE_VERSION=7.5.1

RUN microdnf upgrade

RUN microdnf install -y \
    java-17-openjdk-devel \
    patch \
    tar \
    unzip

COPY patches/elastic-7.17.x-Update-dependencies-to-reduce-CVEs.patch /elastic-build/update-deps.patch

RUN curl -sfL https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip -o /tmp/gradle.zip && \
	unzip /tmp/gradle.zip -d /elastic-build

RUN curl -sfL https://github.com/elastic/elasticsearch/archive/refs/tags/v${ELASTIC_VERSION}.tar.gz -o /tmp/elasticsearch.tar.gz && \
	tar -xf /tmp/elasticsearch.tar.gz -C /elastic-build

WORKDIR /elastic-build/elasticsearch-${ELASTIC_VERSION}

RUN patch -p1 < /elastic-build/update-deps.patch

RUN JAVA_HOME=/usr/lib/jvm/java-17-openjdk \
    /elastic-build/gradle-${GRADLE_VERSION}/bin/gradle :distribution:archives:linux-tar:assemble \
    -Dbuild.snapshot=false \
    -Dlicense.key=x-pack/license-tools/src/test/resources/public.key


################################################################################
# Install and config the elasticsearch archive
#
# Recreating the elasticsearch container image by copying essential files from
# the official elasticsearch conainer image. Making a new stage from scratch
# removes unnecessary packages from elasticsearch base (ubunu) to reduce CVEs
# in the base fs. Certain Dockerfile instructions in the scratch stage
# are extracted from:
# https://github.com/elastic/dockerfiles/blob/vx.y.z/elasticsearch/Dockerfile.
# We need to review and update them when upgrading to a newer version of
# elasticsearch.
################################################################################
ENV TINI_VERSION=0.19.0

ENV OPENJDK_VERSION=11.0.18
ENV OPENJDK_PATCH=10

ENV BC_FIPS_VERSION=1.0.2.3
ENV BCTLS_FIPS_VERSION=1.0.11

RUN mkdir /usr/share/elasticsearch
WORKDIR /usr/share/elasticsearch

RUN tar -zxf /elastic-build/elasticsearch-${ELASTIC_VERSION}/distribution/archives/linux-tar/build/distributions/elasticsearch-${ELASTIC_VERSION}-linux-x86_64.tar.gz --strip-components=1 

RUN cp /elastic-build/elasticsearch-${ELASTIC_VERSION}/distribution/docker/src/docker/bin/docker-entrypoint.sh bin/

# `tini` is a tiny but valid init for containers. This is used to cleanly
# control how ES and any child processes are shut down.
RUN curl -sfL https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-amd64 -o /usr/bin/tini && \
    chmod 0755 /usr/bin/tini

# Add storage plugin
RUN bin/elasticsearch-plugin install --batch repository-gcs

# Downgrade JDK to 11 which is certified to work with Bouncy Castle FIPS provider
RUN rm -fr /usr/share/elasticsearch/jdk && \
    curl -sfL https://github.com/adoptium/temurin11-binaries/releases/download/jdk-${OPENJDK_VERSION}%2B${OPENJDK_PATCH}/OpenJDK11U-jdk_x64_linux_hotspot_${OPENJDK_VERSION}_${OPENJDK_PATCH}.tar.gz -o /tmp/jdk.tar.gz && \
    tar -xf /tmp/jdk.tar.gz -C /usr/share/elasticsearch && \
    mv /usr/share/elasticsearch/jdk-${OPENJDK_VERSION}+${OPENJDK_PATCH} /usr/share/elasticsearch/jdk && \
    rm -f /usr/share/elasticsearch/jdk/lib/src.zip

# Update JDK ca bundle
# ref: https://github.com/elastic/elasticsearch/blob/7.17/distribution/docker/src/docker/bin/docker-openjdk
RUN trust extract \
    --filter=ca-anchors \
    --format=java-cacerts \
    --overwrite \
    --purpose=server-auth \
    /usr/share/elasticsearch/jdk/lib/security/cacerts

# Install Bouncy Castle FIPS provider
# as of Aug 2022, bctls-fips version 1.0.12 and 1.0.13 will cause null pointer
# exceptions in org.bouncycastle.tls.TlsProtocol.getPeer(). DO NOT upgrade to
# newer versions unless the issue is resolved.
COPY patches/fips-jdk11-Patch-java-security-policy-to-support-Bouncy-Castle.patch /tmp/jvm-bc-fips.patch
RUN mkdir /usr/share/bc-fips && \
    curl -sfL https://downloads.bouncycastle.org/fips-java/bc-fips-${BC_FIPS_VERSION}.jar -o /usr/share/bc-fips/bc-fips.jar && \
    curl -sfL https://downloads.bouncycastle.org/fips-java/bctls-fips-${BCTLS_FIPS_VERSION}.jar -o /usr/share/bc-fips/bctls-fips.jar
RUN patch -d /usr/share/elasticsearch/jdk -p1 < /tmp/jvm-bc-fips.patch

# Patch elasticsearch script
COPY patches/fips-elastic-7.17.x-Remove-password-prompt-in-bin-elasticsearch-script.patch /tmp/es-remove-password-prompt.patch
RUN patch -d /usr/share/elasticsearch -p1 < /tmp/es-remove-password-prompt.patch

# Change /usr/share/elasticsearch folder ownership to elasticsearch user and group.
# Elastic gradle step installs bundle JDK into the /usr/share/elasticsearch/jdk folder.
# The folder permisison is 0750 and when we deploy this UBI based container to Openshift,
# which has SELinux enabled by default, elasticsearch user get permissions errors on
# accessing JDK files. This is not an issue on non-SELinux enabled hosts like Ubuntu.
# Changing the folder ownership works on both hosts.
RUN groupadd -g 1000 elasticsearch && \
    adduser --uid 1000 --gid 1000 --home /usr/share/elasticsearch elasticsearch && \
    chown -R 1000:1000 /usr/share/elasticsearch

# Cleanup /tmp for the next stage
RUN rm -fr /tmp/*


################################################################################
# Build the actual scratch-based elasticsearch image
################################################################################

FROM scratch
 
ENV ELASTIC_CONTAINER=true
ENV PATH=/usr/share/elasticsearch/bin:/usr/sbin:/usr/bin:/sbin:/bin

# elasticsearch jars and binaries
COPY --from=builder /usr/share/elasticsearch /usr/share/elasticsearch/
COPY --from=builder /usr/bin/tini /usr/bin/tini
COPY --from=builder /usr/share/bc-fips /usr/share/bc-fips/
# tigera custom elasticsearch readiness-probe
COPY bin/readiness-probe-amd64 /usr/bin/readiness-probe
# Copy initialize keystore script for Bouncy Castle FIPS provider
COPY script/initialize_keystore.sh /usr/bin/initialize_keystore.sh


# ca store and ssl certificates
COPY --from=builder /etc/pki/ca-trust /etc/pki/ca-trust/
COPY --from=builder /usr/share/pki/ca-trust-source /usr/share/pki/ca-trust-source/
COPY --from=builder /etc/ssl /etc/ssl/

# add /tmp
COPY --from=builder --chown=1000:0 /tmp /tmp/

# binary dependencies
COPY --from=builder /bin/bash /bin/bash
COPY --from=builder /bin/sh /bin/sh
COPY --from=builder /usr/bin/basename /usr/bin/basename
COPY --from=builder /usr/bin/bash /usr/bin/bash
COPY --from=builder /usr/bin/cat /usr/bin/cat
COPY --from=builder /usr/bin/chown /usr/bin/chown
COPY --from=builder /usr/bin/coreutils /usr/bin/coreutils
COPY --from=builder /usr/bin/cp /usr/bin/cp
COPY --from=builder /usr/bin/date /usr/bin/date
COPY --from=builder /usr/bin/dirname /usr/bin/dirname
COPY --from=builder /usr/bin/env /usr/bin/env
COPY --from=builder /usr/bin/grep /usr/bin/grep
COPY --from=builder /usr/bin/id /usr/bin/id
COPY --from=builder /usr/bin/ln /usr/bin/ln
COPY --from=builder /usr/bin/ls /usr/bin/ls
COPY --from=builder /usr/bin/mkdir /usr/bin/mkdir
COPY --from=builder /usr/bin/sh /usr/bin/sh
COPY --from=builder /usr/bin/sleep /usr/bin/sleep
COPY --from=builder /usr/bin/touch /usr/bin/touch
COPY --from=builder /usr/bin/uname /usr/bin/uname
COPY --from=builder /usr/bin/yes /usr/bin/yes
COPY --from=builder /usr/sbin/chroot /usr/sbin/chroot

COPY --from=builder /lib64/ld-linux-x86-64.so.2 /lib64/ld-linux-x86-64.so.2
COPY --from=builder /lib64/libacl.so.1 /lib64/libacl.so.1
COPY --from=builder /lib64/libattr.so.1 /lib64/libattr.so.1
COPY --from=builder /lib64/libc.so.6 /lib64/libc.so.6
COPY --from=builder /lib64/libcap.so.2 /lib64/libcap.so.2
COPY --from=builder /lib64/libdl.so.2 /lib64/libdl.so.2
COPY --from=builder /lib64/libpcre.so.1 /lib64/libpcre.so.1
COPY --from=builder /lib64/libpcre2-8.so.0 /lib64/libpcre2-8.so.0
COPY --from=builder /lib64/libpthread.so.0 /lib64/libpthread.so.0
COPY --from=builder /lib64/librt.so.1 /lib64/librt.so.1
COPY --from=builder /lib64/libselinux.so.1 /lib64/libselinux.so.1
COPY --from=builder /lib64/libtinfo.so.6 /lib64/libtinfo.so.6

# required by jvm
COPY --from=builder /lib64/libm.so.6 /lib64/libm.so.6
COPY --from=builder /lib64/libresolv.so.2 /lib64/libresolv.so.2
COPY --from=builder /lib64/libz.so.1 /lib64/libz.so.1

# libc/nss
COPY --from=builder /etc/group /etc/group
COPY --from=builder /etc/hosts /etc/hosts
COPY --from=builder /etc/networks /etc/networks
COPY --from=builder /etc/nsswitch.conf /etc/nsswitch.conf
COPY --from=builder /etc/passwd /etc/passwd
COPY --from=builder /etc/shadow /etc/shadow

COPY --from=builder /lib64/libnss_dns.so.2 /lib64/libnss_dns.so.2
COPY --from=builder /lib64/libnss_files.so.2 /lib64/libnss_files.so.2

WORKDIR /usr/share/elasticsearch

EXPOSE 9200 9300

ENTRYPOINT ["/usr/bin/tini", "--", "/usr/share/elasticsearch/bin/docker-entrypoint.sh"]

CMD ["eswrapper"]

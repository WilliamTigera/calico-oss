// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

// Copyright (c) 2021 Tigera, Inc. All rights reserved.

package timeshim

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// MockTimer is an autogenerated mock type for the Timer type
type MockTimer struct {
	mock.Mock
}

// Chan provides a mock function with given fields:
func (_m *MockTimer) Chan() <-chan time.Time {
	ret := _m.Called()

	var r0 <-chan time.Time
	if rf, ok := ret.Get(0).(func() <-chan time.Time); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan time.Time)
		}
	}

	return r0
}

// Reset provides a mock function with given fields: clean
func (_m *MockTimer) Reset(clean time.Duration) {
	_m.Called(clean)
}

// Stop provides a mock function with given fields:
func (_m *MockTimer) Stop() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

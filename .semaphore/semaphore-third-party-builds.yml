# !! WARNING, DO NOT EDIT !! This file is generated from semaphore.yml.d.
# To update, modify the template and then run 'make gen-semaphore-yaml'.
version: v1.0
name: Calico
execution_time_limit:
  hours: 8
agent:
  machine:
    type: f1-standard-2
    os_image: ubuntu2004
auto_cancel:
  running:
    when: "branch != 'master'"
  queued:
    when: "branch != 'master'"
global_job_config:
  secrets:
    - name: banzai-secrets
    - name: docker-hub
    - name: private-repo
  prologue:
    commands:
      # Correct permissions since they are too open by default:
      - chmod 0600 ~/.keys/*
      # Add the key to the ssh agent:
      - ssh-add ~/.keys/*
      - checkout
      - export REPO_DIR="$(pwd)"
      - mkdir artifacts
      # Semaphore is doing shallow clone on a commit without tags.
      # unshallow it for GIT_VERSION:=$(shell git describe --tags --dirty --always)
      - retry git fetch --unshallow
      # Semaphore mounts a copy-on-write FS as /var/lib/docker in order to provide a pre-loaded cache of
      # some images. However, the cache is not useful to us and the copy-on-write FS is a big problem given
      # how much we churn docker containers during the build.  Disable it.
      - sudo systemctl stop docker
      - sudo umount /var/lib/docker && sudo killall qemu-nbd || true
      - sudo systemctl start docker
      - echo $DOCKERHUB_PASSWORD | docker login --username "$DOCKERHUB_USERNAME" --password-stdin
      # Disable initramfs update to save space on the Semaphore VM (and we don't need it because we're not going to reboot).
      - sudo apt-get install -y -u crudini
      - sudo crudini --set /etc/initramfs-tools/update-initramfs.conf '' update_initramfs no
      - cat /etc/initramfs-tools/update-initramfs.conf
  epilogue:
    commands:
      - cd "$REPO_DIR"
      - .semaphore/publish-artifacts
blocks:
- name: Prerequisites
  dependencies: []
  task:
    jobs:
      - name: Pre-flight checks
        commands:
          - make ci-preflight-checks
- name: Publish tigera/snort3 images
  run:
    when: "true or change_in(['/third_party/snort3'], {exclude: ['/**/.gitignore', '/**/README.md', '/**/LICENSE'], pipeline_file: 'ignore'})"
  dependencies:
    - Prerequisites
  task:
    agent:
      machine:
        type: f1-standard-2
        os_image: ubuntu2004
    secrets:
      - name: google-service-account-for-gcr
    prologue:
      commands:
        - docker login --username casey@tigera.io -u _json_key -p "$(cat ~/secrets/secret.google-service-account-key.json)" https://gcr.io
    jobs:
      - name: Linux amd64
        commands:
          - make -C third_party/snort3 cd ARCHES=amd64 CONFIRM=true
- name: Publish tigera/snort3 images - native arm64 runner
  run:
    when: "true or change_in(['/third_party/snort3'], {exclude: ['/**/.gitignore', '/**/README.md', '/**/LICENSE'], pipeline_file: 'ignore'})"
  dependencies:
    - Prerequisites
  task:
    agent:
      machine:
        type: s1-aws-arm64-2
    secrets:
      - name: google-service-account-for-gcr
    prologue:
      commands:
        - docker login --username casey@tigera.io -u _json_key -p "$(cat ~/secrets/secret.google-service-account-key.json)" https://gcr.io
    jobs:
      - name: Linux arm64
        commands:
          - make -C third_party/snort3 cd ARCHES=arm64 CONFIRM=true
- name: Publish tigera/snort3 multi-arch manifests
  run:
    when: "true or change_in(['/third_party/snort3'], {exclude: ['/**/.gitignore', '/**/README.md', '/**/LICENSE'], pipeline_file: 'ignore'})"
  dependencies:
    - Publish tigera/snort3 images
    - Publish tigera/snort3 images - native arm64 runner
  task:
    secrets:
      - name: google-service-account-for-gcr
    prologue:
      commands:
        - docker login --username casey@tigera.io -u _json_key -p "$(cat ~/secrets/secret.google-service-account-key.json)" https://gcr.io
    jobs:
      - name: Linux multi-arch manifests
        commands:
          - make -C third_party/snort3 push-manifest CONFIRM=true

- name: deep-packet-inspection
  run:
    when: "true or change_in(['/*', '/deep-packet-inspection/', '/api/', '/libcalico-go/', '/lma/', '/third_party/snort3', '/typha/'], {exclude: ['/**/.gitignore', '/**/README.md', '/**/LICENSE']})"
  dependencies:
    - Publish tigera/snort3 multi-arch manifests
  task:
    secrets:
      - name: google-service-account-for-gcr
    prologue:
      commands:
        - docker login --username casey@tigera.io -u _json_key -p "$(cat ~/secrets/secret.google-service-account-key.json)" https://gcr.io
        - cd deep-packet-inspection
    jobs:
      - name: deep-packet-inspection tests
        commands:
          - ../.semaphore/run-and-monitor ci.log make ci
      - name: Build binary
        matrix:
          - env_var: ARCH
            values:
              - arm64
        commands:
          - ../.semaphore/run-and-monitor build-$ARCH.log make build ARCH=$ARCH
- name: Publish tigera/elasticsearch images
  run:
    when: "true or change_in(['/third_party/elasticsearch'], {exclude: ['/**/.gitignore', '/**/README.md', '/**/LICENSE'], pipeline_file: 'ignore'})"
  dependencies:
    - Prerequisites
  task:
    agent:
      machine:
        type: f1-standard-2
        os_image: ubuntu2004
    secrets:
      - name: google-service-account-for-gcr
    prologue:
      commands:
        - docker login --username casey@tigera.io -u _json_key -p "$(cat ~/secrets/secret.google-service-account-key.json)" https://gcr.io
    jobs:
      - name: Linux amd64
        commands:
          - make -C third_party/elasticsearch cd ARCHES=amd64 CONFIRM=true
- name: Publish tigera/elasticsearch images - native arm64 runner
  run:
    when: "true or change_in(['/third_party/elasticsearch'], {exclude: ['/**/.gitignore', '/**/README.md', '/**/LICENSE'], pipeline_file: 'ignore'})"
  dependencies:
    - Prerequisites
  task:
    agent:
      machine:
        type: s1-aws-arm64-2
    secrets:
      - name: google-service-account-for-gcr
    prologue:
      commands:
        - docker login --username casey@tigera.io -u _json_key -p "$(cat ~/secrets/secret.google-service-account-key.json)" https://gcr.io
    jobs:
      - name: Linux arm64
        commands:
          - make -C third_party/elasticsearch cd ARCHES=arm64 CONFIRM=true
- name: Publish tigera/elasticsearch multi-arch manifests
  run:
    when: "true or change_in(['/third_party/elasticsearch'], {exclude: ['/**/.gitignore', '/**/README.md', '/**/LICENSE'], pipeline_file: 'ignore'})"
  dependencies:
    - Publish tigera/elasticsearch images
    - Publish tigera/elasticsearch images - native arm64 runner
  task:
    secrets:
      - name: google-service-account-for-gcr
    prologue:
      commands:
        - docker login --username casey@tigera.io -u _json_key -p "$(cat ~/secrets/secret.google-service-account-key.json)" https://gcr.io
    jobs:
      - name: Linux multi-arch manifests
        commands:
          - make -C third_party/elasticsearch push-manifest CONFIRM=true

- name: elasticsearch
  run:
    when: "true or change_in(['/*', '/elasticsearch/', '/third_party/elasticsearch'], {exclude: ['/**/.gitignore', '/**/README.md', '/**/LICENSE']})"
  dependencies:
    - Publish tigera/elasticsearch multi-arch manifests
  task:
    secrets:
      - name: google-service-account-for-gcr
    prologue:
      commands:
        - docker login --username casey@tigera.io -u _json_key -p "$(cat ~/secrets/secret.google-service-account-key.json)" https://gcr.io
        - cd elasticsearch
    jobs:
      - name: elasticsearch tests
        commands:
          - ../.semaphore/run-and-monitor ci.log make ci
      - name: Build binary
        matrix:
          - env_var: ARCH
            values:
              - arm64
        commands:
          - ../.semaphore/run-and-monitor build-$ARCH.log make build ARCH=$ARCH
- name: Publish tigera/fluentd-base images
  run:
    when: "true or change_in(['/third_party/fluentd-base'], {exclude: ['/**/.gitignore', '/**/README.md', '/**/LICENSE'], pipeline_file: 'ignore'})"
  dependencies:
    - Prerequisites
  task:
    agent:
      machine:
        type: f1-standard-2
        os_image: ubuntu2004
    secrets:
      - name: google-service-account-for-gcr
    prologue:
      commands:
        - docker login --username casey@tigera.io -u _json_key -p "$(cat ~/secrets/secret.google-service-account-key.json)" https://gcr.io
    jobs:
      - name: Linux amd64
        commands:
          - make -C third_party/fluentd-base cd ARCHES=amd64 CONFIRM=true
- name: Publish tigera/fluentd-base images - native arm64 runner
  run:
    when: "true or change_in(['/third_party/fluentd-base'], {exclude: ['/**/.gitignore', '/**/README.md', '/**/LICENSE'], pipeline_file: 'ignore'})"
  dependencies:
    - Prerequisites
  task:
    agent:
      machine:
        type: s1-aws-arm64-2
    secrets:
      - name: google-service-account-for-gcr
    prologue:
      commands:
        - docker login --username casey@tigera.io -u _json_key -p "$(cat ~/secrets/secret.google-service-account-key.json)" https://gcr.io
    jobs:
      - name: Linux arm64
        commands:
          - make -C third_party/fluentd-base cd ARCHES=arm64 CONFIRM=true
- name: Publish tigera/fluentd-base multi-arch manifests
  run:
    when: "true or change_in(['/third_party/fluentd-base'], {exclude: ['/**/.gitignore', '/**/README.md', '/**/LICENSE'], pipeline_file: 'ignore'})"
  dependencies:
    - Publish tigera/fluentd-base images
    - Publish tigera/fluentd-base images - native arm64 runner
  task:
    secrets:
      - name: google-service-account-for-gcr
    prologue:
      commands:
        - docker login --username casey@tigera.io -u _json_key -p "$(cat ~/secrets/secret.google-service-account-key.json)" https://gcr.io
    jobs:
      - name: Linux multi-arch manifests
        commands:
          - make -C third_party/fluentd-base push-manifest CONFIRM=true

- name: fluentd
  run:
    when: "true or change_in(['/fluentd', '/third_party/fluentd-base'], {exclude: ['/**/.gitignore', '/**/README.md', '/**/LICENSE']})"
  dependencies:
    - Publish tigera/fluentd-base multi-arch manifests
  task:
    secrets:
      - name: google-service-account-for-gcr
    prologue:
      commands:
        - docker login --username casey@tigera.io -u _json_key -p "$(cat ~/secrets/secret.google-service-account-key.json)" https://gcr.io
        - cd fluentd
    jobs:
      - name: fluentd tests
        commands:
          - ../.semaphore/run-and-monitor ci.log make ci
      - name: Build binary
        matrix:
          - env_var: ARCH
            values:
              - arm64
        commands:
          - ../.semaphore/run-and-monitor build-$ARCH.log make build ARCH=$ARCH

- name: Publish tigera/fluentd-base Windows images
  run:
    when: "true or change_in(['/fluentd/', '/third_party/fluentd-base'], {exclude: ['/**/.gitignore', '/**/README.md', '/**/LICENSE'], pipeline_file: 'ignore'})"
  dependencies:
    - Prerequisites
  execution_time_limit:
    hours: 2
  task:
    secrets:
      - name: banzai-secrets
    prologue:
      commands:
        # Login to docker in order to pull images.
        - docker login -u _json_key -p "$(cat ~/secrets/banzai-google-service-account.json)" https://gcr.io
        # Clone the process repo and provision Windows instances.
        - pushd .
        - git clone git@github.com:tigera/process.git ~/process
        - cd ~/process/testing/windows-instances
        - PREFIX=${SEMAPHORE_PROJECT_NAME}-${SEMAPHORE_WORKFLOW_ID} ./create-windows-instances.sh
        # Save windows-instances terraform.
        - tar czf ~/windows-tf.tar.gz -C ~/process/testing/windows-instances .
        - artifact push job --expire-in 2w ~/windows-tf.tar.gz
        - popd
        - cd fluentd
    epilogue:
      always:
        commands:
          - cd ~/process/testing/windows-instances
          - PREFIX=${SEMAPHORE_PROJECT_NAME}-${SEMAPHORE_WORKFLOW_ID} ./create-windows-instances.sh -u
    jobs:
      - name: Windows amd64
        commands:
          - export PROCESS_REPO=~/process/testing/windows-instances
          - BASE=true CONFIRM=true .semaphore/windows-cd.sh
- name: Publish tigera/fluentd-base Windows multi-arch manifests
  run:
    when: "true or change_in(['/fluentd/', '/third_party/fluentd-base'], {exclude: ['/**/.gitignore', '/**/README.md', '/**/LICENSE'], pipeline_file: 'ignore'})"
  dependencies:
    - Publish tigera/fluentd-base Windows images
  task:
    secrets:
      - name: google-service-account-for-gcr
    prologue:
      commands:
        - docker login --username casey@tigera.io -u _json_key -p "$(cat ~/secrets/secret.google-service-account-key.json)" https://gcr.io
    jobs:
      - name: Windows multi-arch manifests
        commands:
          - make -C third_party/fluentd-base push-windows-manifest CONFIRM=true

- name: fluentd Windows
  run:
    when: "true or change_in(['/fluentd/', '/third_party/fluentd-base'], {exclude: ['/**/.gitignore', '/**/README.md', '/**/LICENSE']})"
  dependencies:
    - Publish tigera/fluentd-base Windows multi-arch manifests
  task:
    agent:
      machine:
        type: f1-standard-2
        os_image: ubuntu2004
    secrets:
      - name: google-service-account-for-gcr
    prologue:
      commands:
        - docker login --username casey@tigera.io -u _json_key -p "$(cat ~/secrets/secret.google-service-account-key.json)" https://gcr.io
        - cd fluentd
    jobs:
      - name: build windows image
        commands:
          - ../.semaphore/run-and-monitor build-windows.log make image-windows

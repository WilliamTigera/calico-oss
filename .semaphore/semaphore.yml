version: v1.0
name: Kibana Docker Image

execution_time_limit:
  hours: 4

agent:
  machine:
    type: e1-standard-8
    os_image: ubuntu1804

global_job_config:
  env_vars:
    - name: KIBANA_IMAGE_NAME
      value: docker.elastic.co/kibana/kibana
    - name: KIBANA_IMAGE_TAR_PATH
      value: /tmp/kibana-image.tar
  secrets:
    - name: docker-hub
    # Mount the github SSH secret for pulling private repositories.
    - name: private-repo
    # Mount a secret for pulling images from GCR.
    - name: tigera-dev-ci-pull-credentials
  prologue:
    commands:
      - echo $DOCKERHUB_PASSWORD | docker login --username "$DOCKERHUB_USERNAME" --password-stdin
      # Correct permissions since they are too open by default:
      - chmod 0600 ~/.keys/*
      # Add the key to the ssh agent:
      - ssh-add ~/.keys/*
      # Login to docker in order to pull images.
      - docker login --username casey@tigera.io -u _json_key -p "$(cat /home/semaphore/tigera-dev-ci.json)" https://gcr.io
      - checkout
      - git submodule init
      - git submodule update
      - export KIBANA_VERSION=$(jq -r '.version' kibana/package.json)
      - export KIBANA_IMAGE_CACHE_KEY=kibana-image-${SEMAPHORE_GIT_SHA}

blocks:
  - name: 'Build Image'
    dependencies: []
    task:
      jobs:
        - name: Build
          execution_time_limit:
            minutes: 90
          commands:
            - make kibana-image
            - make image # Test that the image builds correctly
            - docker save -o ${KIBANA_IMAGE_TAR_PATH} ${KIBANA_IMAGE_NAME}:${KIBANA_VERSION}
            - cache store ${KIBANA_IMAGE_CACHE_KEY} ${KIBANA_IMAGE_TAR_PATH}

  - name: 'Push Images (non-PR builds only)'
    dependencies: ["Build Image"]
    skip:
      # Only run on branches, not PRs.
      when: "branch !~ '.+'"
    task:
      secrets:
        - name: google-service-account-for-gcr
      prologue:
        commands:
          # Correct permissions since they are too open by default:
          - chmod 0600 ~/.keys/*
          # Add the key to the ssh agent:
          - ssh-add ~/.keys/*
          # Login to docker in order to pull images.
          - docker login --username casey@tigera.io -u _json_key -p "$(cat ~/secrets/secret.google-service-account-key.json)" https://gcr.io
          # Restore the kibana image created from the build block
          - cache restore ${KIBANA_IMAGE_CACHE_KEY}
          - docker load -i ${KIBANA_IMAGE_TAR_PATH}
      jobs:
        - name: Run CD
          execution_time_limit:
            minutes: 30
          commands:
            - export BRANCH_NAME=$SEMAPHORE_GIT_BRANCH
            - if [ -z "${SEMAPHORE_GIT_PR_NUMBER}" ]; then make cd CONFIRM=true; fi
          env_vars:
            # Set this explicitly so that in case the defaults change, we will still not
            # accidentally enable the integration
            - name: GTM_INTEGRATION
              value: disabled
        - name: Run CD (Tesla)
          execution_time_limit:
            minutes: 30
          commands:
            - export BRANCH_NAME=$SEMAPHORE_GIT_BRANCH
            - if [ -z "${SEMAPHORE_GIT_PR_NUMBER}" ]; then make cd CONFIRM=true; fi
          env_vars:
            - name: IMAGETAG_PREFIX
              value: tesla
            - name: GTM_INTEGRATION
              value: enabled
